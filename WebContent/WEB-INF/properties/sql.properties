#control no-1220377581/ 2510061979 / 2510056218- 27-6-1995     #https://happycoding.io/tutorials/google-cloud/translation
# Query for index circle number shown https://7starhd.actor/      //	https://filmygallery.baby/        SB/2024140577 Kedar Kumar  Rajendra Ray
 
pfmsInvoiceStateData=from PfmsInvoiceData where stCode=:stCode
pfmsInvoiceInvoiceData=from PfmsInvoiceData where invoiceno=:invoiceNo
pfmsInvoiceDistrictData=from PfmsInvoiceData where distCode=:distCode
pfmsInvoiceData=from PfmsInvoiceData
getUserState=select u.iwmpState from UserMap as u where u.userReg.userId=:login order by u.iwmpState.stName
#circle_figure=select cast(sum(waterh_newly+waterh_newly_st+waterh_newly_other) as varchar) as waterh_newly, cast(sum(waterh_rennovated+waterh_rennovated_other+waterh_rennovated_st) as varchar) as waterh_rennovated, cast(sum(additional_area+additional_area_st+additional_area_other) as varchar) as additional_area, cast(sum(farmer_sc+ farmer_st+ farmer_other) as varchar) as farmer, cast(sum(CASE WHEN fin_yr_cd >=18 THEN area_plant_sc+ area_plant_st+ area_plant_other ELSE 0 END) as varchar) AS area_plant, cast(sum(CASE WHEN fin_yr_cd >=18 THEN cul_wastland_sc+ cul_wastland_st+ cul_wastland_other ELSE 0 END) as varchar) AS ul_wastland, cast(sum(CASE WHEN fin_yr_cd >=18 THEN employment_sc+ employment_st+ employment_other ELSE 0 END) as varchar) AS employment, (select fin_yr_desc from iwmp_m_fin_year mf where mf.fin_yr_cd=q.fin_yr_cd) FROM iwmp_state_wise_quarterly_achievement_wdcpmksy_indicator q where case when (extract(month from now())>=7 and extract(day from now())>15) then fin_yr_cd=(cast(right(cast(extract(year from now()) as varchar(4)),2) as int8)) else fin_yr_cd=(cast(right(cast(extract(year from now()) as varchar(4)),2) as int8))-1 end and q.status='Complete' group by fin_yr_cd
#circle_figure = select cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =4),0) as character varying) as whsnew, cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =5),0) as character varying)as whsrenovate, cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =1),0)as character varying) as afforestation, cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =2),0)as character varying) as horticulture, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =1),0)as character varying) as degradedland, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =5),0)as character varying) as nilsingle, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =6),0)as character varying) as mandays, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =8),0)as character varying) as croppedarea, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =9),0)as character varying) as farmersbenefited 
#circle_figure = select cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Water Harvesting Structure (New created)')),0) as character varying) as whsnew,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Water Harvesting Structure (Renovated)')),0) as character varying)as whsrenovate,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Area brought under Afforestation / Agriculture / Pasture etc.')),0)as character varying) as afforestation, cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and h.head_code=act.head_code and  UPPER(h.head_desc) =UPPER('Area brought under Horticulture')),0)as character varying) as horticulture, cast(COALESCE((select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='DEGRADED LAND' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'),0)as character varying) as degradedland, cast(COALESCE((select sum(crop_area) from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='RAINFED' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'),0)as character varying) as rainfed, cast(COALESCE((select sum(area) from bls_out_main_achiev where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) != 'No Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'No Crop')) ),0)as character varying) as nilsingle,cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =6),0)as character varying) as mandays, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =8),0)as character varying) as croppedarea, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =9),0)as character varying) as farmersbenefited,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Springsheds rejuvenated)')),0) as character varying) as springshedreju,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Area covered under Soil and Moisture conservation activities')),0)as character varying) as soilmoistureconservation,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Vegetative and Engineering Structure')),0)as character varying) as vegetative,cast(COALESCE((select sum(area) from bls_out_main_achiev where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) = 'Double Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'Single Crop')) ),0)as character varying) as silgledouble,cast(COALESCE((select sum(area) from bls_out_main_achiev where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) = 'Multiple Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'Double Crop')) ),0)as character varying) as doublemultiple,cast(COALESCE(((select sum(avg_income) from bls_out_detail_crop where bls_out_detail_id in(select bls_out_detail_id from bls_out_detail_crop_achiev ) )/(select sum(avg_income) from bls_out_detail_crop_achiev )*100),0) as character varying) as increasefarmerincomepercentage,cast(COALESCE(((select sum(crop_area) from bls_out_detail_crop_achiev )-(select sum(crop_area) from bls_out_detail_crop where bls_out_detail_id in(select bls_out_detail_id from bls_out_detail_crop_achiev ) )),0) as character varying) as increasecroparea,cast(COALESCE((select sum(area) from bls_out_main_achiev where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) = 'Single Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'No Crop')) ),0)as character varying) as niltosingle
#Hcircle_figure=select cast(cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Water Harvesting Structure (New created)')),0) as integer) as character varying) as whsnew,cast(cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Water Harvesting Structure (Renovated)')),0) as integer) as character varying)as whsrenovate,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Area brought under Afforestation / Agriculture / Pasture etc.')),0)as character varying) as afforestation, cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and h.head_code=act.head_code and  UPPER(h.head_desc) =UPPER('Area brought under Horticulture')),0)as character varying) as horticulture, cast(COALESCE((select sum(bm.area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id  and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='DEGRADED LAND' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'),0)- COALESCE((select sum(bm.area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and   mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='DEGRADED LAND' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'),0) as character varying) degradedland, cast(COALESCE((select sum(bm.area) from iwmp_district d,iwmp_m_project p, bls_out_main bm,bls_out_detail boutdet, m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='RAINFED' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'),0)-COALESCE((select sum(bm.area) from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='RAINFED' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'),0)as character varying) as rainfed, cast(COALESCE((select sum(area) from bls_out_main_achiev where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) != 'No Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'No Crop')) ),0)as character varying) as nilsingle,cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =6),0)as character varying) as mandays, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =8),0)as character varying) as croppedarea, cast(COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det,wdcpmksy_m_outcome head where ach.achievement_id=det.achievement_id and det.outcome_id=head.outcome_id and ach.status='C' and head.outcome_id =9),0)as character varying) as farmersbenefited,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Springsheds rejuvenated)')),0) as character varying) as springshedreju,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Area covered under Soil and Moisture conservation activities')),0)as character varying) as soilmoistureconservation,cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and  act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Vegetative and Engineering Structure')),0)as character varying) as vegetative,cast(COALESCE((select sum(area) from bls_out_main_achiev where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) = 'Double Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'Single Crop')) ),0)as character varying) as silgledouble,cast(COALESCE((select sum(area) from bls_out_main_achiev where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) = 'Multiple Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'Double Crop')) ),0)as character varying) as doublemultiple,cast(COALESCE(((select sum(avg_income) from bls_out_detail_crop where bls_out_detail_id in(select bls_out_detail_id from bls_out_detail_crop_achiev ) )/(select sum(avg_income) from bls_out_detail_crop_achiev )*100),0) as character varying) as increasefarmerincomepercentage,cast(COALESCE(((select sum(crop_area) from bls_out_detail_crop_achiev )-(select sum(crop_area) from bls_out_detail_crop where bls_out_detail_id in(select bls_out_detail_id from bls_out_detail_crop_achiev ) )),0) as character varying) as increasecroparea,cast(COALESCE((select sum(area) from bls_out_main_achiev where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) = 'Single Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'No Crop')) ),0)as character varying) as niltosingle  
circle_figure=select cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement pa, wdcpmksy_project_phy_ach_details ad where pa.achievement_id=ad.achievement_id and status='C' and activity_code in(13,14,15,16,17)),0.00)as character varying) as area_soilmoisture_activities_achie,  cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement pa, wdcpmksy_project_phy_ach_details ad where pa.achievement_id=ad.achievement_id and status='C' and activity_code in(1,2,3,4,5,6,7,10,11,12)),0.00)as character varying) as area_afforestation_horticulture_achie, cast(cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement pa, wdcpmksy_project_phy_ach_details ad where pa.achievement_id=ad.achievement_id and status='C' and activity_code in(18,19,20,21,22,23,24,48,25,26,27,28,29,30,31,49)),0) as Integer) as character varying)  as water_created_renovated_achie, cast(COALESCE((select sum(achievement) from wdcpmksy_project_phy_achievement pa, wdcpmksy_project_phy_ach_details ad where pa.achievement_id=ad.achievement_id 	and status='C' and activity_code in(32,33,34,35,36,37,38,40)),0.00)as character varying) as protective_irrigation_achie, cast((select COALESCE(sum(coalesce(t.farmer_sc,0) + coalesce(t.farmer_st,0) + coalesce(t.others,0)), 0) from outcome_2_data t where t.status='C') as character varying) farmer_benefitted_achie, cast((select sum(coalesce(t.man_day_gen,0)) from outcome_2_data t where t.status='C') as character varying) man_days_gen, cast((select sum(coalesce(t.degraded_rainfed,0)) from outcome_2_data t where t.status='C' ) as character varying) degraded_rainfed 

# Query for index Alert & Success Stories
#getAlert=select dtl.id as id, dtl.subject as subject, dtl.path as path, dtl.fileName as fileName, dtl.fileExtension as fileExtension, dtl.dateOfPublish as dateOfPublish, dtl.isNew as isNew, dtl.uploadCategory as uploadCategory from IwmpUserUploadDetails dtl, IwmpUploadCategory cat where dtl.uploadCategory=cat.uploadCategory and dtl.publish='t' and cat.uploadCategory in ('Alert','Circular','Message')  order by dtl.isNew desc, dtl.updatedDate desc
getAlert=select dtl.id as id, dtl.subject as subject, dtl.path as path, dtl.fileName as fileName, dtl.fileExtension as fileExtension, dtl.dateOfPublish as dateOfPublish, dtl.isNew as isNew, cat as iwmpUploadCategory,dtl.updatedDate as updatedDate from IwmpUserUploadDetails dtl, IwmpUploadCategory cat where dtl.iwmpUploadCategory.id=cat.id and dtl.publish=true and cat.uploadCategory in ('Alert','Circular','Message')  order by dtl.isNew desc, dtl.updatedDate desc
getlangAlert=select dtl.id as id, dtl.subject as subject, dtl.path as path, dtl.fileName as fileName, dtl.fileExtension as fileExtension, dtl.dateOfPublish as dateOfPublish, dtl.isNew as isNew, cat as iwmpUploadCategory,dtl.updatedDate as updatedDate from IwmpUserUploadDetails dtl, IwmpUploadCategory cat where dtl.iwmpUploadCategory.id=cat.id and dtl.language = :lang and dtl.publish=true and cat.uploadCategory in ('Alert','Circular','Message')  order by dtl.isNew desc, dtl.updatedDate desc
getStories=select dtl.id as id, dtl.subject as subject, dtl.path as path, dtl.fileName as fileName, dtl.fileExtension as fileExtension, dtl.dateOfPublish as dateOfPublish, dtl.isNew as isNew, dtl.iwmpUploadCategory as iwmpUploadCategory,dtl.updatedDate as updatedDate from IwmpUserUploadDetails dtl where UPPER(dtl.iwmpUploadCategory.uploadCategory)=UPPER('Success Stories') and dtl.fileExtension='pdf' order by dtl.updatedDate desc
# Query to fetch data for Gallery page
#gallery_data=select cast(file.st_code as varchar) as stCode,state.st_name as stName,file.subject,file.path,file.file_name as fileName from (select dtl.subject,dtl.path,dtl.st_code,dtl.file_name from iwmp_user_upload_details dtl where dtl.upload_Category_id=8 and UPPER(file_extension)='JPG') as file, (select st_code,st_name from iwmp_state) as state where file.st_code=state.st_code and state.st_code=:stCode order by state.st_name
#gallery_data= select cast(a.st_code as varchar) as stCode,a.st_name as stName,a.subject,a.path,a.file_name as fileName from (select dtl.subject, dtl.path,dtl.st_code,dtl.file_name,st.st_name from iwmp_user_upload_details dtl left join iwmp_state st on dtl.st_code=st.st_code where dtl.upload_Category_id=8 and (UPPER(file_extension)='JPG' or UPPER(file_extension)='PNG') and dtl.st_code=:stCode) a 
gallery_data = select cast(a.st_code as varchar) as stCode,a.st_name as stName,a.subject,a.path,a.file_name as fileName from (select dtl.subject, dtl.path,dtl.st_code,dtl.file_name,st.st_name from iwmp_user_upload_details dtl left join iwmp_state st on dtl.st_code=st.st_code where dtl.upload_Category_id=8 and (UPPER(file_extension)='JPG' or UPPER(file_extension)='PNG') and dtl.st_code=(case when :stCode=0 then dtl.st_code else :stCode end) and publish=true) a
gallery_data_index=select cast(a.st_code as varchar) as stCode,a.st_name as stName,a.subject,a.path,a.file_name as fileName from (select distinct on (st_code) dtl.subject, dtl.path,dtl.st_code,dtl.file_name,st.st_name from iwmp_user_upload_details dtl left join iwmp_state st on dtl.st_code=st.st_code where dtl.upload_Category_id=8 and (UPPER(file_extension)='JPG' or UPPER(file_extension)='PNG')) a
#gallery_data_index=select  cast(state.st_code as varchar) as stCode,state.st_name as stName,file.subject,file.path,file.file_name as fileName from (select distinct on (st_code) dtl.subject,dtl.path, dtl.st_code,dtl.file_name from iwmp_user_upload_details dtl where dtl.upload_Category_id=8 and UPPER(file_extension)='JPG') as file, (select st_code,st_name from iwmp_state) as state where file.st_code=state.st_code order by state.st_name
#gallery_all_files=select cast(state.st_code as varchar) as stCode,state.st_name as stName,file.subject,file.path,file.file_name as fileName from (select distinct on (st_code) dtl.subject,dtl.path,dtl.st_code,dtl.file_name from iwmp_user_upload_details dtl where dtl.upload_Category='d' and UPPER(file_extension)='JPG') as file, (select st_code,st_name from iwmp_state) as state where file.st_code=state.st_code order by state.st_name
gallery_all_files= select cast(a.st_code as varchar) as stCode,a.st_name as stName,a.subject,a.path,a.file_name as fileName from (select distinct on (st_code) dtl.subject, dtl.path,dtl.st_code,dtl.file_name,st.st_name from iwmp_user_upload_details dtl left join iwmp_state st on dtl.st_code=st.st_code where dtl.upload_Category_id=8 and (UPPER(file_extension)='JPG' or UPPER(file_extension)='PNG')) a 
chkUserName = select count(user_id) from iwmp_user_reg where UPPER(user_id) = UPPER(:loginid)

chkloginuser = select  loginid from (select loginid,extract(hour from (now() - login_dt)) as myhr, extract(minute from (now() - login_dt)) as mymin from iwmp_login_log where login_dt=(select MAX(login_dt)from iwmp_login_log where ip_address = :ipadd group by login_dt order by login_dt desc limit 1) and login_sts = 'success' and  ip_address = :ipadd) as foo where foo.myhr = 0 and mymin <= 10 limit 1
chkLoginLock = select count(*) from (select extract(hour from (now() - login_dt)) as myhr, extract(minute from (now() - login_dt)) as mymin from iwmp_login_log where loginid = :loginid and to_char(login_dt,'MM-DD-YYYY') = to_char(now(),'MM-DD-YYYY') and login_sts = 'failed' and user_sts = 'L') as foo where foo.myhr = 0 and mymin <= 10

# Query for User Registration
projlist=from Project p WHERE p.stateCd =:stcd and p.districtCd=:distcd order by projectSeqNo, projName asc
maxregid=Select coalesce(max(reg.regId),0)+1 from UserReg reg
getProfile=from UserReg where regId=:regid 
getMapAdminst=select cast(st_code as Integer) as stateCode from iwmp_user_map where reg_id=:regid order by stateCode
getMapState=select cast(st_code as Integer) as stateCode, st_name as stateName from iwmp_state where st_code in (select st_code from iwmp_user_map where reg_id=:regid) order by stateCode
#getMapDistrict=select cast(st_code as Integer) as stateCode,(select st_name from iwmp_state s where s.st_code=d.st_code)as stateName,cast(dist_code as Integer)as districtCode, dist_name as districtName from iwmp_district d where dist_code in(select dist_code from iwmp_user_map where reg_id=:regid) and st_code in (select st_code from iwmp_user_map where reg_id=:regid) order by stateCode
getMapDistrict=select cast(st_code as Integer) as stateCode,(select st_name from iwmp_state s where s.st_code=d.st_code)as stateName, cast(dcode as Integer)as districtCode, dist_name as districtName from iwmp_district d where dcode in (select dcode from iwmp_user_map where reg_id=:regid) and st_code in (select st_code from iwmp_user_map where reg_id=:regid) order by stateCode
#getMapProject=select cast(m.st_code as Integer) as stateCode, (select st_name from iwmp_state s where s.st_code=m.st_code)as stateName, cast(m.dist_code as Integer)as districtCode, (select dist_name from iwmp_district d where d.st_code=m.st_code and d.dist_code=m.dist_code) as districtName, m.proj_code as projectcode, (select proj_name from iwmp_m_project p where p.state_cd=m.st_code and p.district_cd=m.dist_code and p.project_cd=m.proj_code) as projectname from iwmp_user_map m where reg_id=:regid
getMapProject=select distinct cast(m.st_code as Integer) as stateCode, (select st_name from iwmp_state s where s.st_code=m.st_code)as stateName, cast(m.dcode as Integer)as districtCode, (select dist_name from iwmp_district d where d.st_code=m.st_code and d.dcode=m.dcode) as districtName, pm.proj_id as projectcode, (select proj_name from iwmp_m_project p where  p.dcode=m.dcode and p.proj_id=pm.proj_id) as projectname from iwmp_user_map m, iwmp_user_project_map pm where m.reg_id=pm.reg_id and m.reg_id=:regid order by projectname
# Query for Login
getUserByRegIdForUserBean=select cast(userMap.st_code as Integer) as stateCode,cast(userMap.dcode as Integer) as districtCode,cast(userReg.reg_id as Integer)as regId,user_id as userId,user_name as userName, user_type as userType,designation as userDesignation,status as userStatus, department as userDepartment,phone_no as userPhoneNo,mobile_no as userMobileNo,fax_no as userFaxNo,email as userEmailId  from iwmp_user_reg userReg,iwmp_user_map userMap where userReg.reg_id=userMap.reg_id and userReg.reg_id=:regId
#LoginQry=select user_name, user_type, pia_name, pia_type, first_login, case when user_type = 'DL' OR user_type = 'ADMIN' then 0 else (select distinct st_code from iwmp_user_map where reg_id = ureg.reg_id) end as state_map, rolemap.home_page as home_page, role_name,rolemap.role_id, reg_id, (select st_name from iwmp_state where st_code in (select distinct st_code from iwmp_user_map where reg_id = ureg.reg_id))as stname from iwmp_user_reg ureg, iwmp_m_institutional_type, iwmp_user_app_role_map, iwmp_app_role_map rolemap where upper(ureg.user_id) = upper(:userid) and (ENCODE(DIGEST(concat(encrypted_pass,:salt),'sha512'),'hex') =:pwd OR ENCODE(DIGEST(concat(encrypted_pass_second,:salt),'sha512'),'hex') = :pwd) and (Lower(disable) <> Lower('DISABLE') or disable is null) and Lower(status)=Lower('ACTIVE') and institutional_type_cd = user_type and (iwmp_user_app_role_map.role_id=rolemap.role_id) and iwmp_user_app_role_map.user_id=ureg.user_id
LoginQry=select user_name, user_type, user_name as pia_name, pia_type, first_login, case when user_type = 'DL' OR user_type = 'ADMIN' then 0 else (select distinct st_code from iwmp_user_map where reg_id = ureg.reg_id) end as state_map, rolemap.home_page as home_page, role_name,rolemap.role_id, reg_id, case when user_type = 'DL' OR user_type = 'ADMIN' then null else (select distinct st_name from iwmp_state where st_code in (select distinct st_code from iwmp_user_map where reg_id = ureg.reg_id)) end as stname from iwmp_user_reg ureg, iwmp_m_institutional_type, iwmp_user_app_role_map, iwmp_app_role_map rolemap where upper(ureg.user_id) = upper(:userid) and (ENCODE(DIGEST(concat(encrypted_pass,:salt),'sha512'),'hex') =:pwd OR ENCODE(DIGEST(concat(encrypted_pass_second,:salt),'sha512'),'hex') = :pwd) and (Lower(disable) <> Lower('DISABLE') or disable is null) and Lower(status)=Lower('ACTIVE') and institutional_type_cd = user_type and (iwmp_user_app_role_map.role_id=rolemap.role_id) and iwmp_user_app_role_map.user_id=ureg.user_id 
loginuser=SELECT iwmp_user_reg.reg_id,(select st_name from iwmp_state where st_code  =iwmp_user_map.st_code) as st_name, (select dist_name from iwmp_district where st_code=iwmp_user_map.st_code and dist_code=iwmp_user_map.dist_code) as dist_name ,user_id, user_name, user_type, designation, profile_id, department, per_address, cur_address , phone_no, mobile_no, fax_no, extension_no, email, emp_code, iwmp_user_reg.creator_id, iwmp_user_reg.creation_date, authorizer_id , authorization_date, updator_id, updation_date, status, remark, encrypted_pass, pia_name, pia_type, pia_head, disable, first_login, paswd_modify  FROM iwmp_user_reg,iwmp_user_map where iwmp_user_reg.reg_id=iwmp_user_map.reg_id and  (Lower(disable) <> Lower('DISABLE') or disable is null) and Lower(status)=Lower('ACTIVE') and upper(user_id) = upper(:userid) and (ENCODE(DIGEST(concat(encrypted_pass,:salt),'sha512'),'hex') =:pwd OR ENCODE(DIGEST(concat(encrypted_pass_second,:salt),'sha512'),'hex') = :pwd)
chkFailLoginCounter = select  cast(count(*) as Integer) from (select extract(hour from (now() - login_dt)) as myhr, extract(minute from (now() - login_dt)) as mymin from iwmp_login_log where loginid = :loginid and to_char(login_dt,'MM-DD-YYYY') = to_char(now(),'MM-DD-YYYY') and login_sts = 'failed') as foo where foo.myhr = 0 and mymin <= 30
CheckLoginuser = select loginid as userid,(SELECT user_name FROM iwmp_user_reg WHERE user_id = loginid) as userName, (select distinct st.st_name from iwmp_user_reg reg,iwmp_user_map map, iwmp_state st where reg.user_id=loginid and  reg.reg_id=map.reg_id  and map.st_code=st.st_code LIMIT 1) as stateName,(select distinct dt.dist_name from iwmp_user_reg reg,iwmp_user_map map, iwmp_state st,iwmp_district dt where reg.user_id=loginid and  reg.reg_id=map.reg_id and map.st_code=st.st_code and st.st_code=dt.st_code and map.dist_code=dt.dist_code LIMIT 1 ) as distName ,to_char(login_dt,'dd/mm/yyyy hh:mi:ss AM') as logintime ,ip_address as requestIP ,session_id as sessionId from (select distinct log.loginid,log.login_dt,log.ip_address,(case  when (select count(*)  from iwmp_login_log st where st.login_dt>log.login_dt and  st.loginid=log.loginid and st.ip_address=log.ip_address and st.user_agent=log.user_agent and st.login_sts in ('success','Logout Successful','failed','Session Time Out'))>0 Then 'Logout' ELSE 'login' END) as status,session_id  from iwmp_login_log  log where log.login_sts='success' and log.login_dt>=current_timestamp - interval '7 hours' order by log.login_dt desc) aaa where aaa.status='login' 
#Query for fetch menu
#getMenu=select user_id as userId,cast(b.menu_id as Integer) as menuId,MENU_NAME as menuName,cast(PARENT_ID as Integer) as parentId,(select MENU_NAME from iwmp_menu where MENU_ID= c.PARENT_ID) as parentName,case when position('.do' in target) > 0 then cast(RTRIM(SUBSTRING (target,1,position('.do' in target) ),'.') as character varying) else target end as target,cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_menu as sc where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.menu_id and user_ID=a.user_ID  and parent_id=b.menu_id) as integer)as countsub from iwmp_user_app_role_map a,iwmp_role_menu_map b,iwmp_menu c where  a.ROLE_ID=b.ROLE_ID and b.menu_id=c.menu_id and a.user_ID=:userid  and parent_id in (select menu_id from iwmp_menu where parent_id=0) order by parent_id, seq_no, menuId
getMenu = select user_id as userId,cast(b.menu_id as Integer) as menuId,submenu_name as menuName,cast(PARENT_ID as Integer) as parentId,(select MENU_NAME from iwmp_m_menu where MENU_ID= sm.PARENT_ID) as parentName, target from iwmp_user_app_role_map a,iwmp_role_menu_map b,iwmp_m_menu c,iwmp_m_submenu sm where  a.ROLE_ID=b.ROLE_ID and b.menu_id=sm.submenu_id and a.user_ID=:userid  and c.menu_id=sm.parent_id and c.isactive = TRUE and sm.isactive = TRUE order by hseq_no, seq_no
getAllMenuRole=select * from (select (select role_name from iwmp_app_role_map a where  a.ROLE_ID=b.ROLE_ID ) as roleName,b.menu_id as menuId,subMENU_NAME as menuName,cast(PARENT_ID as Integer) as parentId,MENU_NAME as parentName, target, cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_m_submenu as sc  where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.submenu_id  ) as integer)as countsub, cast(seq_no  as integer) as sequence,cast(hseq_no  as integer) as hseqno,m.isactive pactive,c.isactive cactive  from iwmp_role_menu_map b,iwmp_m_submenu c,iwmp_m_menu m where m.menu_id=c.parent_id and b.menu_id=c.submenu_id   and b.role_id=:roleid ) as a order by rolename,parentname,sequence
getAllHindiMenuRole=select * from (select (select role_name from iwmp_app_role_map a where  a.ROLE_ID=b.ROLE_ID ) as roleName,b.menu_id as menuId, subMENU_HINDI_NAME as menuName,cast(PARENT_ID as Integer) as parentId,MENU_HINDI_NAME as parentName, target, cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_m_submenu as sc where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.submenu_id  ) as integer)as countsub, cast(seq_no  as integer) as sequence, cast(hseq_no  as integer) as hseqno,m.isactive pactive,c.isactive cactive  from iwmp_role_menu_map b,iwmp_m_submenu c, iwmp_m_menu m where m.menu_id=c.parent_id and b.menu_id=c.submenu_id   and b.role_id=1 and c.isactive='true' and m.isactive='true') as a order by hseqno, sequence
#,hseqno,sequence

getPublicReportOuter=select * from (select (select role_name from iwmp_app_role_map a where  a.ROLE_ID=b.ROLE_ID ) as roleName,b.menu_id as menuId, subMENU_NAME as menuName,cast(PARENT_ID as Integer) as parentId,MENU_NAME as parentName, target, cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_m_submenu as sc where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.submenu_id  ) as integer)as countsub, cast(seq_no  as integer) as sequence, cast(hseq_no  as integer) as hseqno,m.isactive pactive,c.isactive cactive  from iwmp_role_menu_map b,iwmp_m_submenu c, iwmp_m_menu m where m.menu_id=c.parent_id and b.menu_id=c.submenu_id   and b.role_id=1 and c.isactive='true' and m.isactive='true') as a order by hseqno, sequence

#getAllMenu=select (select role_name from iwmp_app_role_map a where  a.ROLE_ID=b.ROLE_ID ) as roleName,cast(b.menu_id as Integer) as menuId,MENU_NAME as menuName,cast(PARENT_ID as Integer) as parentId,(select MENU_NAME from iwmp_menu where MENU_ID= c.PARENT_ID) as parentName,cast(RTRIM(SUBSTRING (target,1,position('.do' in target) ),'.') as character varying)as target,cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_menu as sc where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.menu_id  and parent_id=b.menu_id) as integer)as countsub,cast(seq_no  as integer) as sequence from iwmp_role_menu_map b,iwmp_menu c where  b.menu_id=c.menu_id and parent_id in (select menu_id from iwmp_menu where parent_id=0) order by roleName,parent_id, seq_no, menuId
#getAllMenu=select (select role_name from iwmp_app_role_map a where  a.ROLE_ID=b.ROLE_ID ) as roleName,cast(b.menu_id as Integer) as menuId,MENU_NAME as menuName,cast(PARENT_ID as Integer) as parentId,(select MENU_NAME from iwmp_menu where MENU_ID= c.PARENT_ID) as parentName,case when position('.do' in target) > 0 then cast(RTRIM(SUBSTRING (target,1,position('.do' in target) ),'.') as character varying) else target end as target,cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_menu as sc where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.menu_id  and parent_id=b.menu_id) as integer)as countsub,cast(seq_no  as integer) as sequence from iwmp_role_menu_map b,iwmp_menu c where  b.menu_id=c.menu_id and parent_id in (select menu_id from iwmp_menu where parent_id=0) order by roleName,parent_id, seq_no, menuId
#getAllMenu=select (select role_name from iwmp_app_role_map a where  a.ROLE_ID=b.ROLE_ID ) as roleName,b.menu_id as menuId,MENU_NAME as menuName,cast(PARENT_ID as Integer) as parentId,(select MENU_NAME from iwmp_menu where MENU_ID= c.PARENT_ID) as parentName,cast(RTRIM(SUBSTRING (target,1,position('.do' in target) ),'.') as character varying)as target,cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_menu as sc where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.menu_id and parent_id=b.menu_id) as integer)as countsub,cast(seq_no  as integer) as sequence  from iwmp_role_menu_map b,iwmp_menu c where b.menu_id=c.menu_id and parent_id in (select menu_id from iwmp_menu where parent_id=0) union  select '' roleName,menu_id as menuId,MENU_NAME as menuName, parent_id parentId,'' as parentName,cast(RTRIM(SUBSTRING (target,1,position('.do' in target) ),'.') as character varying)as target,cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_menu as sc where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.menu_id  and parent_id=c.menu_id) as integer)as countsub,cast(seq_no  as integer) as sequence  from iwmp_menu c where  parent_id =0 and c.menu_id not in(select parent_id from iwmp_menu  where parent_id is not null and parent_id !=0) order by roleName,parentId, sequence, menuId
#getAllMenu=select iwmpAppRoleMap.roleName,iwmpMenu.menuId,iwmpMenu.submenuName as menuname,iwmpMenu.iwmpMMenu.menuId as parentid,iwmpMenu.iwmpMMenu.menuName as parentname,iwmpMenu.target,iwmpMenu.seqNo as sequence,'' as countsub,iwmpMenu.iwmpMMenu.hseqNo from IwmpRoleMenuMap  where iwmpMenu.isactive is true  order by iwmpAppRoleMap.roleName,iwmpMenu.iwmpMMenu.hseqNo,iwmpMenu.seqNo
getAllMenu=select * from (select (select role_name from iwmp_app_role_map a where  a.ROLE_ID=b.ROLE_ID ) as roleName,b.menu_id as menuId,subMENU_NAME as menuName,cast(PARENT_ID as Integer) as parentId,MENU_NAME as parentName,target,cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb,iwmp_m_submenu as sc	  where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.submenu_id  ) as integer)as countsub, cast(seq_no  as integer) as sequence,cast(hseq_no  as integer) as hseqno,m.isactive pactive,c.isactive cactive  from iwmp_role_menu_map b,iwmp_m_submenu c,iwmp_m_menu m where m.menu_id=c.parent_id and b.menu_id=c.submenu_id  union select ''  as roleName,null as menuId,null as menuName,menu_id as parentId, MENU_NAME as parentName,'' as target, 0 as countsub, null as sequence,cast(hseq_no  as integer) as hseqno,m.isactive pactive,null as cactive  from iwmp_m_menu m where menu_id not in(select parent_id from iwmp_m_submenu)) as a order by rolename,parentname,sequence
#hseqno,sequence
getActiveMenuByRole = select * from (select (select role_name from iwmp_app_role_map a where  a.ROLE_ID=b.ROLE_ID ) as roleName,b.menu_id as menuId,subMENU_NAME as menuName, cast(PARENT_ID as Integer) as parentId,MENU_NAME as parentName, target, cast((select count(*) from iwmp_user_app_role_map as sa,iwmp_role_menu_map as sb, iwmp_m_submenu as sc  where  sa.ROLE_ID=sb.ROLE_ID and sb.menu_id=sc.submenu_id  ) as integer)as countsub, cast(seq_no  as integer) as sequence, cast(hseq_no  as integer) as hseqno from iwmp_role_menu_map b,iwmp_m_submenu c,iwmp_m_menu m where m.isactive=true and c.isactive = true and m.menu_id=c.parent_id and b.menu_id=c.submenu_id and b.role_id=:roleid union select ''  as roleName,menu_id as menuId,'' as menuName,0 as parentId, MENU_NAME as parentName,'' as target, 0 as countsub, 0 as sequence,cast(hseq_no  as integer) as hseqno from iwmp_m_menu m where menu_id not in(select parent_id from iwmp_m_submenu)) as a order by rolename,hseqno,sequence 
#LIVELIhood Production EPA
getLivelihoodCoreActivity= from MLivelihoodCoreactivity where isActive is true
getEpaCoreActivity= from MEpaCoreactivity where isActive is true
getCropList= from MCroptype  where isActive is true
getProductionCoreActivity= from MProductivityCoreactivity where isActive is true

#getReportLivelihood=select livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode as stcode,livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName as stname,cast(sum(noActivities) as int) as noactivity,cast(sum(sc) as int) as sc, cast(sum(st) as int) as st, cast(sum(other) as int) as other, cast(sum(sc+st+other) as int) as total, cast(sum(women) as int) as women from LivelihoodDetail as l where l.status='C' group by  livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode ,livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName order by livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName
getReportLivelihood=select s.st_name as stname, s.st_code as stcode, cast((select COALESCE(sum(no_activities), 0) from iwmp_district d, iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as noactivity,cast((select COALESCE(sum(sc), 0) from iwmp_district d, iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as sc, cast((select COALESCE(sum(st), 0) from iwmp_district d, iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as st, cast((select COALESCE(sum(other), 0) from iwmp_district d, iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as other, cast((select coalesce((sum(sc)+ sum(st)+ sum(other)),0) from iwmp_district d, iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as total, cast((select COALESCE(sum(women), 0) from iwmp_district d, iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as women,cast((select COALESCE(count(assetid), 0) from iwmp_district d, iwmp_m_project p, wdcpmksy_livelihood_workid l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and l.status='C') as Integer) as liveproducwork from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 and s.st_code=(case when :stcode=0 then s.st_code else :stcode end) group by s.st_name, s.st_code  order by s.st_name
#getReportProduction=select livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode as stcode,livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName as stname,cast(sum(noActivities) as int) as noactivity,cast(sum(sc) as int) as sc, cast(sum(st)as int) as st, cast(sum(other) as int) as other, cast(sum(sc+st+other) as int) as total, cast(sum(women) as int)as women from ProductionDetail as l where l.status='C' group by  livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode ,livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName order by livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName
getReportProduction=select s.st_name as stname, s.st_code as stcode, cast((select COALESCE(sum(no_activities), 0) from iwmp_district d, iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as noactivity, cast((select COALESCE(sum(sc), 0) from iwmp_district d, iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as sc, cast((select COALESCE(sum(st), 0) from iwmp_district d, iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as st,cast((select COALESCE(sum(other), 0) from iwmp_district d, iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as other,cast((select coalesce((sum(sc)+ sum(st)+ sum(other)),0) from iwmp_district d, iwmp_m_project p, production_detail ld, livelihood_epa_prod l where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as total, cast((select COALESCE(sum(women), 0) from iwmp_district d, iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as women,cast((select COALESCE(count(assetid), 0) from iwmp_district d, iwmp_m_project p, wdcpmksy_prdouction_workid l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and l.status='C') as Integer) as liveproducwork from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 and s.st_code=(case when :stcode=0 then s.st_code else :stcode end) group by s.st_name, s.st_code  order by s.st_name
#getReportEpa=select livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode as stcode, livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName as stname, cast(sum(noActivities) as int) as noactivity from EpaDetail as l where l.status='C' group by  livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode, livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName order by livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stName
getReportEpa=select s.st_name as stname, s.st_code as stcode, cast((select COALESCE(sum(no_activities), 0) from iwmp_district d, iwmp_m_project p, epa_detail ld, livelihood_epa_prod l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='epa') as Integer) as noactivity, cast((select COALESCE(count(assetid), 0) from iwmp_district d, iwmp_m_project p, wdcpmksy_epa_workid l  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=l.proj_id and l.status='C') as Integer) as epawork from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 and s.st_code=(case when :stcode=0 then s.st_code else :stcode end) group by s.st_name, s.st_code  order by s.st_name


getReportLivelihoodAvgProject=select l.proj_id, proj_name, cast(COALESCE(sum(ld.no_activities), 0) as Integer) as noactivity, ROUND(coalesce(sum(ld.pre_avg_income),0)/ NULLIF (count (livelihood_coreactivity_id),0),2) as pre_total_avg_income, ROUND(COALESCE(sum(ld.post_avg_income), 0) / NULLIF(count(livelihood_coreactivity_id), 0), 2) as post_total_avg_income,ROUND(COALESCE(sum(ld.post_avg_income), 0) / NULLIF(count(livelihood_coreactivity_id), 0), 2) - ROUND(COALESCE(sum(ld.pre_avg_income), 0) / NULLIF(count(livelihood_coreactivity_id), 0), 2) as difference from livelihood_detail ld, livelihood_epa_prod l, iwmp_m_project p where ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood' and p.proj_id=l.proj_id and p.dcode=:distcd group by l.proj_id, proj_name order by proj_name
#getReportLivelihoodAvgProject=select l.proj_id, proj_name, cast(COALESCE(sum(ld.no_activities), 0) as Integer) as noactivity, ROUND(sum(ld.pre_avg_income)/count (livelihood_coreactivity_id),2) as pre_total_avg_income, ROUND(sum(ld.post_avg_income) / count(livelihood_coreactivity_id),2) as post_total_avg_income, ROUND(sum(ld.post_avg_income)/count (livelihood_coreactivity_id),2) - ROUND(sum(ld.pre_avg_income) / count(livelihood_coreactivity_id),2) as difference from livelihood_detail ld, livelihood_epa_prod l, iwmp_m_project p where ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood' and p.proj_id=l.proj_id and p.dcode=:distcd group by l.proj_id, proj_name order by proj_name
getReportLivelihoodAvgSProject=select l.proj_id, proj_name, ld.livelihood_coreactivity_id as activityid, (select livelihood_coreactivity_desc from m_livelihood_coreactivity where livelihood_coreactivity_id=ld.livelihood_coreactivity_id) as activitydesc, cast(COALESCE(sum(ld.no_activities), 0) as Integer) as noactivity, cast(COALESCE(sum(ld.sc), 0) as Integer)  as sc, cast(COALESCE(sum(ld.st), 0) as Integer)  as st, cast(COALESCE(sum(ld.other), 0) as Integer)  as other, cast(COALESCE((sum(sc)+sum(st)+sum(other)) ,0) as Integer)  as total, cast(COALESCE(sum(ld.women), 0) as Integer)  as women, cast(COALESCE(count(ld.livelihood_coreactivity_id), 0) as Integer)  as cnt,cast(COALESCE(sum(ld.pre_avg_income), 0) as Integer)  as pre_avg_income, cast(COALESCE(sum(ld.post_avg_income), 0) as Integer)  as post_avg_income, cast((select COALESCE(count(assetid), 0) from  wdcpmksy_livelihood_workid w  where w.proj_id=l.proj_id and w.livelihood_coreactivity_id=ld.livelihood_coreactivity_id and w.status='C') as Integer) as liveproducwork from iwmp_m_project p, livelihood_epa_prod l, livelihood_detail ld where  p.proj_id=l.proj_id and ld.lep_id=l.lep_id and p.dcode=:distcd and p.proj_id = :projcode and l.head_type='livelihood' and ld.status='C' group by l.proj_id, proj_name, ld.livelihood_coreactivity_id, activitydesc order by proj_name, activitydesc
#getReportProductionAvgProject=select l.proj_id, proj_name, cast(COALESCE(sum(ld.no_activities), 0) as Integer) as noactivity, ROUND(sum(ld.pre_avg_income)/count (livelihood_coreactivity_id),2) as pre_total_avg_income, ROUND(sum(ld.post_avg_income) / count(livelihood_coreactivity_id),2) as post_total_avg_income, ROUND(sum(ld.post_avg_income)/count (livelihood_coreactivity_id),2) - ROUND(sum(ld.pre_avg_income) / count(livelihood_coreactivity_id),2) as difference from production_detail ld, livelihood_epa_prod l, iwmp_m_project p where ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production' and p.proj_id=l.proj_id  and p.dcode=:distcd group by l.proj_id, proj_name order by proj_name
getReportProductionAvgProject=select l.proj_id, proj_name, cast(COALESCE(sum(ld.no_activities), 0) as Integer) as noactivity, ROUND(coalesce(sum(ld.pre_avg_income),0)/ NULLIF (count (livelihood_coreactivity_id),0),2) as pre_total_avg_income, ROUND(COALESCE(sum(ld.post_avg_income), 0) / NULLIF(count(livelihood_coreactivity_id), 0), 2) as post_total_avg_income,ROUND(COALESCE(sum(ld.post_avg_income), 0) / NULLIF(count(livelihood_coreactivity_id), 0), 2) - ROUND(COALESCE(sum(ld.pre_avg_income), 0) / NULLIF(count(livelihood_coreactivity_id), 0), 2) as difference from production_detail ld, livelihood_epa_prod l, iwmp_m_project p where ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production' and p.proj_id=l.proj_id  and p.dcode=:distcd group by l.proj_id, proj_name order by proj_name
getReportProductionAvgSProject=select l.proj_id, proj_name, ld.livelihood_coreactivity_id as activityid, (select productivity_coreactivity_desc from m_productivity_coreactivity where productivity_coreactivity_id=ld.livelihood_coreactivity_id) as activitydesc, cast(COALESCE(sum(ld.no_activities), 0) as Integer)  as noactivity, cast(COALESCE(sum(ld.sc), 0) as Integer)  as sc, cast(COALESCE(sum(ld.st), 0) as Integer)  as st, cast(COALESCE(sum(ld.other), 0) as Integer)  as other, cast(COALESCE((sum(sc)+sum(st)+sum(other)) ,0) as Integer)  as total, cast(COALESCE(sum(ld.women), 0) as Integer)  as women, cast(COALESCE(count(ld.livelihood_coreactivity_id), 0) as Integer)  as cnt,cast(COALESCE(sum(ld.pre_avg_income), 0) as Integer)  as pre_avg_income, cast(COALESCE(sum(ld.post_avg_income), 0) as Integer)  as post_avg_income, cast((select COALESCE(count(assetid), 0) from  wdcpmksy_prdouction_workid w  where w.proj_id=l.proj_id and w.productivity_coreactivity_id=ld.livelihood_coreactivity_id and w.status='C') as Integer) as liveproducwork from iwmp_m_project p, livelihood_epa_prod l, production_detail ld where  p.proj_id=l.proj_id and ld.lep_id=l.lep_id and p.dcode=:distcd and p.proj_id = :projcode and l.head_type='production' and ld.status='C' group by l.proj_id, proj_name, ld.livelihood_coreactivity_id, activitydesc order by proj_name, activitydesc

getLivelihoodDetail=from LivelihoodDetail where livelihoodEpaProd.iwmpMProject.projectId in (select iwmpMProject.projectId from IwmpUserProjectMap where userReg.regId=:regId) order by livelihoodEpaProd.iwmpMProject.projName asc
getProductionDetail=from ProductionDetail where livelihoodEpaProd.iwmpMProject.projectId in (select iwmpMProject.projectId from IwmpUserProjectMap where userReg.regId=:regId) order by livelihoodEpaProd.iwmpMProject.projName asc
getEpaDetail=from EpaDetail where livelihoodEpaProd.iwmpMProject.projectId in (select iwmpMProject.projectId from IwmpUserProjectMap where userReg.regId=:regId) order by livelihoodEpaProd.iwmpMProject.projName asc
#getReportLivelihoodDist=select livelihoodEpaProd.iwmpMProject.iwmpDistrict.distCode as distCode, livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName as distname, cast(sum(noActivities) as int) as noactivity, cast(sum(sc) as int) as sc, cast(sum(st) as int) as st, cast(sum(other) as int) as other, cast(sum(sc+st+other) as int) as total, cast(sum(women) as int) as women from LivelihoodDetail as l where l.status='C' and livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode=:stcd group by  livelihoodEpaProd.iwmpMProject.iwmpDistrict.distCode, livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName order by livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName
getReportLivelihoodDist=select d.dcode as distCode, d.dist_name as distname, cast((select COALESCE(sum(no_activities), 0) from  iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode and  p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as noactivity, cast((select COALESCE(sum(sc), 0) from iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as sc, cast((select COALESCE(sum(st), 0) from iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode  and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as st, cast((select COALESCE(sum(other), 0) from iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l where d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as other, cast((select COALESCE((sum(sc)+sum(st)+sum(other)), 0) from iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l where d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as total, cast((select COALESCE(sum(women), 0) from iwmp_m_project p, livelihood_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='livelihood') as Integer) as women, cast((select COALESCE(count(assetid), 0) from  iwmp_m_project p, wdcpmksy_livelihood_workid l  where d.dcode=p.dcode  and p.proj_id=l.proj_id and l.status='C') as Integer) as liveproducwork from iwmp_district d  inner join iwmp_m_project p on p.dcode=d.dcode WHERE  d.st_code=:stcd and d.dist_proj=true group by d.dist_name, d.dcode  order by distname
#getReportProductionDist=select livelihoodEpaProd.iwmpMProject.iwmpDistrict.distCode as distCode, livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName as distname, cast(sum(noActivities) as int) as noactivity,cast(sum(sc) as int) as sc, cast(sum(st)as int) as st, cast(sum(other) as int) as other, cast(sum(sc+st+other) as int) as total, cast(sum(women) as int) as women from ProductionDetail as l where  l.status='C' and livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode=:stcd group by  livelihoodEpaProd.iwmpMProject.iwmpDistrict.distCode, livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName order by livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName
getReportProductionDist=select d.dcode as distCode, d.dist_name as distname, cast((select COALESCE(sum(no_activities), 0) from  iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as noactivity, cast((select COALESCE(sum(sc), 0) from iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode  and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as sc, cast((select COALESCE(sum(st), 0) from iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode  and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as st, cast((select COALESCE(sum(other), 0) from iwmp_m_project p, production_detail ld, livelihood_epa_prod l where d.dcode=p.dcode  and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as other, cast((select COALESCE((sum(sc)+sum(st)+sum(other)), 0) from iwmp_m_project p, production_detail ld, livelihood_epa_prod l where  d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as total,cast((select COALESCE(sum(women), 0) from iwmp_m_project p, production_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='production') as Integer) as women, cast((select COALESCE(count(assetid), 0) from  iwmp_m_project p, wdcpmksy_prdouction_workid l  where d.dcode=p.dcode and p.proj_id=l.proj_id and l.status='C') as Integer) as liveproducwork	from iwmp_district d  inner join iwmp_m_project p on p.dcode=d.dcode WHERE  d.st_code=:stcd and d.dist_proj=true  group by d.dist_name, d.dcode  order by distname
#getReportEpaDist=select livelihoodEpaProd.iwmpMProject.iwmpDistrict.distCode as distCode, livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName as distname, cast(sum(noActivities) as int) as noactivity from EpaDetail as l  where l.status='C' and livelihoodEpaProd.iwmpMProject.iwmpDistrict.iwmpState.stCode=:stcd group by  livelihoodEpaProd.iwmpMProject.iwmpDistrict.distCode, livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName order by livelihoodEpaProd.iwmpMProject.iwmpDistrict.distName
getReportEpaDist=select d.dcode as distCode, d.dist_name as distname, cast((select COALESCE(sum(no_activities), 0) from  iwmp_m_project p, epa_detail ld, livelihood_epa_prod l  where d.dcode=p.dcode and p.proj_id=l.proj_id and ld.lep_id=l.lep_id and ld.status='C' and l.head_type='epa') as Integer) as noactivity, cast((select COALESCE(count(assetid), 0) from  iwmp_m_project p, wdcpmksy_epa_workid l  where d.dcode=p.dcode and p.proj_id=l.proj_id and l.status='C') as Integer) as liveproducwork from iwmp_district d  inner join iwmp_m_project p on p.dcode=d.dcode WHERE  d.st_code=:stcd and d.dist_proj=true group by d.dist_name, d.dcode  order by distname	 
#getReportLivelihoodProject=from LivelihoodDetail where livelihoodEpaProd.iwmpMProject.iwmpDistrict.dcode=:distcd and status='C' order by livelihoodEpaProd.iwmpMProject.projName, MLivelihoodCoreactivity.livelihoodCoreactivityDesc
getReportLivelihoodProject=select l.proj_id, proj_name, ld.livelihood_coreactivity_id as activityid, (select livelihood_coreactivity_desc from m_livelihood_coreactivity where livelihood_coreactivity_id=ld.livelihood_coreactivity_id) as activitydesc, cast(COALESCE(sum(ld.no_activities), 0) as Integer) as noactivity, cast(COALESCE(sum(ld.sc), 0) as Integer)  as sc, cast(COALESCE(sum(ld.st), 0) as Integer)  as st, cast(COALESCE(sum(ld.other), 0) as Integer)  as other, cast(COALESCE(sum(sc+st+other), 0) as Integer)  as total, cast(COALESCE(sum(ld.women), 0) as Integer)  as women, cast(COALESCE(sum(ld.pre_avg_income), 0) as Integer)  as pre_avg_income, cast(COALESCE(sum(ld.post_avg_income), 0) as Integer)  as post_avg_income, cast((select COALESCE(count(assetid), 0) from  wdcpmksy_livelihood_workid w  where w.proj_id=l.proj_id and w.livelihood_coreactivity_id=ld.livelihood_coreactivity_id and w.status='C') as Integer) as liveproducwork from iwmp_m_project p, livelihood_epa_prod l, livelihood_detail ld where  p.proj_id=l.proj_id and ld.lep_id=l.lep_id and p.dcode=:distcd and l.head_type='livelihood' and ld.status='C' group by l.proj_id, proj_name, ld.livelihood_coreactivity_id, activitydesc order by proj_name, activitydesc
#getReportProductionProject=from ProductionDetail where livelihoodEpaProd.iwmpMProject.iwmpDistrict.dcode=:distcd and status='C' order by livelihoodEpaProd.iwmpMProject.projName, MProductivityCoreactivity.productivityCoreactivityDesc
getReportProductionProject=select l.proj_id, proj_name, ld.livelihood_coreactivity_id as activityid, (select productivity_coreactivity_desc from m_productivity_coreactivity where productivity_coreactivity_id=ld.livelihood_coreactivity_id) as activitydesc, cast(COALESCE(sum(ld.no_activities), 0) as Integer)  as noactivity, cast(COALESCE(sum(ld.sc), 0) as Integer)  as sc, cast(COALESCE(sum(ld.st), 0) as Integer)  as st, cast(COALESCE(sum(ld.other), 0) as Integer)  as other, cast(COALESCE(sum(sc+st+other), 0) as Integer)  as total, cast(COALESCE(sum(ld.women), 0) as Integer)  as women, cast(COALESCE(sum(ld.pre_avg_income), 0) as Integer)  as pre_avg_income, cast(COALESCE(sum(ld.post_avg_income), 0) as Integer)  as post_avg_income, cast((select COALESCE(count(assetid), 0) from  wdcpmksy_prdouction_workid w  where w.proj_id=l.proj_id and w.productivity_coreactivity_id=ld.livelihood_coreactivity_id and w.status='C') as Integer) as liveproducwork from iwmp_m_project p, livelihood_epa_prod l, production_detail ld where  p.proj_id=l.proj_id and ld.lep_id=l.lep_id and p.dcode=:distcd and l.head_type='production' and ld.status='C' group by l.proj_id, proj_name, ld.livelihood_coreactivity_id, activitydesc order by proj_name, activitydesc
#getReportEpaProject=from EpaDetail where livelihoodEpaProd.iwmpMProject.iwmpDistrict.dcode=:distcd and status='C' order by livelihoodEpaProd.iwmpMProject.projName, MEpaCoreactivity.epaDesc
getReportEpaProject=select l.proj_id, proj_name, ld.epa_activity_id as activityid, (select epa_desc from m_epa_coreactivity where epa_activity_id=ld.epa_activity_id) as activitydesc, cast(COALESCE(sum(ld.no_activities), 0) as Integer)  as noactivity, cast((select COALESCE(count(assetid), 0) from  wdcpmksy_epa_workid w  where w.proj_id=l.proj_id and w.epa_activity_id=ld.epa_activity_id and w.status='C') as Integer) as liveproducwork from iwmp_m_project p, livelihood_epa_prod l, epa_detail ld where  p.proj_id=l.proj_id and ld.lep_id=l.lep_id and p.dcode=:distcd and l.head_type='epa' and ld.status='C' group by l.proj_id, proj_name, ld.epa_activity_id, activitydesc order by proj_name, activitydesc

getlivelihoodProjectDetail=from LivelihoodDetail where livelihoodEpaProd.iwmpMProject.projectId=:projectId order by MLivelihoodCoreactivity.livelihoodCoreactivityDesc asc
getProductionDProjectetail=from ProductionDetail where livelihoodEpaProd.iwmpMProject.projectId =:projectId order by MProductivityCoreactivity.productivityCoreactivityDesc asc
getEpaProjectDetail=from EpaDetail where livelihoodEpaProd.iwmpMProject.projectId=:projectId order by MEpaCoreactivity.epaDesc asc

#Query for User Role Map
getAllApplication=select cast(APP_ID as character varying) as app_id,APP_NAME from iwmp_apps order by app_name
getAllRole=select cast(ROLE_ID as varchar) as role_id,ROLE_ID||'-'||ROLE_NAME  as roleName from iwmp_app_role_map  order by role_id 
saveUserRoleMap=insert into iwmp_user_app_role_map (user_id,APP_ID,ROLE_ID,last_updated_by, last_updated_date, request_ip) values (:userId,:appId,:roleId,:updatedBy,current_date,:requestIp)
updateUserRoleMap=update iwmp_user_app_role_map set ROLE_ID=:roleId,last_updated_by=:updatedBy,last_updated_date=current_date,request_ip=:requestIp where user_id=:userId
getSpecifyRole=select cast(ROLE_ID as varchar) as role_id,ROLE_ID||'-'||ROLE_NAME  as roleName from iwmp_app_role_map where role_id in(3,5,6,9) order by role_id
getUserListUnAssigned=select cast(reg_id as varchar) as reg_id,user_id,user_NAME from iwmp_user_reg where  case when :userType is not null and :userType !='' then user_type=:userType and user_id not in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') else user_id not in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') end order by user_id
getUserListAssigned=select cast(reg_id as varchar) as reg_id,user_id,user_NAME from iwmp_user_reg where  case when :userType is not null and :userType !='' then user_type=:userType and user_id in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') else user_id in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') end order by user_id
getUserListUnAssignedByState=select cast(reg.reg_id as varchar) as reg_id,user_id,user_NAME from iwmp_user_reg reg,iwmp_user_map umap where  case when :userType is not null and :userType !='' then user_type=:userType and umap.reg_id= reg.reg_id and umap.st_code=:stCode and user_id not in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') else user_id not in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') end order by user_id
getUserListAssignedByState=select cast(reg.reg_id as varchar) as reg_id,user_id,user_NAME from iwmp_user_reg reg,iwmp_user_map umap where  case when :userType is not null and :userType !='' then user_type=:userType and umap.reg_id= reg.reg_id and umap.st_code=:stCode and user_id in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') else user_id in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') end order by user_id
getUserListUnAssignedByDistrict=select cast(reg.reg_id as varchar) as reg_id,user_id,user_NAME from iwmp_user_reg reg,iwmp_user_map umap where case when :userType is not null and :userType !='' then user_type=:userType and umap.reg_id= reg.reg_id and umap.st_code=:stCode and case when umap.dist_code is null then umap.dcode=(select dcode from iwmp_district where dcode=:distCode and st_code=:stCode) else dcode=:distCode end and user_id not in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') else user_id in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') end order by user_id
getUserListAssignedByDistrict=select cast(reg.reg_id as varchar) as reg_id,user_id,user_NAME from iwmp_user_reg reg,iwmp_user_map umap where case when :userType is not null and :userType !='' then user_type=:userType and umap.reg_id= reg.reg_id and umap.st_code=:stCode and case when umap.dist_code is null then umap.dcode=(select dcode from iwmp_district where dcode=:distCode and st_code=:stCode) else dcode=:distCode end and user_id in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') else user_id not in (select user_id from iwmp_user_app_role_map) and LOWER(status) = LOWER('ACTIVE') end order by user_id
getProjectByDistrict=select proj from IwmpMProject proj,IwmpDistrict dist where proj.status='C' and dist.dcode=:distCode and proj.iwmpDistrict.dcode=dist.dcode and dist.iwmpState.stCode=:stCode and proj.projectId not in (Select iwmpMProject.projectId from IwmpUserProjectMap  )
getProjectByUser=select iwmpMProject.projectId, iwmpMProject.projName from IwmpUserProjectMap where userReg.regId=:regId order by iwmpMProject.projName asc
getProjectByUserAndPlan=select iwmpMProject.projectId, iwmpMProject.projName from IwmpUserProjectMap where userReg.regId=:regId and iwmpMProject.projectId in (select iwmpMProject.projectId from IwmpProjectPhysicalPlan where status='C')   order by iwmpMProject.projName ASC
getprojectlocationexist=select iwmpMProject.projectId, iwmpMProject.projName from IwmpUserProjectMap where userReg.regId=:regId and iwmpMProject.projectId in (select iwmpMProject.projectId from IwmpProjectLocation where status=true)   order by iwmpMProject.projName asc 
deleteUserProjectMap=delete from iwmp_user_project_map where reg_id=:regId
getRoleAssignedForUser=select roleMap from IwmpUserAppRoleMap userroleMap, IwmpAppRoleMap roleMap where userroleMap.iwmpAppRoleMap.roleId=roleMap.roleId and userroleMap.userId=:userId
getRegIdByUserId= select regId from UserReg where userId=:userId 
#Query for user Search
getUserList=select userReg from UserReg
getNextUserNo=SELECT count(*)+26 FROM iwmp_user_reg where status not in ('NEW')
activateUser=UPDATE iwmp_user_reg SET user_id=:userId, encrypted_pass=:encryptedPassword, status=:status, authorizer_id=:authorizerId, authorization_date=current_timestamp, request_ip=:requestIp, paswd_modify=now() where reg_id=:regId
inActivateUser=UPDATE iwmp_user_reg SET status=:status, request_ip=:requestIp,last_updated_by=:updatedBy, last_updated_date=now() where reg_id=:regId
deleteUser= Delete from iwmp_user_reg where reg_id=:regId
activateUserApprole=INSERT INTO public.iwmp_user_app_role_map( user_id, app_id, role_id, last_updated_by, last_updated_date, request_ip) VALUES (:userId, 1, 6, :authorizerId, now(), :requestIp)
checkActiveUser=select count(*) from iwmp_user_app_role_map where user_id=:uid
#State Master Query
stateList=from IwmpState where wdcpmksy=1 order by stName asc
componentList=  from PfmscompBean where component_code<>'' order by component_name asc
projmasterlist=from IwmpMProject p WHERE  p.iwmpDistrict.dcode=:distCode and p.status='C' order by projectSeqNo, projName asc
#projmasterlist=select projectId, projName from IwmpMProject p WHERE  p.iwmpDistrict.dcode=? and p.status='C' order by projectSeqNo, projName asc
stateListByStateCode= from IwmpState where wdcpmksy=1 and stCode=:stateCode order by stName asc
#DistrictMasterQuery
#districtListByStateCode=from IwmpDistrict WHERE iwmpState.stCode=:stCode order by distName
districtListByStateCode=from IwmpDistrict WHERE iwmpState.stCode=:stCode and dcode in (select iwmpDistrict.dcode from IwmpMProject where iwmpDistrict.iwmpState.stCode=:stCode) and distproj is true order by distName
districtList=from IwmpDistrict order by distName asc
districtListByDistCode=from IwmpDistrict WHERE distCode=:distCode order by distName asc
#BlockMasterQuery
blockListBydistCode=from IwmpBlock where distCode=:distCode and stCode=:stCode
deleteUserMap=Delete from iwmp_user_map where reg_id=:regId
blockListBydCode=from IwmpBlock where dCode=:distCode order by blockName
getInactiveBlockList=from IwmpBlock as b where b.blockCodelgd in(select p.blockCodelgd from IwmpBlock as p where p.active is false and p.stCode=case :stcode when 0 then p.stCode else :stcode end and p.distCode=case :distcode when 0 then p.distCode else :distcode end and p.blockCode=case :blockCode when 0 then p.blockCode else :blockCode end and p.iwmpDistrict.iwmpState.wdcpmksy=1) order by b.iwmpDistrict.iwmpState.stName, b.iwmpDistrict.distName,b.blockName
getActiveBlockList=from IwmpBlock as p where p.active is true and p.stCode=case :stcode when 0 then p.stCode else :stcode end and p.distCode=case :distcode when 0 then p.distCode else :distcode end and p.bcode=case :blockCode when 0 then p.bcode else :blockCode end and p.iwmpDistrict.iwmpState.wdcpmksy=1 order by p.iwmpDistrict.iwmpState.stName, p.iwmpDistrict.distName,p.blockName
getActiveBlockListAll=from IwmpBlock as p where p.active is true and p.iwmpDistrict.iwmpState.wdcpmksy=1 order by p.iwmpDistrict.iwmpState.stName, p.iwmpDistrict.distName,p.blockName
#GramPanchayatMaster Query
gpList=from IwmpGramPanchayat WHERE iwmpBlock.bcode=:block order by gramPanchayatName asc
getInactiveGramPanchayatList=from IwmpGramPanchayat as b where b.gramPanchayatLgdCode in(select p.gramPanchayatLgdCode from IwmpGramPanchayat as p where p.active is false and p.stCode=case :stcode when 0 then p.stCode else :stcode end and p.distCode=case :distcode when 0 then p.distCode else :distcode end and p.blockCode=case :blockCode when 0 then p.blockCode else :blockCode end and p.iwmpBlock.iwmpDistrict.iwmpState.wdcpmksy=1) order by b.iwmpBlock.iwmpDistrict.iwmpState.stName, b.iwmpBlock.iwmpDistrict.distName,b.gramPanchayatName
getActiveGramPanchayatList=from IwmpGramPanchayat as p where p.active is true and p.stCode=case :stcode when 0 then p.stCode else :stcode end and p.distCode=case :distcode when 0 then p.distCode else :distcode end and p.iwmpBlock.bcode=case :blockCode when 0 then p.iwmpBlock.bcode else :blockCode end and p.iwmpBlock.iwmpDistrict.iwmpState.wdcpmksy=1 order by p.iwmpBlock.iwmpDistrict.iwmpState.stName, p.iwmpBlock.iwmpDistrict.distName,p.gramPanchayatName
getActiveGramPanchayatListAll=from IwmpGramPanchayat as p where p.active is true and p.iwmpBlock.iwmpDistrict.iwmpState.wdcpmksy=1 order by p.iwmpBlock.iwmpDistrict.iwmpState.stName, p.iwmpBlock.iwmpDistrict.distName,p.gramPanchayatName
#ChangePasswordQuery
userValidate = select user_id, encrypted_pass, first_login from iwmp_user_reg where UPPER(user_id) = UPPER(:loginId) and user_type = :userType and (Lower(disable) <> Lower('DISABLE') or disable is null) and Lower(status)=Lower('ACTIVE')
checkpasshistory = Select cast(count(pwd.*)as int) from (select encrypted_pass from iwmp_pwd_history where loginid=:loginId  order by last_updated_date desc limit 3) pwd where pwd.encrypted_pass=:encryptednewpwd
updatepassword = UPDATE iwmp_user_reg SET encrypted_pass = :encryptednewpwd, first_login=:firstLogin, paswd_modify = CURRENT_TIMESTAMP WHERE UPPER(user_id) = UPPER(:loginId) and user_type = :userType
deleteloginlogdata = delete from iwmp_login_log where loginid = :loginid and login_sts = :login_sts
#slna password reset
select.state.slna=select distinct st_code from iwmp_user_map where reg_id=:regid and st_code is not null
select.state.pia.wcdc=select distinct st_code, re.user_type from iwmp_user_map as map ,iwmp_user_reg as re where map.reg_id=re.reg_id and re.user_id=:userId and map.st_code is not null
showDataPia=select distinct reg.user_id,(select st_name from  iwmp_state where  st_code=map.st_code) as state_name,(select dist_name from  iwmp_district  where  st_code=map.st_code and dcode=map.dcode) as dist_name,x.proj_id, (select proj_name from iwmp_m_project where proj_id=x.proj_id) as project_name from iwmp_user_map as map,iwmp_user_reg as reg, iwmp_user_project_map x where map.reg_id=reg.reg_id and reg.reg_id = x.reg_id and map.reg_id = x.reg_id and reg.user_id=:userId and reg.status='Active' and reg.user_type='PI'  order by project_name
showDataWcdc=select distinct reg.user_id,(select st_name from  iwmp_state where  st_code=map.st_code) as state_name, (select dist_name from  iwmp_district  where  st_code=map.st_code and dcode=map.dcode) as dist_name  from iwmp_user_map as map, iwmp_user_reg as reg where map.reg_id=reg.reg_id and reg.user_id=:userId and reg.status='Active' and reg.user_type='DI' 
addUserProject=from IwmpMProject where iwmpDistrict.dcode=:dist and projectId not in (select iwmpMProject.projectId from IwmpUserProjectMap ) and status='C' order by projectSeqNo
#addUserProject=from IwmpMProject where iwmpDistrict.dcode=? and projectCd not in (select iwmpMProject.projectCd from IwmpUserProjectMap ) order by projectSeqNo
#select project_cd, proj_name from iwmp_m_project where project_cd not in (select proj_code from iwmp_user_map where st_code=? and dcode=?) and dcode=? order by project_seq_no
#select project_cd, proj_name from iwmp_m_project where project_cd not in (select project_cd from iwmp_user_project_map pm, iwmp_user_map um where pm.reg_id=um.reg_id and um.st_code=28 and um.dcode=445) and dcode=445 order by project_seq_no
#userIdforPIA=select rg.reg_id, rg.user_id from iwmp_user_reg rg, iwmp_user_map mp where  rg.reg_id=mp.reg_id and rg.user_type='PI' and user_id is not null and mp.st_code=? and mp.dcode=?
userIdforPIA=select u.userReg from UserMap  as u where u.userReg.userType='PI' and u.iwmpDistrict.dcode=:distt
#userIdforPIA=from UserReg where userType='PI' and userId is not null and regId in (select userReg.regId from UserMap where iwmpDistrict.dcode=?)
#getActiveUserDetailall=from UserReg where regId in (select userReg.regId from UserMap where iwmpState.stCode=?) and userType in ('SL','DI') and status='Active'
#getActiveUserDetailPi=from UserReg where regId in (select userReg.regId from UserMap where iwmpState.stCode=?) and userType=? and status='Active'
#getActiveUserDetailall=select distinct reg.reg_id, mp.dcode, (select dist_name from iwmp_district  where dcode=mp.dcode and st_code=mp.st_code) as dist_name, reg.user_id, reg.user_name, reg.designation, reg.cur_address, reg.phone_no, reg.mobile_no, reg.fax_no, reg.email, reg.user_type   FROM iwmp_user_reg as reg, iwmp_user_map as mp   where reg.status='Active' and reg.user_type in ('SL','DI','ST')  and reg.reg_id= mp.reg_id and mp.st_code=? order by user_id , dist_name
getActiveUserDetailall=from UserMap as u where u.iwmpState.stCode=:state and u.userReg.status=:status and u.userReg.userType in ('SL','DI','ST') 
#getActiveUserDetailPi=select distinct reg.reg_id, mp.dcode, (select dist_name from iwmp_district  where dcode=mp.dcode and st_code=mp.st_code) as dist_name, upm.proj_id, (select project_cd from iwmp_m_project where proj_id=upm.proj_id) as project_cd, (select proj_name from iwmp_m_project where proj_id=upm.proj_id) as proj_name, reg.user_id, reg.pia_name, reg.designation, reg.cur_address, reg.phone_no, reg.mobile_no, reg.fax_no, reg.email, reg.user_name, reg.pia_head, reg.pia_type, reg.reg_id, (select project_seq_no from iwmp_m_project where proj_id=upm.proj_id) as project_seq_no  from iwmp_user_reg as reg, iwmp_user_map as mp, iwmp_user_project_map as upm where reg.user_type='PI' and mp.st_code=? and reg.status='Active'  and reg.reg_id=mp.reg_id and upm.reg_id=mp.reg_id and reg.reg_id=upm.reg_id  order by user_id, proj_name
getActiveUserDetailPi=from IwmpUserProjectMap as p where p.userReg.userType='PI' and p.iwmpMProject.iwmpDistrict.iwmpState.stCode=:stCode and p.userReg.status=:status order by  p.iwmpMProject.iwmpDistrict.distName, p.iwmpMProject.projName, p.userReg.userId
#lastActivityByUser=select DISTINCT sf.loginid, sa.user_type, mp.st_code, (select st_name from iwmp_state where st_code=mp.st_code) as state_name, mp.dcode, (select dist_name from iwmp_district where dcode=mp.dcode and st_code=mp.st_code  ) as dist_name, max(to_char(sf.created_date,'YYYY-MM-DD HH24:MI:SS' )) as  last_login from iwmp_user_reg sa, iwmp_user_action_log sf, iwmp_user_map mp where sa.user_id=sf.loginid and  upper(sa.status)='ACTIVE' and  (sf.loginid like ? OR sf.loginid like ?  ) and mp.reg_id=sa.reg_id and mp.st_code=? group by  sf.loginid, mp.st_code, mp.dcode, sa.user_type order by sa.user_type desc
lastActivityByUser=select DISTINCT sa.user_id as loginid, sa.user_type, mp.st_code, (select st_name from iwmp_state where st_code=mp.st_code) as state_name, mp.dcode, (select dist_name from iwmp_district where dcode=mp.dcode and st_code=mp.st_code  ) as dist_name, max(to_char(sf.created_date,'YYYY-MM-DD HH24:MI:SS' )) as  last_login from iwmp_user_reg sa, iwmp_user_action_log sf, iwmp_user_map mp where sa.reg_id=sf.reg_id and  upper(sa.status)='ACTIVE' and sa.user_type in ('SL','DI','PI')  and mp.reg_id=sa.reg_id and mp.st_code=:state group by sa.user_id, mp.st_code, mp.dcode, sa.user_type order by sa.user_type desc

#lastActivityByUser=from IwmpUserActionLog u where u.userReg.status='Active' and (u.userReg.userId like ? or u.userReg.userId like ? ) and u.userReg.userMaps.iwmpState.stCode=? and u.createdDate=(select max(i.createdDate) from IwmpUserActionLog as i where i.u.userReg.userId=u.userReg.userId) order by u.userReg.userType desc
#showproj=select distinct pm.proj_id, (select proj_name from iwmp_m_project where proj_id=pm.proj_id) as project_name, r.reg_id from iwmp_user_project_map pm, iwmp_user_reg r where pm.reg_id=r.reg_id and r.reg_id=? order by project_name
showproj=select string_agg((select proj_name from iwmp_m_project where proj_id=pm.proj_id),', ') as project_nameid from iwmp_user_project_map pm, iwmp_user_reg r where pm.reg_id=r.reg_id and r.reg_id=:regId
#ProjectMasterQuery
getProjectByDCode=from IwmpMProject where iwmpDistrict.dcode =:dCode
getprojectNaCByDCode=select projectId, projName from IwmpMProject where iwmpDistrict.dcode =(case when 0<:dCode then :dCode else iwmpDistrict.dcode end) and status='C' order by projName,projectSeqNo
getProjectByprojectId=from IwmpMProject where projId=:projId
getProjBystCodedCode=select projectId, projName from IwmpMProject where iwmpDistrict.iwmpState.stCode=:stCode and iwmpDistrict.dcode =(case when 0<:dCode then :dCode else iwmpDistrict.dcode end) and status='C' order by projName,projectSeqNo
#getProjByStateCode=select projectId, projName from IwmpMProject where iwmpDistrict.iwmpState.stCode=:stCode and status='C' order by projName, projectSeqNo
getProjByStateCode = select iwmpMProject.projectId, iwmpMProject.projName from WdcpmksyQuadTarget where iwmpMProject.iwmpDistrict.iwmpState.stCode=:stCode and iwmpMProject.status='C' and 'S' in (q1status, q2status, q3status, q4status) order by iwmpMProject.projName, iwmpMProject.projectSeqNo
 #Village Master Query
#getVillageBlockWise=select village from IwmpVillage village,IwmpGramPanchayat gp where gp.gcode=village.iwmpGramPanchayat.gcode and gp.iwmpBlock.bcode=:bcode
getVillageBlockWise=select village from IwmpVillage village where village.iwmpGramPanchayat.iwmpBlock.bcode=:block and active='true' order by village.villageName
#getVillageBlockProjWise=select village from IwmpVillage village where village.iwmpGramPanchayat.iwmpBlock.bcode=:block and active='true' and village.vcode not in(select iwmpVillage.vcode from IwmpProjectLocation where iwmpMProject.projectId=:proj) order by village.villageName
getVillageBlockProjWise=select village from IwmpVillage village where village.iwmpGramPanchayat.iwmpBlock.bcode=:block and active='true' and village.vcode not in(select distinct iwmpVillage.vcode from IwmpProjectLocation ) order by village.villageName
getVillageByVillageCode =   select b.block_name as blockname,gp.gram_panchayat_name as grampanchayatname,v.village_name as villagename,v.vcode from iwmp_village v,iwmp_gram_panchayat gp,iwmp_block b where gp.bcode=b.bcode and v.gcode=gp.gcode and v.vcode in (:vcode) and v.active=true
getInactiveVillageList=from IwmpVillage as v where v.villageLgdcode in(select p.villageLgdcode from IwmpVillage as p where p.active is false and p.stCode=case :stcode when 0 then p.stCode else :stcode end and p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=case :distcode when 0 then p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode else :distcode end and p.iwmpGramPanchayat.iwmpBlock.bcode=case :blockCode when 0 then p.iwmpGramPanchayat.iwmpBlock.bcode else :blockCode end and p.iwmpGramPanchayat.gcode=case :gcode when 0 then p.iwmpGramPanchayat.gcode else :gcode end and p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.wdcpmksy=1) order by v.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, v.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName,v.iwmpGramPanchayat.iwmpBlock.blockName,v.villageName
getActiveVillageList=from IwmpVillage as p where p.active is true and p.stCode=case :stcode when 0 then p.stCode else :stcode end and p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=case :distcode when 0 then p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode else :distcode end and p.iwmpGramPanchayat.iwmpBlock.bcode=case :blockCode when 0 then p.iwmpGramPanchayat.iwmpBlock.bcode else :blockCode end and p.iwmpGramPanchayat.gcode=case :gcode when 0 then p.iwmpGramPanchayat.gcode else :gcode end and p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.wdcpmksy=1 order by p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName,p.iwmpGramPanchayat.iwmpBlock.blockName,p.villageName
getActiveVillageListAll=from IwmpVillage as p where p.active is true  and p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.wdcpmksy=1 order by p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, p.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName,p.iwmpGramPanchayat.iwmpBlock.blockName,p.villageName
getVillageOfProject = select v.vcode as vcode , v.villageName as villageName from IwmpVillage v,IwmpProjectLocation pl where v.vcode=pl.iwmpVillage.vcode and pl.iwmpMProject.projectId=:projId

#from IwmpVillage where vcode in (:vcode)
#SecondaryPassChange
getSpecificRoleList = from IwmpAppRoleMap where roleId in (6,8,9,5,2,3,12,15) order by roleName
#saveSecondPassword = update iwmp_user_reg set encrypted_pass_second=:pwd where user_id in (select distinct ureg.user_id from iwmp_user_reg ureg,iwmp_user_app_role_map uarmap,iwmp_user_map umap where lower(status) = lower('ACTIVE') and ureg.user_id=uarmap.user_id and uarmap.role_id=:role and umap.reg_id=ureg.reg_id
saveSecondPassword = select second_password_update(:userType, :stCode, :distCode,:projCode,:pwd)
#Query for Project Location Mapping
getPiaBlockProjectWise = select iwmpBlock from UserReg ureg,UserMap uMap, IwmpUserProjectMap upmap, IwmpBlock iwmpBlock where ureg.regId=umap.regId and ureg.regId=upmap.regId and iwmpBlock.dcode=umap.dcode and upmap.projectId=:projId
#saveProjectLocationAsDraft=select save_project_location_as_draft(:vcode,:pcode);
saveProjectLocationAsDraft = Insert into iwmp_project_location(proj_id,vcode,created_by,created_dt,last_updated_by,last_updated_date,request_ip,status) values(:pcode,:vcode,:createdby,:createddt,:lastupdatedby,:lastupdateddate,:requestid,:status)
getPreFilledProjectLocationData = select distinct pl.status,pl.vcode,b.block_name as blockname,gp.gram_panchayat_name as grampanchayatname,v.village_name as villagename from iwmp_project_location pl,iwmp_village v,iwmp_gram_panchayat gp, iwmp_block b where pl.vcode=v.vcode and v.gcode=gp.gcode and gp.bcode=b.bcode and pl.proj_id=:pcode order by pl.status 
deletePreFilledProjectLocation = delete from iwmp_project_location where proj_id=:pcode
#completeProjectLocation = Insert into iwmp_project_location(proj_id,vcode,created_by,created_dt,last_updated_by,last_updated_date,request_ip,status) values(:pcode,:vcode,:createdby,:createddt,:lastupdatedby,:lastupdateddate,:requestid,:status)
completeProjectLocation=update iwmp_project_location set status=true where proj_id=:pcode
checkProjectLocationExist=select count(*) from iwmp_project_location where proj_id=:pcode
#financial Year Master Query
getAllFinaicialYear=from IwmpMFinYear
#Query for hitCount
getHitCount= from IwmpHitCount
#Other Queries
getOnlineUserList = select uReg.regId as regId,uMap.iwmpState.stName as stateName,uMap.iwmpState.stCode as stateCode,uReg.userType as userType,uReg.userId as userId,uReg.userName as userName,uReg.designation as designation,uReg.department as department,uReg.email as email,uReg.mobileNo as phone from IwmpLoginLog log,UserReg  uReg,UserMap uMap where log.userReg.regId=uReg.regId and uReg.regId=uMap.userReg.regId and log.loginSts = 'success' and date(log.loginDt) = date(now())
deleteInsertDolrState=delete from iwmp_user_map where reg_id=:regId
getlistofApprove=select distinct wc_id from iwmp_project_wc
getNewUser=from UserReg where regId=:regid and status='NEW'

#PIA Assign WC
getVillagePrjforWC=select DISTINCT  (select proj_name from iwmp_m_project where proj_id = d.proj_id)as projectname, (select b.bcode from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockcode, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockname,  v.vcode as villagecode, v.village_name as villagename, d.proj_location_id as projectlocid  from iwmp_village v, iwmp_project_location d, iwmp_block b where d.vcode = v.vcode  and d.proj_id = :pcode order by blockname,villagename
getVillagePrjforWC1= select DISTINCT  (select proj_name from iwmp_m_project where proj_id = d.proj_id)as projectname, (select b.bcode from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockcode, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockname,  v.vcode as villagecode, v.village_name as villagename, d.proj_location_id as projectlocid, w.wc_id as wcid1 from iwmp_village v, iwmp_project_location d, iwmp_block b, iwmp_project_wc w where d.vcode = v.vcode  and d.proj_id = :pcode and d.proj_location_id = w.proj_location_id order by blockname,villagename
checkWCLocationDraft = select count(*) from iwmp_project_wc p, iwmp_project_location d where d.proj_id=:pid and p.proj_location_id = d.proj_location_id and p.status = false
getmpngprolist=select distinct p.proj_name as mpdprojname, p.proj_id as projid from iwmp_m_project p, iwmp_project_location l, iwmp_user_reg r, iwmp_user_project_map m where p.proj_id = l.proj_id and l.status = 'true' and r.user_id = :user_id and m.reg_id = r.reg_id and m.proj_id = l.proj_id
getWsCommitte=select wcname, wc_id as wcid from iwmp_m_wc where proj_id= :pcode   
getdraftPrjforWC=select DISTINCT proj_wc_id as projwcid,(select proj_name from iwmp_m_project where proj_id = d.proj_id)as projectname, (select b.bcode from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockcode, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockname, d.vcode as villagecode, v.village_name as villagename, d.proj_location_id as projectlocid, w.wcname  from iwmp_village v, iwmp_project_location d, iwmp_block b, iwmp_m_wc w, iwmp_project_wc p where d.vcode = v.vcode and d.proj_id =:pcode and p.wc_id = w.wc_id and p.proj_location_id = d.proj_location_id and p.status = false order by blockname,villagename
#deldraftPrjforWC=delete from iwmp_project_wc where proj_wc_id = :pwccode
deldraftPrjforWC=delete from iwmp_project_location where vcode = :pwccode
checkWCLocationAsDraft = select count(*) from iwmp_project_wc where proj_location_id=:pid and status = false
saveWCLocationAsDraft=Insert into iwmp_project_wc(proj_location_id, wc_id, created_by, created_dt, last_updated_by, last_updated_date, request_ip, status) values(:pid, :wcid, :createdby,:createddt,:lastupdatedby,:lastupdateddate,:requestid,:status)
delWCLocationAsDraft=delete from iwmp_project_wc where proj_location_id = :pid  and status = false          
wsComitList=from IwmpMWc where iwmpMProject.projectId=:proj order by wcname
userProjList=from IwmpMProject  WHERE projectId in(select iwmpMProject.projectId from IwmpUserProjectMap where userReg.regId=:regid) order by projectSeqNo, projName asc
getProjectPrepare=from IwmpMProjectPrepare order by sequence
completeWCmap=update iwmp_project_wc set last_updated_by = :lastupdatedby, last_updated_date = :lastupdateddate, status = :status where proj_wc_id = :pwcid
checkWCStatus=select distinct w.status from iwmp_project_wc w, iwmp_project_location p where w.status = 'true' and p.proj_location_id = w.proj_location_id and proj_id = :projectId
getfinalPrjforWC=select DISTINCT proj_wc_id as projwcid,(select proj_name from iwmp_m_project where proj_id = d.proj_id)as projectname, (select b.bcode from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockcode, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockname, v.vcode as villagecode, v.village_name as villagename, d.proj_location_id as projectlocid, w.wcname  from iwmp_village v, iwmp_project_location d, iwmp_block b, iwmp_m_wc w, iwmp_project_wc p where d.vcode = v.vcode and b.block_code = v.block_code and d.proj_id = :pcode and p.wc_id = w.wc_id and p.proj_location_id = d.proj_location_id and p.status = true order by villagename
getWCLocationAdded=select wc_id as wcId from iwmp_project_wc where proj_location_id in(select proj_location_id from iwmp_project_location where proj_id=:regid)
checkWSCommittee=select distinct proj_id, a.proj_location_id, wc_id from iwmp_project_wc a, iwmp_project_location b where a.proj_location_id=b.proj_location_id and b.proj_id=:ProjId and a.status='true'
deletewcaftercompleteLoc=delete from iwmp_m_wc where wc_id not in(select distinct wc_id from iwmp_project_wc where proj_wc_id in(:wcid)) and proj_id=:projId
getVillagePrjforWCExisting=select DISTINCT  (select proj_name from iwmp_m_project where proj_id = d.proj_id)as projectname, (select b.bcode from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockcode, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockname,  d.vcode as villagecode, v.village_name as villagename, d.proj_location_id as projectlocid, cast((case when w.wc_id is null then '0' else w.wc_id end) as character varying(10)) as wccomma from iwmp_village v,  iwmp_project_location d left join iwmp_project_wc w on d.proj_location_id = w.proj_location_id  where d.vcode = v.vcode  and d.proj_id=:pcode and w.status is not true and d.status is true  order by blockname,villagename
getVillagePrjforWCExistingComma=select DISTINCT  (select proj_name from iwmp_m_project where proj_id = d.proj_id)as projectname, (select b.bcode from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockcode, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockname,  d.vcode as villagecode, v.village_name as villagename, d.proj_location_id as projectlocid, (select string_agg(cast(wc_id as character varying(200)), ',') from iwmp_project_wc w where d.proj_location_id = w.proj_location_id  ) as wccomma from iwmp_village v,  iwmp_project_location d where d.vcode = v.vcode  and d.proj_id=:pcode and d.status is true and proj_location_id in(select proj_location_id from iwmp_project_wc w where status is not true)  order by blockname,villagename
checkWCLocationAsDraftExisting=select count(*) from iwmp_project_wc where status=false and proj_location_id in(select proj_location_id from iwmp_project_location  where proj_id=:projid)
delWCLocationAsDraftExisting=delete from iwmp_project_wc where status=false and proj_location_id in(select proj_location_id from iwmp_project_location  where proj_id=:projid)
completeWCmapExisting=update iwmp_project_wc set last_updated_by=:lastupdatedby, last_updated_date=:lastupdateddate, status=:status where proj_location_id in (select proj_location_id from iwmp_project_location where proj_id=:projId)
getVillagePrjforWCfirst=select DISTINCT  (select proj_name from iwmp_m_project where proj_id = d.proj_id)as projectname, (select b.bcode from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockcode, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village vi where b.bcode = g.bcode and g.gcode = Vi.gcode and vi.vcode=d.vcode) as blockname,  d.vcode as villagecode, v.village_name as villagename, d.proj_location_id as projectlocid, cast((case when w.wc_id is null then '0' else w.wc_id end) as character varying(10)) as wcid1 from iwmp_village v,  iwmp_project_location d left join iwmp_project_wc w on d.proj_location_id = w.proj_location_id  where d.vcode = v.vcode  and d.proj_id=:pcode and w.status is not true and d.status is true  order by blockname,villagename




#statewiseprojectstatus
stateListBLS=select st_name as Stname,st_code as Stcode from iwmp_state where wdcpmksy = 1 order by st_name
batchlist=select fin_yr_cd as fincode, batch from iwmp_m_fin_year where batch_cd<=6 order by batch_cd

#slnadiscpermision
showslnastatus=select CASE WHEN approval_req = 'Y' THEN 'YES' when  approval_req = 'N' THEN 'NO' ELSE 'Decision Pending' END AS approval_req  from iwmp_state where st_code = :stcode
SetDistApprovalStatus=update iwmp_state set approval_req=:val,approval_req_date=:d  where st_code=:stcode

#getAddedPrepare=from IwmpProjectPrepare pp where pp.iwmpMProject.projectId=? order by pp.iwmpMProjectPrepare.projectMprepareId
getAddedPrepare=select a.project_mprepare_id as prepare_id, b.activity_status as activityStatus from iwmp_m_project_prepare a left join iwmp_project_prepare b on a.project_mprepare_id=b.prepare_id and b.project_id=:projid order by a.project_mprepare_id  

getFinyrMaster=from IwmpMFinYear order by finYrCd
isCurrentFinYearExist=select (case when (select coalesce((select fin_yr_desc from iwmp_m_fin_year where start_from<=current_date and end_to>=current_date),'0')='0') then '0' else '1' end)
nextFinYear=select to_number(to_char(start_from,'yyyy'),'9999')+1||'-'||to_number(to_char(end_to,'yyyy'),'9999')+1 as fin_yr_desc, to_char(start_from+interval '1 year','dd/MM/yyyy')||'<-->'||to_char(end_to+interval '1 year','dd/MM/yyyy') as fromTo from iwmp_m_fin_year where start_from=(select max(start_from) from iwmp_m_fin_year)
finYearDetail=select fin_yr_cd ,fin_yr_desc,to_char(start_from,'dd/mm/yyyy' )as start_date ,to_char(end_to,'dd/mm/yyyy' )as end_date,act_flag  from iwmp_m_fin_year
maxfinyrid=select coalesce(max(fn.finYrCd),0)+1 from IwmpMFinYear fn

blockList=from IwmpBlock WHERE iwmpDistrict.dcode=:distCode order by blockName asc

#showstatovillage=Select st.st_name, dist.dist_name, block.block_name, block.active as blockActive, gp.gram_panchayat_name, gp.active as gpActive, village.village_name, village.active as villageActive from iwmp_village village,iwmp_gram_panchayat gp, iwmp_block block, iwmp_district dist,Iwmp_State st where village.gcode=gp.gcode and gp.gcode = (case when ? = 0 then gp.gcode else ? end) and  gp.bcode=block.bcode  and block.dcode=dist.dcode and block.bcode= (case when ? = 0 then block.bcode else ? end) and dist.st_Code=st.st_Code and dist.dcode=? and st.st_code=? order by st.st_name,dist.dist_Name,block.block_Name,gp.gram_panchayat_name,village.village_name
showstatovillage=Select st.state_codelgd, st.st_name, dist.district_codelgd, dist.dist_name, block.block_codelgd, block.block_name, block.active as blockActive, gp.gram_panchayat_lgd_code, gp.gram_panchayat_name, gp.active as gpActive, village.village_lgdcode, village.village_name, village.active as villageActive from iwmp_village village,iwmp_gram_panchayat gp, iwmp_block block, iwmp_district dist, Iwmp_State st where village.gcode=gp.gcode and gp.gcode = (case when :gramp = 0 then gp.gcode else :gramp end) and  gp.bcode=block.bcode  and block.dcode=dist.dcode and block.bcode= (case when :blcode = 0 then block.bcode else :blcode end) and dist.st_Code=st.st_Code and dist.dcode=(case when :dist=0 then dist.dcode else :dist end) and st.st_code=(case when :stcd = 0 then st.st_code else :stcd end) and st.wdcpmksy=1 order by st.st_name, dist.dist_Name, block.block_Name, gp.gram_panchayat_name, village.village_name
#showstatovillagelgdTrue=Select st.st_name, dist.dist_name, block.block_name, block.active as blockActive, gp.gram_panchayat_name, gp.active as gpActive, village.village_name, village.active as villageActive from iwmp_village village,iwmp_gram_panchayat gp, iwmp_block block, iwmp_district dist,Iwmp_State st where village.gcode=gp.gcode and gp.gcode = (case when ? = 0 then gp.gcode else ? end) and  gp.bcode=block.bcode  and block.dcode=dist.dcode and block.bcode= (case when ? = 0 then block.bcode else ? end) and dist.st_Code=st.st_Code and dist.dcode=? and st.st_code=? and village.active='true' order by st.st_name, dist.dist_Name, block.block_Name, gp.gram_panchayat_name, village.village_name
showstatovillagelgdTrue=Select st.state_codelgd, st.st_name, dist.district_codelgd, dist.dist_name, block.block_codelgd, block.block_name, block.active as blockActive, gp.gram_panchayat_lgd_code, gp.gram_panchayat_name, gp.active as gpActive, village.village_lgdcode, village.village_name, village.active as villageActive from iwmp_village village,iwmp_gram_panchayat gp, iwmp_block block, iwmp_district dist,Iwmp_State st where village.gcode=gp.gcode and gp.gcode = (case when :gramp = 0 then gp.gcode else :gramp end) and  gp.bcode=block.bcode  and block.dcode=dist.dcode and block.bcode= (case when :blcode = 0 then block.bcode else :blcode end) and dist.st_Code=st.st_Code and dist.dcode=(case when :dist= 0 then dist.dcode else :dist end) and st.st_code=(case when :stcd = 0 then st.st_code else :stcd end) and village.active='true' and st.wdcpmksy=1 order by st.st_name, dist.dist_Name, block.block_Name, gp.gram_panchayat_name, village.village_name
#showstatovillagelgdFalse=Select st.st_name, dist.dist_name, block.block_name, block.active as blockActive, gp.gram_panchayat_name, gp.active as gpActive, village.village_name, village.active as villageActive from iwmp_village village,iwmp_gram_panchayat gp, iwmp_block block, iwmp_district dist,Iwmp_State st where village.gcode=gp.gcode and gp.gcode = (case when ? = 0 then gp.gcode else ? end) and  gp.bcode=block.bcode  and block.dcode=dist.dcode and block.bcode= (case when ? = 0 then block.bcode else ? end) and dist.st_Code=st.st_Code and dist.dcode=? and st.st_code=? and village.active='false'  order by st.st_name, dist.dist_Name, block.block_Name, gp.gram_panchayat_name, village.village_name
showstatovillagelgdFalse=Select st.state_codelgd, st.st_name, dist.district_codelgd, dist.dist_name, block.block_codelgd, block.block_name, block.active as blockActive, gp.gram_panchayat_lgd_code, gp.gram_panchayat_name, gp.active as gpActive, village.village_lgdcode, village.village_name, village.active as villageActive from iwmp_village village,iwmp_gram_panchayat gp, iwmp_block block, iwmp_district dist,Iwmp_State st where village.gcode=gp.gcode and gp.gcode = (case when :gramp = 0 then gp.gcode else :gramp end) and  gp.bcode=block.bcode  and block.dcode=dist.dcode and block.bcode= (case when :blcode = 0 then block.bcode else :blcode end) and dist.st_Code=st.st_Code and dist.dcode=(case when :dist= 0 then dist.dcode else :dist end) and st.st_code=(case when :stcd = 0 then st.st_code else :stcd end) and village.active='false' and st.wdcpmksy=1 order by st.st_name, dist.dist_Name, block.block_Name, gp.gram_panchayat_name, village.village_name

#getphysicalhead
phyHeadDetail=select head_code as headcode, head_desc as headdesc, seq_no as seqno, status, bls_required  from  iwmp_m_phy_heads order by headcode asc 
savephyHead=Insert into iwmp_m_phy_heads(head_desc, status, bls_required, last_updated_by, last_updated_date, request_ip,seq_no)values(:headdesc, :status, :bline, :lastupdatedby, :lastupdateddate, :requestid, :seqno)
deletephyHead=delete from iwmp_m_phy_heads where head_code = :id
findphyshead=select head_desc as headdesc, seq_no as seqno, status, bls_required   from iwmp_m_phy_heads where head_code = :id
updatephyHead=update iwmp_m_phy_heads set head_desc = :headdesc, status = :status, seq_no = :seqno, bls_required = :bline, last_updated_by = :lastupdatedby, last_updated_date = :lastupdateddate, request_ip = :ipadd where head_code = :id
seqnosql=select max(seq_no)+1 as seqno from iwmp_m_phy_heads
allHeadQuery=from IwmpMPhyHeads where head_code < 8
allHeadDQuery=select distinct headcode, headdesc from IwmpMPhyActivityDashboard where status = 'A' order by headcode

#getphysicalactivity
phyActivityDetail=select activity_code as activitycode, head_code||     '               '||(select h.head_desc from iwmp_m_phy_heads as h where h.head_code=ac.head_code)||'  'as  headdesc, activity_desc as actdesc ,seq_no as seqno,cast(asset as varchar) as asset, status , (select u.unit_desc from iwmp_m_unit as u where u.unit_code = ac.unit_code) as unithdesc from  iwmp_m_phy_activity as ac order by headdesc asc, seqno asc 
getheadcode=select head_code as headcode, (head_code ||'.'|| head_desc) as headdesc from iwmp_m_phy_heads
getuomcode=select unit_code as unitcode, unit_desc as unitdesc from iwmp_m_unit
getseqno=select coalesce(max(seq_no),0)+0.20 as seqno from iwmp_m_phy_activity where head_code = :headcode
savephyAct=Insert into iwmp_m_phy_activity(head_code, activity_desc, unit_code, status, last_updated_by, last_updated_date, request_ip, seq_no, asset)values(:headcode, :adesc, :uomcode, :status,  :lastupdatedby, :lastupdateddate, :requestid, :seqno, :assets)
findactvdesc=select activity_desc as actdesc, head_code as headcode, unit_code as unitcode, seq_no as seqno, asset as asset1, status from iwmp_m_phy_activity  where activity_code = :id
updatephyAct=update iwmp_m_phy_activity set activity_desc = :adesc, unit_code = :uomcode, status = :status, seq_no = :seqno, last_updated_by = :lastupdatedby, last_updated_date = :lastupdateddate, request_ip = :ipadd, asset = :asset where activity_code = :id
deletephyAct=delete from iwmp_m_phy_activity where activity_code = :id

#getUOMdata
getuomdata=select unit_code as unitcode, unit_desc as unitdesc from iwmp_m_unit
finduomcode=select max(unit_code)+1 as unitcode from iwmp_m_unit
saveuomdata=insert into iwmp_m_unit(unit_code, unit_desc, last_updated_by, last_updated_date, request_ip)values(:unitcode, :unitdesc, :lastupdatedby, :lastupdateddate, :requestid)
finduomeditdata=select unit_code as unitcode, unit_desc as unitdesc from iwmp_m_unit where unit_code = :unitcode
updateUOM=update iwmp_m_unit set unit_desc = :uomdesc, last_updated_by = :lastupdatedby, last_updated_date=:lastupdateddate, request_ip = :ipadd where unit_code = :id
deleteuomdata=delete from iwmp_m_unit where unit_code = :id

#PhysicalActionPlan Query
getFinYearProjectWise=select year from IwmpMFinYear year,IwmpMProject project where project.iwmpMFinYear.finYrCd<=year.finYrCd and project.projectId= (case when 0<:projId then :projId else project.projectId end) order by year.finYrCd
getFinYearExistPlan=select year from IwmpMFinYear year where finYrCd in(select iwmpMFinYear.finYrCd from IwmpProjectPhysicalPlan where iwmpMProject.projectId=:projId and status='C')
getHead=from IwmpMPhyHeads
getActivity= select activityCode, activityDesc from IwmpMPhyActivity where iwmpMPhyHeads.headCode=(case when 0<:headId then :headId else iwmpMPhyHeads.headCode end )
getUnitMaster=from IwmpMUnit
saveAssetParameter=INSERT INTO public.iwmp_activity_asset_addon_parameter( activity_code, parameter_desc, unit_code) VALUES (:aActivity, :parameterDesc, :aUnit)

getUnit =select unit from IwmpMUnit unit,IwmpMPhyActivity act where act.activityCode=:activityId and act.iwmpMUnit.unitCode=unit.unitCode
saveAsDraftPhysicalAnnualActionPlan=select save_project_physical_action_plan_as_draft(:plan,:yearcd,:projectcd,:activity,:assetid,:createdby,:ipaddress)
deletePhysicalAnnualActionPlan=delete from iwmp_project_physical_aap aap where planid=(select planid from iwmp_project_physical_plan plan,iwmp_m_project project,iwmp_m_fin_year year where plan.proj_id=project.proj_id and project.proj_id=:projectcd and plan.fin_yr_cd=year.fin_yr_cd and year.fin_yr_cd=:yearcd)
#getListofPhysicalActionPlan=from IwmpProjectPhysicalAap where  iwmpProjectPhysicalPlan.iwmpMProject.projectId=:projectcd and iwmpProjectPhysicalPlan.iwmpMFinYear.finYrCd=:yearcd order by iwmpMPhyActivity.activityCode, iwmpMPhyActivity.iwmpMPhyHeads.headCode
getListofPhysicalActionPlan= select iwmpMPhyActivity.activityCode as activitycode, iwmpMPhyActivity.activityDesc as activityname, iwmpMPhyActivity.iwmpMPhyHeads.headCode as headcode, iwmpMPhyActivity.iwmpMPhyHeads.headDesc as headname, iwmpMPhyActivity.iwmpMUnit.unitCode as unitcode, iwmpMPhyActivity.iwmpMUnit.unitDesc as unitname, qtyPlanned as plan, aapid as aapid from IwmpProjectPhysicalAap where  iwmpProjectPhysicalPlan.iwmpMProject.projectId=:projectcd and iwmpProjectPhysicalPlan.iwmpMFinYear.finYrCd=:yearcd order by iwmpMPhyActivity.activityCode, iwmpMPhyActivity.iwmpMPhyHeads.headCode 
checkAlreadyExistActivity = select iwmpMPhyActivity.activityCode from IwmpProjectPhysicalAap where  iwmpProjectPhysicalPlan.iwmpMProject.projectId=:projectcd and iwmpProjectPhysicalPlan.iwmpMFinYear.finYrCd=:yearcd
deleteActivityFromAnnualActionPlan= delete from IwmpProjectPhysicalAap where aapid=:aapid
#getUserToForward = select case when plan_dist_approval = true then dist.dist_name else '' end as distname,case when plan_dist_approval = true then reg.user_id else '' end as userid,case when plan_dist_approval = true then reg.reg_id else null end as regid from iwmp_approvel_level level, iwmp_user_map map,iwmp_district dist,iwmp_user_reg reg where level.st_code=map.st_code and map.dcode=dist.dcode and reg.reg_id=map.reg_id and map.dcode=(select dcode from iwmp_user_map map where  map.reg_id=:regId) and UPPER(reg.status) =upper('Active') and user_type='DI' 
getUserToForward = select case when approval_req='Y' then dist.dist_name else '' end as distname, case when approval_req='Y' then reg.user_id else '' end as userid, case when approval_req='Y' then reg.reg_id else null end as regid from iwmp_state st,iwmp_district dist,iwmp_user_reg reg, iwmp_user_map map where st.st_code=map.st_code and map.dcode=dist.dcode and reg.reg_id=map.reg_id and map.dcode=(select dcode from iwmp_user_map map where  map.reg_id=:regId) and UPPER(reg.status) =upper('Active') and user_type='DI' order by regid
annual_action_plan_pia_forward= select pia_forward(:senton,:sentfrom,:sentto,:yearcd,:projectcd,:remarks)
checkForAlreadyForwardedPlan= from IwmpProjectPhysicalTranx where iwmpProjectPhysicalPlan.iwmpMFinYear.finYrCd=:yearcd and iwmpProjectPhysicalPlan.iwmpMProject.projectId=:projectcd 
checkForAlreadyForwardedPlanByPlanId=from IwmpProjectPhysicalTranx where iwmpProjectPhysicalPlan.planid=:planid and iwmpUserRegBySentfrom.regId=:regId
getProjectByUserForAAP=select project from IwmpUserProjectMap project where iwmpMProject.projectId in (select prepare.iwmpMProject.projectId from IwmpProjectPrepare prepare,IwmpMProjectPrepare mprepare where mprepare.projectMprepareId=prepare.iwmpMProjectPrepare.projectMprepareId and mprepare.projectMprepareId=1 and prepare.activityStatus=true) and project.userReg.regId=:regId and project.iwmpMProject.status='C' 
getProjectByStateForAAP=select project from IwmpProjectPhysicalPlan project where iwmpMProject.projectId in (select projectId from IwmpMProject where  iwmpDistrict.dcode in (select dcode from IwmpDistrict where iwmpState.stCode=:regId )) and status='C'
#viewAAPMovement=from IwmpProjectPhysicalTranx tranx where tranx.iwmpUserRegBySentfrom.regId=:regId order by tranx.iwmpProjectPhysicalPlan.iwmpMProject.projName,tranx.iwmpProjectPhysicalPlan.iwmpMFinYear.finYrCd
#viewAAPMovement = select plan.planid,proj.proj_name as projectdesc,case when plan.status='D' and tranx.action='R' then 'Rejected' when plan.status='D' then 'Pending' else 'Completed' end as status,case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlevel, case when tranx.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tranx.remarks end as remarks,yr.fin_yr_desc as finyr from Iwmp_Project_Physical_Tranx tranx,iwmp_user_reg reg,iwmp_Project_Physical_Plan plan,iwmp_m_project proj,iwmp_m_fin_year yr where tranx.sent_to=reg.reg_id and tranx.sentfrom=:regid and tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd order by proj.proj_name,yr.fin_yr_desc
#viewAAPMovement = select DISTINCT ON (plan.planid) plan.planid,proj.proj_name as projectdesc,case when plan.status='D' and tranx.action='R' then 'Rejected' when plan.status='D' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlevel, (select case when tr.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tr.remarks end from Iwmp_Project_Physical_Tranx tr where tr.planid=tranx.planid order by tr.senton desc limit 1) as remarks,yr.fin_yr_desc as finyr,(select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regid) as userType from Iwmp_Project_Physical_Tranx tranx,iwmp_user_reg reg, iwmp_Project_Physical_Plan plan, iwmp_m_project proj,iwmp_m_fin_year yr where tranx.sent_to=reg.reg_id and (tranx.sentfrom=:regid or tranx.sent_to=:regid) and tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd order by  plan.planid, proj.proj_name,yr.fin_yr_desc, tranx.senton desc
viewAAPMovement =  select planid,projectdesc,case when a.status='R' then 'Rejected' when a.status='F' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlevel,remarks,finyr,usertype from (select DISTINCT ON (tranx.planid) tranx.planid,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) status,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid ,LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyr,(select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regid) as userType from Iwmp_Project_Physical_Tranx tranx, iwmp_Project_Physical_Plan plan, iwmp_m_project proj, iwmp_m_fin_year yr where tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd and tranx.planid in (select distinct planid from Iwmp_Project_Physical_Tranx where sentfrom=:regid or sent_to=:regid) order by tranx.planid,tranx.senton desc) a,iwmp_user_reg reg where regid=reg.reg_id order by  projectdesc,finyr
viewAAPCMovement =  select planid,projectdesc,case when a.status='R' then 'Rejected' when a.status='F' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlevel,remarks,finyr,usertype from (select DISTINCT ON (tranx.planid) tranx.planid,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) status,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid ,LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyr,(select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regid) as userType from Iwmp_Project_Physical_Tranx tranx, iwmp_Project_Physical_Plan plan, iwmp_m_project proj, iwmp_m_fin_year yr where tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.status = 'C' and plan.fin_yr_cd=yr.fin_yr_cd and tranx.planid in (select distinct planid from Iwmp_Project_Physical_Tranx where sentfrom=:regid or sent_to=:regid) order by tranx.planid,tranx.senton desc) a,iwmp_user_reg reg where regid=reg.reg_id order by projectdesc,finyr
viewARMovement = select planid,projectdesc,case when a.status='R' then 'Rejected' when a.status='F' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlevel,remarks,finyr,usertype from (select DISTINCT ON (tranx.planid) tranx.planid,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) status,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid ,LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyr,(select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regid) as userType from Iwmp_Project_Physical_Tranx tranx, iwmp_Project_Physical_Plan plan, iwmp_m_project proj, iwmp_m_fin_year yr where tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.status != 'C' and plan.fin_yr_cd=yr.fin_yr_cd and tranx.planid in (select distinct planid from Iwmp_Project_Physical_Tranx where sentfrom=:regid or sent_to=:regid) order by tranx.planid,tranx.senton desc) a,iwmp_user_reg reg where regid=reg.reg_id order by projectdesc,finyr
#viewAAPMovement =  select planid,projectdesc,case when a.status='R' then 'Rejected' when a.status='F' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlevel,remarks,finyr,usertype from (select DISTINCT ON (tranx.planid) tranx.planid,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) status,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid ,LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.planid ORDER BY tranx.planid,tranx.senton RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyr,(select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regid) as userType from Iwmp_Project_Physical_Tranx tranx, iwmp_Project_Physical_Plan plan, iwmp_m_project proj, iwmp_m_fin_year yr where tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd and tranx.planid in (select distinct planid from Iwmp_Project_Physical_Tranx where sent_to=:regid ) order by tranx.planid,tranx.senton desc) a,iwmp_user_reg reg where regid=reg.reg_id order by planid, projectdesc,finyr
viewAAPMovementForDISLNA = select DISTINCT ON (plan.planid) plan.planid,proj.proj_name as projectdesc,case when tranx.action='R' then 'Rejected' when tranx.action='F' then 'Pending' when tranx.action='C' then 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlevel, case when tranx.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tranx.remarks end as remarks,yr.fin_yr_desc as finyr,(select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regid) as userType from Iwmp_Project_Physical_Tranx tranx,iwmp_user_reg reg, iwmp_Project_Physical_Plan plan, iwmp_m_project proj,iwmp_m_fin_year yr where tranx.sent_to=reg.reg_id and (tranx.sentfrom=:regid or tranx.sent_to=:regid) and tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd order by  plan.planid, proj.proj_name,yr.fin_yr_desc, tranx.senton desc 
getPlanDetails = from IwmpProjectPhysicalAap where planid=:planid  order by iwmpMPhyActivity.iwmpMPhyHeads.seqNo,iwmpMPhyActivity.seqNo
senttoslna= select reg.reg_id from iwmp_user_reg reg,iwmp_user_map map where map.st_code=(select st_code from iwmp_user_map where reg_id=:regId) and reg.reg_id=map.reg_id and reg.user_type='SL' and reg.user_id in (select user_id from iwmp_user_app_role_map where role_id=3)
sentback= select distinct on (sentfrom) sentfrom from iwmp_project_physical_tranx,iwmp_user_reg where planid=:planId and sent_to=:regId and sentfrom=reg_id and user_type=(select distinct on (user_type) user_type from iwmp_project_physical_tranx,iwmp_user_reg where planid=:planId and sent_to=:regId and sentfrom=reg_id)
sentbacktopia= select distinct on (sentfrom) sentfrom from iwmp_project_physical_tranx,iwmp_user_reg where planid=:planId and sent_to=:regId and sentfrom=reg_id and user_type='PI'
#getPlanMovementDetails= select  plan.planid,proj.proj_name as projectdesc,case when plan.status='D' and tranx.action='R' then 'Rejected' when plan.status='D' then 'Pending' else 'Completed' end as status, ( select user_name||'('||user_id||')' from iwmp_user_reg where reg_id=tranx.sentfrom)as sentfrom, ( select user_name||'('||user_id||')' from iwmp_user_reg where reg_id=tranx.sent_to) as sentto, case when tranx.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tranx.remarks end as remarks,tranx.senton,yr.fin_yr_desc as finyr,tranx.action from Iwmp_Project_Physical_Tranx tranx,iwmp_user_reg reg, iwmp_Project_Physical_Plan plan, iwmp_m_project proj,iwmp_m_fin_year yr where tranx.sent_to=reg.reg_id and tranx.planid=:planid and tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd order by  plan.planid, proj.proj_name,yr.fin_yr_desc, tranx.senton desc
getPlanMovementDetails= select  plan.planid,proj.proj_name as projectdesc,case when plan.status='D' and tranx.action='R' then 'Rejected' when plan.status='D' then 'Pending' else 'Completed' end as status, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI' then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end)||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st,iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sentfrom)as sentfrom, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI' then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end)||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st,iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_to) as sentto, case when tranx.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tranx.remarks end as remarks,tranx.senton,yr.fin_yr_desc as finyr,tranx.action from Iwmp_Project_Physical_Tranx tranx,iwmp_user_reg reg, iwmp_Project_Physical_Plan plan, iwmp_m_project proj,iwmp_m_fin_year yr where tranx.sent_to=reg.reg_id and tranx.planid=:planid and tranx.planid=plan.planid and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd order by plan.planid, proj.proj_name,yr.fin_yr_desc, tranx.senton desc
getRemarks = select tranx from IwmpProjectPhysicalTranx tranx,IwmpProjectPhysicalPlan plan where tranx.iwmpUserRegBySentfrom.regId=:regId and tranx.iwmpProjectPhysicalPlan.planid=plan.planid and plan.iwmpMProject.projectId=:projectcd and plan.iwmpMFinYear.finYrCd=:yearcd order by tranx.senton desc
getProjectByDcodeForPhyActPlanReport = select distinct on (proj.proj_name) proj_name,proj.proj_id from iwmp_project_physical_plan plan,iwmp_m_project proj where planid in (select planid from iwmp_project_physical_tranx where planid in (select planid from iwmp_project_physical_tranx where sentfrom in (select map.reg_id from iwmp_user_map map, iwmp_user_reg reg where dcode=:dCode and map.reg_id=reg.reg_id and reg.user_type='PI' and reg.status='Active' and map.dcode=:dCode)) and action='C' ) and plan.proj_id=proj.proj_id
getFromYearForPhyActPlanReport = select fin_yr_cd,fin_yr_desc from iwmp_m_fin_year where fin_yr_cd in (select fin_yr_cd from iwmp_project_physical_plan where proj_id=:pCode and status='C') 
getToYearForPhyActPlanReport = select fin_yr_cd,fin_yr_desc from iwmp_m_fin_year where fin_yr_cd in (select fin_yr_cd from iwmp_project_physical_plan where fin_yr_cd>=:fromYear and status='C' and proj_id=:projId )
getPhysicalActionPlanReport = select head.head_code as headcode,head.head_desc as headname,head.seq_no as headsequence,act.activity_code as activitycode,act.activity_desc as activityname,act.seq_no as activitysequence,unit.unit_desc as unitname,aap.qty_planned as plan,yr.fin_yr_desc as yrdesc from iwmp_project_physical_aap aap, iwmp_project_physical_plan plan,iwmp_m_phy_activity act,iwmp_m_phy_heads head ,iwmp_m_unit unit,iwmp_m_fin_year yr  where aap.planid=plan.planid and plan.fin_yr_cd between :fromYear and :toYear and aap.phy_activity_code= act.activity_code and plan.status='C' and act.head_code=head.head_code and act.unit_code=unit.unit_code and plan.fin_yr_cd=yr.fin_yr_cd and plan.proj_id=:projId 
finPhyTrgtRpt = select h.head_code as headcode, head_desc as headname,h.seq_no as headsequence, a.activity_code as activitycode, activity_desc as activityname, a.seq_no as activitysequence, fin_yr_desc as yrdesc , (select qty_planned from iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C' and  p.planid = dD.planid and proj_id = :projId and p.fin_yr_cd = f.fin_yr_cd  and phy_activity_code = a.activity_code ) as plan , (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname from iwmp_m_fin_year f,  iwmp_m_phy_heads h join iwmp_m_phy_activity a on (a.head_code = h.head_code)  where fin_yr_cd  between  :fromYear and  :toYear order by h.seq_no, a.seq_no, fin_yr_cd
finPhyTrgtRpt2 =select h.head_code as headcode, head_desc as headname,h.seq_no as headsequence, a.activity_code as activitycode, activity_desc as activityname, a.seq_no as activitysequence, fin_yr_desc as yrdesc , (select qty_planned from iwmp_project_physical_aap dD where p.planid = dD.planid    and dD.phy_activity_code = a.activity_code ) as plan , (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname from iwmp_m_fin_year f,iwmp_project_physical_plan p,  iwmp_m_phy_heads h join iwmp_m_phy_activity a on (a.head_code = h.head_code) where proj_id = :projId and upper(p.status) ='C' and p.fin_yr_cd = f.fin_yr_cd and f.fin_yr_cd  between  :fromYear and  :toYear order by h.seq_no, a.seq_no, f.fin_yr_cd 
finPhyTrgtRptAllProj=select distinct headcode, headname, headsequence, c.activitycode, activityname, activitysequence, yrdesc, COALESCE(d.qty_planned,0.00) as plan, unitname from (select h.head_code as headcode, head_desc as headname,h.seq_no as headsequence, act.activity_code as activitycode, activity_desc as activityname, act.seq_no as activitysequence, unit_desc as unitname from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u where h.head_code=act.head_code and act.unit_code=u.unit_code) c left join (select phy_activity_code as activitycode, coalesce(sum(qty_planned),0.0) as qty_planned, fin_yr_desc as yrdesc from iwmp_project_physical_aap dD, iwmp_project_physical_plan p, iwmp_m_fin_year fa where p.planid = dD.planid and p.fin_yr_cd=fa.fin_yr_cd  and upper(p.status)='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distCode) group by activitycode, yrdesc) d on c.activitycode= d.activitycode join iwmp_m_fin_year f	on 	 f.fin_yr_desc=d.yrdesc join iwmp_project_physical_plan pp on pp.fin_yr_cd=f.fin_yr_cd where f.fin_yr_cd  between :fromYear and  :toYear  order by headsequence, activitysequence, yrdesc			
finPhyTrgtRptAllDist=select distinct headcode, headname, headsequence, c.activitycode, activityname, activitysequence, yrdesc, COALESCE(d.qty_planned,0.00) as plan, unitname from (select h.head_code as headcode, head_desc as headname,h.seq_no as headsequence, act.activity_code as activitycode, activity_desc as activityname, act.seq_no as activitysequence, unit_desc as unitname from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u where h.head_code=act.head_code and act.unit_code=u.unit_code) c left join (select phy_activity_code as activitycode, coalesce(sum(qty_planned),0.0) as qty_planned, fin_yr_desc as yrdesc from iwmp_project_physical_aap dD, iwmp_project_physical_plan p, iwmp_m_fin_year fa where p.planid = dD.planid and p.fin_yr_cd=fa.fin_yr_cd  and upper(p.status)='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:stCode)) group by activitycode, yrdesc) d on c.activitycode= d.activitycode join iwmp_m_fin_year f	on 	 f.fin_yr_desc=d.yrdesc join iwmp_project_physical_plan pp on pp.fin_yr_cd=f.fin_yr_cd where f.fin_yr_cd  between :fromYear and  :toYear  order by headsequence, activitysequence, yrdesc		  			 
finPhyTrgtRptAllState=select distinct headcode, headname, headsequence, c.activitycode, activityname, activitysequence, yrdesc, COALESCE(d.qty_planned,0.00) as plan, unitname from (select h.head_code as headcode, head_desc as headname,h.seq_no as headsequence, act.activity_code as activitycode, activity_desc as activityname, act.seq_no as activitysequence, unit_desc as unitname from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u where h.head_code=act.head_code and act.unit_code=u.unit_code) c left join (select phy_activity_code as activitycode, coalesce(sum(qty_planned),0.0) as qty_planned, fin_yr_desc as yrdesc from iwmp_project_physical_aap dD, iwmp_project_physical_plan p, iwmp_m_fin_year fa where p.planid = dD.planid and p.fin_yr_cd=fa.fin_yr_cd  and upper(p.status)='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code in (select st_code from iwmp_state where wdcpmksy=1))) group by activitycode, yrdesc) d on c.activitycode= d.activitycode join iwmp_m_fin_year f	on 	 f.fin_yr_desc=d.yrdesc join iwmp_project_physical_plan pp on pp.fin_yr_cd=f.fin_yr_cd where f.fin_yr_cd  between  :fromYear and  :toYear  order by headsequence, activitysequence, yrdesc		  

getplanidData=Select planid from iwmp_project_physical_plan where proj_id=:projectcd and fin_yr_cd=:yearcd and status='C'
updatePhysicalAnnualActionPlan=update iwmp_project_physical_aap set qty_planned=:plan, updatedby=:created, updatedon=now() where phy_activity_code=:activity and planid=:plan_id

getHeadActivity = from IwmpMPhyActivity
wcdcPiaUser1=select  (select st_name from iwmp_state  where st_code=map.st_code) as state_name, (select dist_name from iwmp_district  where st_code=map.st_code and dcode=map.dcode) as dist_name, reg.user_id from iwmp_user_reg as reg, iwmp_user_map  as map where upper(reg.status)='ACTIVE' and reg.user_type='DI' and reg.reg_id=map.reg_id and map.st_code=(case when :state=0 then map.st_code else :state end) order by state_name, dist_name, user_id
wcdcPiaUser2=select  (select st_name from iwmp_state  where st_code=map.st_code) as state_name, (select dist_name from iwmp_district where st_code=map.st_code and dcode=map.dcode) as dist_name, (select proj_name from iwmp_m_project  where proj_id=pm.proj_id) as proj_name, reg.user_name, reg.user_id from iwmp_user_reg as reg, iwmp_user_map  as map, iwmp_user_project_map as pm where upper(reg.status)='ACTIVE' and reg.user_type='PI' and reg.reg_id=map.reg_id and  map.reg_id=pm.reg_id and  reg.reg_id=pm.reg_id and map.st_code=(case when :state=0 then map.st_code else :state end) and map.dcode=(case when :district=0 then map.dcode else :district end)  order by state_name, dist_name, reg.user_id
#prjctLocDetail=select p.proj_name as projectname, b.block_name as blockname, g.gram_panchayat_name as grampanchayatname, v.village_name as villagename,  w.wcname as wcname from iwmp_m_project p, iwmp_block b, iwmp_gram_panchayat g, iwmp_village v, iwmp_m_wc w, iwmp_project_location l, iwmp_project_wc wc, iwmp_district d where l.proj_id=p.proj_id and p.dcode=d.dcode and d.dcode=b.dcode and b.bcode=g.bcode and g.gcode=v.gcode and v.vcode=l.vcode and l.proj_location_id=wc.proj_location_id and w.wc_id=wc.wc_id and l.proj_id=w.proj_id and l.status='true' and wc.status='true' and d.dcode=:dist and p.proj_id=(case when :proj=0 then p.proj_id else :proj end) order by p.proj_name, b.block_name, g.gram_panchayat_name, v.village_name, w.wcname
prjctLocDetail=select p.proj_name as projectname, (select BLOCK_NAME FROM IWMP_BLOCK b, IWMP_GRAM_PANCHAYAT g, IWMP_VILLAGE v WHERE b.bcode = g.bcode and g.GCODE = V.GCODE and v.vcode=l.vcode) AS blockname, (select GRAM_PANCHAYAT_NAME FROM IWMP_GRAM_PANCHAYAT g,IWMP_VILLAGE v WHERE g.GCODE = V.GCODE and v.vcode=l.vcode) AS grampanchayatname, (select village_name from iwmp_village where vcode=l.vcode) as villagename,w.wcname as wcname from iwmp_m_project p,iwmp_m_wc w, iwmp_project_location l, iwmp_project_wc wc, iwmp_district d where d.st_code = :state and p.dcode=d.dcode and l.proj_id=p.proj_id and l.proj_location_id=wc.proj_location_id and w.wc_id=wc.wc_id and l.proj_id=w.proj_id and l.status='true' and wc.status='true'  and d.dcode=(case when :dist=0 then d.dcode else :dist end)  and p.proj_id=(case when :proj=0 then p.proj_id else :proj end) order by projectname, blockname, grampanchayatname, villagename, wcname
getFromYearForTarAchProjOutcome=select fin_yr_cd,fin_yr_desc from iwmp_m_fin_year where fin_yr_cd >= (select min(fin_yr_cd) from iwmp_m_project where proj_id=(case when :pCode=0 then proj_id else :pCode end)  and status='C') order by fin_yr_cd asc
getToYearForTarAchProjOutcome=select fin_yr_cd,fin_yr_desc from iwmp_m_fin_year where fin_yr_cd >= :fromYear order by fin_yr_cd asc
#dolrsupportdata
#getdolrsupportdata=select dr.user_id as userid, dr.user_name as username, dr.degination, dr.department, dr.address, dr.address1, dr.phone ,(select array_to_string(array_agg(st_name), ', ' ) as states from iwmp_state st, iwmp_dolrsupport_state x where st.st_code = x.state_cd and x.user_id = dr.user_id  )  from iwmp_dolr_support dr
# uploadCategoryUpload
getCategoryUploadforSLNA=from IwmpUploadCategory WHERE categoryType in ('d', 'ss')
ListofuploadedFileforSLNA=select id, (select uc.upload_category from iwmp_upload_category as uc where uc.id = ud.upload_category_id )as upload, subject, file_name, is_new, path ||file_name || '.' || file_extension as file_full_path, publish, ud.upload_category_id from iwmp_user_upload_details as ud where  st_code=:stcd order by upload, subject asc
updmaxregid=Select coalesce(max(ud.id),0)+1 from IwmpUserUploadDetails ud
userUploadSaveSLNA=Insert into iwmp_user_upload_details(created_by, created_date, date_of_publish, file_extension, file_name, is_new, path, publish, requested_ip, st_code, subject, updated_by, updated_date, upload_category_id, language) values(:created_by, :created_date, :date_of_publish, :file_extension, :file_name, :is_new, :path, :publish, :requested_ip, :st_code, :subject, :updated_by, :updated_date, :upload_category_id, :lang)
userUploadDeleteSLNA=delete from iwmp_user_upload_details where id=:id
userUploadUpdateSLNA=update iwmp_user_upload_details set subject=:new_sub, is_new =:new_cap, publish=:new_pub, upload_category_id=:newcat_id, updated_by=:loginid, updated_date =now() where id=:id
ListofuploadedfileDL=select id, (select case when ud.st_code<>0 then (select st_name from iwmp_state where iwmp_state.st_code =ud.st_code) else 'DoLR Admin' end ) as state_name, (select uc.upload_category from iwmp_upload_category as uc where uc.id = ud.upload_category_id ) as upload, subject, file_name, is_new, (path ||file_name)  as file_full_path, publish, ud.upload_category_id, file_extension, st_code from iwmp_user_upload_details as ud order by state_name, created_date desc
getCategoryUploadforDL=from IwmpUploadCategory order by categoryType
ListofUploadedDetailsSLNAReportAllState=select id, (select case  when ud.st_code<>0 then (select st_name from iwmp_state where iwmp_state.st_code=ud.st_code) else  'Dolr'  end ) as state_name, (select uc.upload_category from iwmp_upload_category as uc where uc.id = ud.upload_category_id ) as upload, subject, file_name, is_new, (path ||file_name) as file_full_path, publish, ud.upload_category_id, file_extension, st_code, to_char(updated_date, 'DD/MM/YYYY') as updated_date, (case ((ud.updated_date + INTERVAL '60 day')>=current_date) when true then 'true' else 'false'  end) as updatesixty, to_char((ud.updated_date + INTERVAL '60 day'),'DD/MM/YYYY') as addsixtydate, current_date from iwmp_user_upload_details as ud where publish=true and upload_category_id=8 and ud.st_code<>0 order by state_name, upload, ud.updated_date desc
ListofUploadedDetailsSLNAReport=select id, (select case  when ud.st_code<>0 then (select st_name from iwmp_state where iwmp_state.st_code=ud.st_code) else  'Dolr'  end ) as state_name, (select uc.upload_category from iwmp_upload_category as uc where uc.id = ud.upload_category_id ) as upload, subject, file_name, is_new, (path ||file_name) as file_full_path, publish, ud.upload_category_id, file_extension, st_code, to_char(updated_date, 'DD/MM/YYYY') as updated_date, (case ((ud.updated_date + INTERVAL '60 day')>=current_date) when true then 'true' else 'false'  end) as updatesixty, to_char((ud.updated_date + INTERVAL '60 day'),'DD/MM/YYYY') as addsixtydate, current_date from iwmp_user_upload_details as ud where st_code=:stcd and publish=true order by state_name, upload, ud.updated_date desc
tarachprojrpt=select *,COALESCE((select sum(achievement) from wdcpmksy_outcome_achievement ach,wdcpmksy_outcome_ach_details det where ach.achievement_id=det.achievement_id and outcome_id=outcomeid and fin_yr_cd=x.finyr),null,0.0) achievement from (select o.outcome_id as outcomeid, outcome_desc as outcomedesc, SUM(td.target) as target, (select fy.fin_yr_desc from iwmp_m_fin_year fy where fy.fin_yr_cd = t.fin_yr_cd) as finyear,t.fin_yr_cd finyr from wdcpmksy_m_outcome o, wdcpmksy_outcome_target_details td, wdcpmksy_outcome_target t, iwmp_m_project p, iwmp_state s, iwmp_district d where o.outcome_id = td.outcome_id and t.outcome_target_id = td.outcome_target_id and t.proj_id = p.proj_id and p.proj_id = (case  when :project=0 then  p.proj_id  else  :project end) and s.st_code = (case  when :stCode=0 then  s.st_code  else  :stCode end) and d.dist_code = (case  when :distCode=0 then  d.dist_code  else  :distCode end) and s.st_code = d.st_code and p.dcode = d.dcode and ((t.fin_yr_cd between :fromYear and :toYear ) and (o.fin_yr_cd between :fromYear and :toYear or o.fin_yr_cd is null )) group by o.outcome_id, outcome_desc,t.fin_yr_cd, finyear order by o.outcome_id,finyear) as x

getdolrsupportdata=select dr.user_id as userid, dr.user_name as username, dr.degination, dr.department, dr.address, dr.address1, dr.phone ,(select array_to_string(array_agg(st_name), ', ' ) as states from iwmp_state st, iwmp_dolrsupport_state x where st.st_code = x.state_cd and x.user_id = dr.user_id  )  from iwmp_dolr_support dr order by user_id
#Query for AssetId
getActionPlanForAssetId = from IwmpProjectPhysicalAap where iwmpProjectPhysicalPlan.iwmpMFinYear.finYrCd =:finYr and iwmpProjectPhysicalPlan.iwmpMProject.projectId=:projId and iwmpMPhyActivity.asset>0
getActionPlanForAssetIdTemp = from IwmpProjectPhysicalAssetTemp where iwmpMFinYear.finYrCd =:finYr and iwmpProjectPhysicalAap.aapid=:appid and iwmpMProject.projectId=:projId 
getActionPlanForAssetIdAsset = from IwmpProjectPhysicalAsset where iwmpMFinYear.finYrCd =:finYr and iwmpProjectPhysicalAap.aapid=:appid and iwmpMProject.projectId=:projId 


getAssetIdForCreation = select (select cast((coalesce(max(temp_asset_id),0)+1) as bigint)  from iwmp_project_physical_asset_temp) as tempassetid,a.activity_code as activitycd,a.activity_desc as activitydesc,h.head_desc as headdesc from iwmp_m_phy_activity a,iwmp_m_phy_heads h where a.head_code=h.head_code and a.activity_code=:activitycd
#getAssetIdForCreation = select (select cast((coalesce(max(assetid),0)+1) as bigint)  from iwmp_project_physical_asset) as assetid,activity_code as activitycd,activity_desc as activitydesc from iwmp_m_phy_activity where activity_code=:activitycd
getBlockFromProjectLocation = from IwmpProjectLocation where iwmpMProject.projectId=:projId
getVillageFromProjectLocationBlockWise = from IwmpProjectLocation where iwmpMProject.projectId=:projId and iwmpVillage.iwmpGramPanchayat.iwmpBlock.bcode=:bCode
getSubactivityByActivityCode=select subActivityCode, subActivityDesc from IwmpMPhySubactivity where iwmpMPhyActivity.activityCode=:activityCode
getassetlist=from IwmpProjectPhysicalAsset pa where (select iwmpState.stCode from UserMap um where um.userReg.userId=pa.createdby)=(select iwmpState.stCode from UserMap um2 where um2.userReg.userId=:userId) order by iwmpMProject.projName, iwmpMFinYear.finYrDesc
getassetlistkd=from IwmpProjectPhysicalAsset where iwmpMProject.projectId=:projid  order by iwmpMProject.projName, iwmpMFinYear.finYrDesc, iwmpMPhyActivity.iwmpMPhyHeads.headDesc, iwmpMPhyActivity.activityDesc 
getdistProject=select proj_id, proj_name from iwmp_m_project p where case when :dCode=0 then (select st_code from iwmp_district d where d.dcode=p.dcode)= :stcode else dcode=:dCode end and proj_id in (select proj_id from iwmp_project_physical_asset) order by proj_name
getfinalassetlist=from IwmpProjectPhysicalAsset pa where (select iwmpState.stCode from UserMap um where um.userReg.userId=pa.createdby)=(select iwmpState.stCode from UserMap um2 where um2.userReg.userId= :userId)  and pa.iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end ) and pa.iwmpMProject.iwmpDistrict.dcode = (case :dCode when 0 then pa.iwmpMProject.iwmpDistrict.dcode else :dCode end ) order by iwmpMProject.projName, iwmpMFinYear.finYrDesc
projectlistbyredid= select asset.iwmpMProject.projectId, asset.iwmpMProject.projName from IwmpProjectPhysicalAsset asset where  asset.iwmpMProject.projectId in (select pmap.iwmpMProject.projectId from IwmpUserProjectMap pmap where pmap.userReg.regId in (select reg.regId from UserMap map, UserReg reg where map.iwmpDistrict.dcode = (select iwmpDistrict.dcode from UserMap where userReg.regId = :regId ) and map.userReg.regId = reg.regId and reg.userType = 'PI' ))
getfinalassetdilist=from IwmpProjectPhysicalAsset pa where (select iwmpState.stCode from UserMap um where um.userReg.userId=pa.createdby)=(select iwmpState.stCode from UserMap um2 where um2.userReg.userId= :userId) and pa.iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end ) order by iwmpMPhyActivity.activityDesc, iwmpMFinYear.finYrDesc
#getfinalWorkWiselist=from IwmpProjectPhysicalAsset pa where (select iwmpState.stCode from UserMap um where um.userReg.userId=pa.createdby)=(select distinct iwmpState.stCode from UserMap um2 where um2.userReg.userId= :userId) and pa.iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end ) and pa.iwmpMFinYear.finYrCd = :fYear  order by iwmpMPhyActivity.iwmpMPhyHeads.headDesc, iwmpMPhyActivity.activityDesc, iwmpMFinYear.finYrDesc
getfinalWorkWiselist=from IwmpProjectPhysicalAsset pa where pa.iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end ) and pa.iwmpMFinYear.finYrCd = :fYear and assetid not in(select iwmpProjectPhysicalAsset.assetid from IwmpProjectAssetStatus where iwmpMProject.projectId=:pCode and status in('C','F')) order by iwmpMPhyActivity.iwmpMPhyHeads.headDesc, iwmpMPhyActivity.activityDesc, iwmpMFinYear.finYrDesc

getDraftPlanDetailsByProjYr = from IwmpProjectPhysicalAssetTemp where iwmpProjectPhysicalAap.iwmpProjectPhysicalPlan.iwmpMProject.projectId=:projId and iwmpProjectPhysicalAap.iwmpProjectPhysicalPlan.iwmpMFinYear.finYrCd=:finYr and status='D' and (action!='F' or action is null) and currentLevel='P' 
deleteAsset = delete from IwmpProjectPhysicalAssetTemp where tempassetid=:assetid
forwardAssetPIA =update IwmpProjectPhysicalAssetTemp set iwmpUserRegBySentFrom.regId=:sentfrom,iwmpUserRegBySentTo.regId=:sentto,action='F',updatedby=:updatedby,updatedon=:updatedon, currentLevel='D' where tempassetid in (:assetId)
getforwardedAssetWCDC = from IwmpProjectPhysicalAssetTemp where (iwmpUserRegBySentFrom.regId=:regId or updatedby=:userid) and action='F' and status='D' and currentLevel='S'
getforwardedAssetPIA = from IwmpProjectPhysicalAssetTemp where (iwmpUserRegBySentFrom.regId=:regId or createdby=:userid) and (action='F' or action='R') and status='D' and (currentLevel='D' or currentLevel='S')
getPendingListOfAssetWCDC = from IwmpProjectPhysicalAssetTemp where iwmpUserRegBySentTo.regId=:regId and status='D' and (action='F' or action='R') and currentLevel='D'
getPendingListOfAssetSLNA = from IwmpProjectPhysicalAssetTemp where iwmpUserRegBySentTo.regId=:regId and status='D' and (action='F' or action='R') and currentLevel='S'
getSentToSLNAForAsset= select reg.reg_id from iwmp_user_reg reg,iwmp_user_map map where map.st_code=(select st_code from iwmp_user_map where reg_id=:regId) and reg.reg_id=map.reg_id and reg.user_type='SL' and reg.user_id in (select user_id from iwmp_user_app_role_map where role_id=3)
deleteCompletedAssetFromTemp = delete from IwmpProjectPhysicalAssetTemp where tempassetid in (:assetid)
getRejectedAssetList = from IwmpProjectPhysicalAssetTemp where createdby=:loginid and status='D' and action='R' and currentLevel='P'
getProjectForPendingAsset = from IwmpMProject where projectId in (select iwmpMProject.projectId from IwmpProjectPhysicalAssetTemp where iwmpUserRegBySentTo.regId=:regId)
getProjectForForwardedAsset = from IwmpMProject where projectId in (select iwmpMProject.projectId from IwmpProjectPhysicalAssetTemp where (iwmpUserRegBySentFrom.regId=:regId or createdby=:userid) and  action='F' and (currentLevel='D' or currentLevel='S'))
getPendingListOfAssetWCDCProjectWise = from IwmpProjectPhysicalAssetTemp where iwmpUserRegBySentTo.regId=:regId and status='D' and (action='F' or action='R') and currentLevel='D' and iwmpMProject.projectId=:projId
getPendingListOfAssetSLNAProjectWise = from IwmpProjectPhysicalAssetTemp where iwmpUserRegBySentTo.regId=:regId and status='D' and action='F' and currentLevel='S' and iwmpMProject.projectId=case :projId when 0 then iwmpMProject.projectId else :projId end and iwmpMProject.iwmpDistrict.dcode=case :dCode when 0 then iwmpMProject.iwmpDistrict.dcode else :dCode end
#getPendingListOfAssetSLNAProjectWise = 	select temp.* from iwmp_project_physical_asset_temp temp,iwmp_m_project proj where temp.sent_to=:regId and temp.status='D' and temp.action='F' and temp.current_level='S' and (case when 0=:projId then temp.proj_id=temp.proj_id else temp.proj_id=:projId end) and (case when 0=:dCode then proj.dcode=proj.dcode else proj.dcode=:dCode end) and proj.proj_id=temp.proj_id
getProjectFromDistrictForPendingAsset = from IwmpProjectPhysicalAssetTemp where iwmpMProject.iwmpDistrict.dcode=:dCode and iwmpUserRegBySentTo.regId=:regId
getforwardedAssetUserWiseForProject = from IwmpProjectPhysicalAssetTemp where iwmpUserRegBySentFrom.regId=:regId and status='D' and action='F' and  iwmpMProject.projectId=case :projId when 0 then iwmpMProject.projectId else :projId end and iwmpMProject.iwmpDistrict.dcode=case :dCode when 0 then iwmpMProject.iwmpDistrict.dcode else :dCode end
#getProjectAchievementReport=select distinct h.head_code, head_desc ,h.seq_no as hseq_no, pa.activity_code, activity_desc, a.seq_no as aseq_no, monthid, (select month_name from iwmp_m_month where month_id=pa.monthid) as monthname, achievement, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname from iwmp_project_physical_achievement pa, iwmp_m_phy_heads h, iwmp_m_phy_activity a where upper(pa.status) ='C' and pa.proj_id =:projId and pa.financialyearid=:fromYear and a.head_code=h.head_code and pa.activity_code=a.activity_code order by h.seq_no, a.seq_no, monthid
#getProjectAchievementReport=select distinct h.head_code, head_desc ,h.seq_no as hseq_no, pa.activity_code, activity_desc, a.seq_no as aseq_no, monthid, (select month_name from iwmp_m_month where month_id=pa.monthid) as monthname, achievement, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, (select distinct qty_planned from iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C' and  p.planid = dD.planid and proj_id =:projId and p.fin_yr_cd =:fromYear  and phy_activity_code = a.activity_code ) as plan from iwmp_project_physical_achievement pa, iwmp_m_phy_heads h, iwmp_m_phy_activity a where upper(pa.status) ='C' and pa.proj_id =:projId and pa.financialyearid=:fromYear and a.head_code=h.head_code and pa.activity_code=a.activity_code order by h.seq_no, a.seq_no, monthid
#getProjectAchievementReport=select distinct h.head_code, head_desc, h.seq_no as hseq_no, ad.activity_code, activity_desc, a.seq_no as aseq_no, month_id as monthid, (select SUBSTRING( month_name, 1, 3 ) from iwmp_m_month where month_id=pa.month_id) as monthname, achievement, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, (select distinct qty_planned from iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C'  and  p.planid = dD.planid and proj_id =:projId and p.fin_yr_cd =:fromYear  and phy_activity_code = a.activity_code ) as plan  from wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement pa, iwmp_m_phy_heads h, iwmp_m_phy_activity a where upper(pa.status) ='C' and  pa.proj_id =:projId and pa.fin_yr_cd=:fromYear and a.head_code=h.head_code and ad.activity_code=a.activity_code and ad.achievement_id=pa.achievement_id order by h.seq_no, a.seq_no, monthid
getProjectAchievementReport=select distinct case (SELECT distinct 'Y' FROM WDCPMKSY_PROJECT_PHY_ACHIEVEMENT WHERE FIN_YR_CD = :fromYear AND PROJ_ID = :projId AND upper(status) = 'C' AND MONTH_ID =C.MONTHID ) when 'Y' then 'Y' else 'NS' end monthstatus, head_code, head_desc, hseq_no, c.activity_code, activity_desc, aseq_no, c.monthid, monthname, COALESCE(d.achievement,0.00) as achievement, unitname, COALESCE(e.target,0.00) as plan, fin_month_id from (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc,  act.seq_no as aseq_no, CAST(m.month_id AS INTEGER) as monthid, SUBSTRING( month_name, 1, 3 ) as monthname , unit_desc as unitname, m.fin_month_id from iwmp_m_phy_activity act,iwmp_m_phy_heads h,iwmp_m_unit u,iwmp_m_month m where h.head_code=act.head_code and act.unit_code=u.unit_code) c  left join  (select det.activity_code, achievement, ach.month_id from wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach where det.achievement_id=ach.achievement_id and proj_id= :projId and fin_yr_cd =:fromYear and upper(status) ='C') d  on c.activity_code= d.activity_code and c.monthid=d.month_id left join	(select sum(distinct qty_planned) as target, phy_activity_code from  iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C'  and  p.planid = dD.planid and proj_id= :projId and fin_yr_cd =:fromYear group by  phy_activity_code ) e on c.activity_code=e.phy_activity_code order by hseq_no, aseq_no, fin_month_id
#getAllProjectAchievementReport=select distinct h.head_code, head_desc, h.seq_no as hseq_no, ad.activity_code, activity_desc, a.seq_no as aseq_no, month_id as monthid, (select SUBSTRING( month_name, 1, 3 ) from iwmp_m_month where month_id=pa.month_id) as monthname, coalesce(sum(achievement), 0.00) as achievement, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, (select distinct coalesce(sum(qty_planned), 0.00)  from iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C'  and  p.planid = dD.planid  and proj_id in (select proj_id from iwmp_m_project where dcode=:dcode) and p.fin_yr_cd =:fromYear  and phy_activity_code = a.activity_code ) as plan  from wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement pa, iwmp_m_phy_heads h, iwmp_m_phy_activity a  where upper(pa.status) ='C' and  pa.proj_id in (select proj_id from iwmp_m_project where dcode=:dcode) and pa.fin_yr_cd=:fromYear and a.head_code=h.head_code and  ad.activity_code=a.activity_code and ad.achievement_id=pa.achievement_id group by h.head_code, head_desc, h.seq_no, ad.activity_code, a.activity_code, activity_desc, a.seq_no, month_id, a.unit_code order by h.seq_no, a.seq_no, monthid
getAllProjectAchievementReport=select distinct head_code, head_desc, hseq_no, c.activity_code, activity_desc, aseq_no, c.monthid, monthname, COALESCE(d.achievement,0.00) as achievement, unitname, COALESCE(e.target,0.00) as plan, fin_month_id from (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc,  act.seq_no as aseq_no, CAST(m.month_id AS INTEGER) as monthid, SUBSTRING( month_name, 1, 3 ) as monthname , unit_desc as unitname, m.fin_month_id from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u, iwmp_m_month m where h.head_code=act.head_code and act.unit_code=u.unit_code) c  left join  (select det.activity_code, coalesce(sum(achievement),0.00) as achievement, ach.month_id from wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach where det.achievement_id=ach.achievement_id and proj_id in (select proj_id from iwmp_m_project where dcode=:dcode) and fin_yr_cd =:fromYear and upper(status) ='C' 	group by activity_code, month_id) d  on c.activity_code= d.activity_code and c.monthid=d.month_id left join	 (select sum( qty_planned) as target, phy_activity_code from iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C'  and  p.planid = dD.planid and proj_id in (select proj_id from iwmp_m_project where dcode=:dcode) and p.fin_yr_cd =:fromYear  group by  phy_activity_code ) e on c.activity_code=e.phy_activity_code order by hseq_no, aseq_no, fin_month_id
getAllDistrictAchievementReport=select distinct head_code, head_desc, hseq_no, c.activity_code, activity_desc, aseq_no, c.monthid, monthname, COALESCE(d.achievement,0.00) as achievement, unitname, COALESCE(e.target,0.00) as plan, fin_month_id from (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc,  act.seq_no as aseq_no, CAST(m.month_id AS INTEGER) as monthid, SUBSTRING( month_name, 1, 3 ) as monthname , unit_desc as unitname, m.fin_month_id from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u, iwmp_m_month m where h.head_code=act.head_code and act.unit_code=u.unit_code) c  left join  (select det.activity_code, coalesce(sum(achievement),0.00) as achievement, ach.month_id from wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach where det.achievement_id=ach.achievement_id and proj_id in (select proj_id from iwmp_m_project where dcode in (select dcode from iwmp_district where st_code=:stcode)) and fin_yr_cd =:fromYear and upper(status) ='C' group by activity_code, month_id) d on c.activity_code= d.activity_code and c.monthid=d.month_id  left join	(select sum( qty_planned) as target, phy_activity_code from  iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C'  and  p.planid = dD.planid and proj_id in (select proj_id from iwmp_m_project where dcode in (select dcode from iwmp_district where st_code=:stcode)) and p.fin_yr_cd =:fromYear  group by  phy_activity_code ) e on c.activity_code=e.phy_activity_code order by hseq_no, aseq_no, fin_month_id
getAllStatesAchievementReport=select distinct head_code, head_desc, hseq_no, c.activity_code, activity_desc, aseq_no, c.monthid, monthname, COALESCE(d.achievement,0.00) as achievement, unitname, COALESCE(e.target,0.00) as plan, fin_month_id from (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc,  act.seq_no as aseq_no, CAST(m.month_id AS INTEGER) as monthid, SUBSTRING( month_name, 1, 3 ) as monthname , unit_desc as unitname, m.fin_month_id from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u, iwmp_m_month m where h.head_code=act.head_code and act.unit_code=u.unit_code) c  left join  (select det.activity_code, coalesce(sum(achievement),0.00) as achievement, ach.month_id from wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach where det.achievement_id=ach.achievement_id and proj_id in (select proj_id from iwmp_m_project where dcode in (select dcode from iwmp_district where st_code in (select st_code from iwmp_state where wdcpmksy=1))) and fin_yr_cd =:fromYear and upper(status) ='C' group by activity_code, month_id) d on c.activity_code= d.activity_code and c.monthid=d.month_id  left join	(select sum( qty_planned) as target, phy_activity_code from  iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C'  and  p.planid = dD.planid and proj_id in (select proj_id from iwmp_m_project where dcode in (select dcode from iwmp_district where st_code in (select st_code from iwmp_state where wdcpmksy=1))) and p.fin_yr_cd =:fromYear  group by  phy_activity_code ) e on c.activity_code=e.phy_activity_code order by hseq_no, aseq_no, fin_month_id
projectList=select cast(count(projectCd) as int) as projcount, iwmpDistrict.iwmpState.stName as stname, 0 as stateCode, 0 as finyear  from IwmpMProject group by iwmpDistrict.iwmpState.stName

#Work Wise Head Status
getfinalHeadWiselist=from WdcpmksyLivelihoodWorkid pa where (select iwmpState.stCode from UserMap um where um.userReg.userId=pa.createdby)=(select distinct iwmpState.stCode from UserMap um2 where um2.userReg.userId= :userId) and iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end) and pa.MLivelihoodCoreactivity.livelihoodCoreactivityId=(case :hActCode when 0 then pa.MLivelihoodCoreactivity.livelihoodCoreactivityId else :hActCode end)
getfinalProdHeadWiselist=from WdcpmksyPrdouctionWorkid pa where (select iwmpState.stCode from UserMap um where um.userReg.userId=pa.createdby)=(select distinct iwmpState.stCode from UserMap um2 where um2.userReg.userId= :userId) and iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end) and pa.MProductivityCoreactivity.productivityCoreactivityId=(case :hActCode when 0 then pa.MProductivityCoreactivity.productivityCoreactivityId else :hActCode end)
getfinalEPAHeadWiselist=from WdcpmksyEpaWorkid pa where (select iwmpState.stCode from UserMap um where um.userReg.userId=pa.createdby)=(select distinct iwmpState.stCode from UserMap um2 where um2.userReg.userId= :userId) and iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end) and pa.MEpaCoreactivity.epaActivityId=(case :hActCode when 0 then pa.MEpaCoreactivity.epaActivityId else :hActCode end)
getcompletelivelihoodasset=select distinct s.assetid as asseteid, m.livelihood_coreactivity_desc as activitydesc, b.block_name as bname, v.village_name as vname, cast(to_char(s.startdate, 'dd/MM/yyyy')as character varying(20)) as sdate, cast(to_char(s.completiondate, 'dd/MM/yyyy')as character varying(20)) as cdate from wdcpmksy_project_asset_livelihood_status s, wdcpmksy_livelihood_workid w, m_livelihood_coreactivity m, iwmp_village v, iwmp_gram_panchayat p,iwmp_block b where m.livelihood_coreactivity_id = w.livelihood_coreactivity_id and s.assetid = w.assetid and s.status = 'C' and s.projid = :pCode and m.livelihood_coreactivity_id =(case :headactivity when 0 then m.livelihood_coreactivity_id else :headactivity end) and v.vcode = w.vcode and b.bcode = p.bcode and p.gcode = v.gcode order by asseteid
getcompleteproductionasset=select distinct s.assetid as asseteid, m.productivity_coreactivity_desc as activitydesc, b.block_name as bname, v.village_name as vname, cast(to_char(s.startdate, 'dd/MM/yyyy') as character varying(20)) as sdate, cast(to_char(s.completiondate, 'dd/MM/yyyy')as character varying(20)) as cdate from wdcpmksy_project_asset_prod_status s, wdcpmksy_prdouction_workid w, m_productivity_coreactivity m, iwmp_village v, iwmp_gram_panchayat p,iwmp_block b where m.productivity_coreactivity_id = w.productivity_coreactivity_id and s.assetid = w.assetid and s.status = 'C' and s.projid = :pCode and m.productivity_coreactivity_id = (case :headactivity when 0 then m.productivity_coreactivity_id else :headactivity end) and v.vcode = w.vcode and b.bcode = p.bcode and p.gcode = v.gcode order by asseteid
getcompleteepaasset=select distinct s.assetid as asseteid, m.epa_desc as activitydesc, b.block_name as bname, v.village_name as vname, cast(to_char(s.startdate, 'dd/MM/yyyy')as character varying(20)) as sdate, cast(to_char(s.completiondate, 'dd/MM/yyyy')as character varying(20)) as cdate from wdcpmksy_project_asset_epa_status s, wdcpmksy_epa_workid w, m_epa_coreactivity m, iwmp_village v, iwmp_gram_panchayat p,iwmp_block b where m.epa_activity_id = w.epa_activity_id and s.assetid = w.assetid and s.status = 'C' and s.projid = :pCode and m.epa_activity_id = (case :headactivity when 0 then m.epa_activity_id else :headactivity end) and v.vcode = w.vcode and b.bcode = p.bcode and p.gcode = v.gcode  order by asseteid
getcompleteassetdata=select distinct cast(s.assetid as integer) as asseteid, h.head_desc as headdesc, a.activity_desc as activitydesc, b.block_name as bname, v.village_name as vname, cast(to_char(s.startdate, 'dd/MM/yyyy')as character varying(20)) as sdate, cast(to_char(s.completiondate, 'dd/MM/yyyy')as character varying(20)) as cdate, s.convergence  as convergence from iwmp_project_asset_status s, iwmp_project_physical_asset w,iwmp_village v, iwmp_m_phy_heads h, iwmp_m_phy_activity a, iwmp_gram_panchayat p,iwmp_block b where s.assetid = w.assetid and s.status = 'C' and s.projid = :pCode and w.fin_yr_cd = :fCode and v.vcode = w.vcode and b.bcode = p.bcode and p.gcode = v.gcode and h.head_code = a.head_code and a.activity_code = w.phy_activity_code order by head_desc, activity_desc, village_name
getforclosedassetdata=select distinct cast(s.assetid as integer) as asseteid, h.head_desc as headdesc, a.activity_desc as activitydesc, b.block_name as bname, v.village_name as vname, cast(to_char(s.startdate, 'dd/MM/yyyy')as character varying(20)) as sdate, s.reason, s.convergence  as convergence from iwmp_project_asset_status s, iwmp_project_physical_asset w,iwmp_village v, iwmp_m_phy_heads h, iwmp_m_phy_activity a, iwmp_gram_panchayat p,iwmp_block b where s.assetid = w.assetid and s.status = 'F' and s.projid = :pCode and w.fin_yr_cd = :fCode and v.vcode = w.vcode and b.bcode = p.bcode and p.gcode = v.gcode and h.head_code = a.head_code and a.activity_code = w.phy_activity_code order by head_desc, activity_desc, village_name


getforclosedlivelihoodasset=select s.assetid as asseteid, m.livelihood_coreactivity_desc as activitydesc, b.block_name as bname, v.village_name as vname, cast(to_char(s.startdate, 'dd/MM/yyyy')as character varying(20)) as sdate, s.reason from wdcpmksy_project_asset_livelihood_status s, wdcpmksy_livelihood_workid w, m_livelihood_coreactivity m, iwmp_village v, iwmp_gram_panchayat p,iwmp_block b where m.livelihood_coreactivity_id = w.livelihood_coreactivity_id and s.assetid = w.assetid and s.status = 'F' and s.projid = :pCode and v.vcode = w.vcode and b.block_code = p.block_code and p.gcode = v.gcode order by asseteid
getforclosedproductionasset=select s.assetid as asseteid, m.productivity_coreactivity_desc as activitydesc, b.block_name as bname, v.village_name as vname, cast(to_char(s.startdate, 'dd/MM/yyyy') as character varying(20)) as sdate, s.reason from wdcpmksy_project_asset_prod_status s, wdcpmksy_prdouction_workid w, m_productivity_coreactivity m, iwmp_village v, iwmp_gram_panchayat p,iwmp_block b where m.productivity_coreactivity_id = w.productivity_coreactivity_id and s.assetid = w.assetid and s.status = 'F' and s.projid = :pCode and v.vcode = w.vcode and b.block_code = p.block_code and p.gcode = v.gcode order by asseteid
getforclosedepaasset=select s.assetid as asseteid, m.epa_desc as activitydesc, b.block_name as bname, v.village_name as vname, cast(to_char(s.startdate, 'dd/MM/yyyy')as character varying(20)) as sdate, s.reason from wdcpmksy_project_asset_epa_status s, wdcpmksy_epa_workid w, m_epa_coreactivity m, iwmp_village v, iwmp_gram_panchayat p,iwmp_block b where m.epa_activity_id = w.epa_activity_id and s.assetid = w.assetid and s.status = 'F' and s.projid = :pCode and v.vcode = w.vcode and b.block_code = p.block_code and p.gcode = v.gcode order by asseteid

#Chart------------------
projectListshare=select cast(count(projectCd) as int) as projcount, iwmpDistrict.iwmpState.stName as stname, iwmpDistrict.iwmpState.stCode as stateCode, 0 as finyear  from IwmpMProject where iwmpDistrict.iwmpState.stCode in(select iwmpState.stCode from IwmpMCsShare where centralShare=:central and stateShare=:state) group by iwmpDistrict.iwmpState.stName,iwmpDistrict.iwmpState.stCode

#select count(p.project_cd) as projcount,d.st_code as stateCode, s.st_name as stname from iwmp_m_project p, iwmp_state s, iwmp_district d where p.dcode \= d.dcode and d.st_code \= s.st_code  group by st_name,d.st_code
#projectList=select count(p.project_cd) as tls_projects, s.st_name as stname from iwmp_m_project p, iwmp_state s, iwmp_district d where p.dcode = d.dcode and d.st_code = s.st_code  group by st_name
getAchievementDetails = from WdcpmksyProjectPhysicalAchievementDetails ach where ach.wdcpmksyProjectPhysicalAchievement.achievementId=:achievementid
getAchievementMovementDetails =select  ach.achievement_id as achievementid,proj.proj_name as projectdesc,case when ach.status='D' and tranx.action='R' then 'Rejected' when ach.status='D' then 'Pending' else 'Completed' end as status, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI' then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end) ||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st,iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_from)as sentfrom, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI' then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end)||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st,iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_to) as sentto, case when tranx.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tranx.remarks end as remarks,tranx.sent_on as senton,yr.fin_yr_desc as finyrdesc,tranx.action,mon.month_name as monthdesc from wdcpmksy_project_phy_ach_tranx tranx, iwmp_user_reg reg, wdcpmksy_project_phy_achievement ach, iwmp_m_project proj,iwmp_m_fin_year yr, iwmp_m_month mon where ach.month_id=mon.month_id and tranx.sent_to=reg.reg_id and tranx.achievement_id=:achievementid and tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd order by ach.achievement_id, proj.proj_name,yr.fin_yr_desc, tranx.sent_on desc

getPhysicalAssetStatus = from IwmpProjectAssetStatus where iwmpProjectPhysicalAsset.assetid = :assetid 
getLivelihoodAssetStatus = from WdcpmksyProjectAssetLivelihoodStatus where wdcpmksyLivelihoodWorkid.assetid = :assetid
getProductionAssetStatus = from WdcpmksyProjectAssetProductionStatus where wdcpmksyPrdouctionWorkid.assetid = :assetid
getEPAAssetStatus = from WdcpmksyProjectAssetEPAStatus where wdcpmksyEpaWorkid.assetid = :assetid

#getEPAWorkIdDetails = from WdcpmksyEpaWorkid workid where workid.MEpaCoreactivity.epaActivityId = :epaActivityId order by workid.MEpaCoreactivity.epaDesc
getEPAWorkIdDetails = from WdcpmksyEpaWorkid workid where workid.MEpaCoreactivity.epaActivityId = :epaActivityId and workid.iwmpMProject.projectId=:projId order by workid.MEpaCoreactivity.epaDesc
#getLivelihoodWorkidDetails = from WdcpmksyLivelihoodWorkid workid where workid.MLivelihoodCoreactivity.livelihoodCoreactivityId = :livelihoodActivityId
getLivelihoodWorkidDetails = from WdcpmksyLivelihoodWorkid workid where workid.MLivelihoodCoreactivity.livelihoodCoreactivityId = :livelihoodActivityId and workid.iwmpMProject.projectId=:projId order by workid.MLivelihoodCoreactivity.livelihoodCoreactivityDesc
#getProductionWorkidDetails = from WdcpmksyPrdouctionWorkid workid where workid.MProductivityCoreactivity.productivityCoreactivityId = :productionActivityId
getProductionWorkidDetails= from WdcpmksyPrdouctionWorkid workid where workid.MProductivityCoreactivity.productivityCoreactivityId = :productionActivityId and workid.iwmpMProject.projectId=:projId order by workid.MProductivityCoreactivity.productivityCoreactivityDesc

getPhysicalAssetAchievement = from WdcpmksyProjectPhyAssetAchievement where iwmpProjectPhysicalAsset.assetid = :assetid
lineprojectList=select cast(count(projectCd) as int) as projcount, iwmpDistrict.iwmpState.stName as stname, 0 as stateCode, 0 as finyear  from IwmpMProject group by iwmpDistrict.iwmpState.stName
#DashBoard Query End
getProjectByprojectCode=select projName from IwmpMProject where projectCd=:projectCd

#getYearForPhysicalActionAchievementReport=select fin_yr_cd, fin_yr_desc from iwmp_m_fin_year where fin_yr_cd in (select financialyearid from iwmp_project_physical_achievement where proj_id=:pCode and status='C') order by fin_yr_cd
#getYearForPhysicalActionAchievementReport=select fin_yr_cd, fin_yr_desc from iwmp_m_fin_year where fin_yr_cd in (select fin_yr_cd from wdcpmksy_project_phy_achievement where proj_id=:pCode and status='C') order by fin_yr_cd
getYearForPhysicalActionAchievementReport=select fin_yr_cd, fin_yr_desc from iwmp_m_fin_year where fin_yr_cd in (select fin_yr_cd from iwmp_project_physical_plan where  status='C') order by fin_yr_cd
getYearForTarAchDashboard=select fin_yr_cd, fin_yr_desc from iwmp_m_fin_year where fin_yr_cd in (select fin_yr_cd from iwmp_project_physical_plan where  status='C') order by fin_yr_cd desc
outcomeDetail=select outcome_id, outcome_desc, detail_exist, month_id, bls_required, (select month_name from iwmp_m_month where month_id=o.month_id) as monthname, fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=o.fin_yr_cd) as finyear, seq_no from wdcpmksy_m_outcome o order by seq_no, month_id, fin_yr_cd
outcomeseqno=select coalesce(max(seq_no), 0)+0.20 as seq_no from wdcpmksy_m_outcome
outcomedseqno=select coalesce(max(seq_no), 0)+0.20 as seq_no from wdcpmksy_m_outcome_detail
#outcomeDetail=select outcome_id, outcome_desc, detail_exist, fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=o.fin_yr_cd) as finyear, seq_no from wdcpmksy_m_outcome o order by seq_no, month_id, fin_yr_cd
saveoutcomeDetail=INSERT INTO public.wdcpmksy_m_outcome(outcome_desc, fin_yr_cd, month_id, seq_no, detail_exist, created_by, created_on, updated_by, updated_on, request_ip, bls_required) VALUES ( :outcome_desc, Case when :fin_yr_cd=0 then null else :fin_yr_cd end,  Case when :month_id=0 then null else :month_id end, :seq_no, :detail_exist, :created_by, :created_on, :updated_by, :updated_on, :request_ip, :bls_required);
checkOutcomeMasterid=select outcome_id from  public.wdcpmksy_outcome_target_details where outcome_id=:id
deleteOutcomeMaster1=delete from wdcpmksy_m_outcome_detail where outcome_id=:id
deleteOutcomeMaster=delete from wdcpmksy_m_outcome where outcome_id=:id
finyearmasteroutcome=select fin_yr_cd , fin_yr_desc as finyear from iwmp_m_fin_year
#monthcodemasteroutcome=select cast(month_id as integer) as month_id, month_name as monthname from iwmp_m_month order by fin_month_id
monthcodemasteroutcome=select cast(month_id as integer) as month_id, month_name as monthname from iwmp_m_month where month_id in(select min(month_id) as month_id from iwmp_m_month where achiev_status is null group by fin_month_id order by fin_month_id limit 1 ) order by fin_month_id
outcomedatafind=select outcome_id as doutcomeid, outcome_desc, fin_yr_cd, month_id, seq_no, bls_required, detail_exist from wdcpmksy_m_outcome where outcome_id=:id
updateOutcomeMaster=UPDATE public.wdcpmksy_m_outcome SET  outcome_desc=:outcome_desc, fin_yr_cd=(Case when :fin_yr_cd=0 then null else :fin_yr_cd end), month_id=(Case when :month_id=0 then null else :month_id end), seq_no=:seq_no, bls_required = :bls_required, detail_exist=:detail_exist, updated_on=:updated_on,  request_ip=:request_ip WHERE outcome_id=:id
outcomedetailmaster=select outcome_detail_id, outcome_detail_desc, outcome_id, (select outcome_desc from wdcpmksy_m_outcome where outcome_id=o.outcome_id) as outcome_desc, seq_no  from wdcpmksy_m_outcome_detail o order by outcome_id, outcome_desc, seq_no, outcome_detail_desc  
deleteOutcomeMaster2=delete from wdcpmksy_m_outcome_detail where outcome_detail_id=:id and outcome_id=:outdtl
outcomedatadetailfind=select outcome_detail_id as doutcomeid, outcome_id as outcome_id_detail, outcome_detail_desc, seq_no as dseq_no  from public.wdcpmksy_m_outcome_detail where outcome_detail_id=:id
updateOutcomeDetailMaster=UPDATE public.wdcpmksy_m_outcome_detail SET  outcome_detail_desc=:outcome_detail_desc, created_on=:created_on, request_ip=:request_ip, seq_no=:seq_no WHERE outcome_detail_id=:id

#PhysicalAchievement Query
#getActivityWithTarget = select distinct on (hseq,aseq,a.activity_code)  a.head_code as headcode,a.head_desc as headdesc,a.activity_code as activitycd, a.activity_desc as activitydesc,a.unit_code as unitcode,a.unit_desc as unitdesc,a.assettype as assettype , coalesce((qty_planned_upto_year-achievement_upto_this_yr),0) as qtyplanneduptoyear, coalesce(achievement_this_yr,0) as achievementthisyr, coalesce(qty_planned_this_year,0) as qtyplannedthisyear from (select distinct on (phy_activity_code) h.head_code, h.head_desc, act.activity_code,act.activity_desc, act.asset as assettype,u.unit_code,u.unit_desc,h.seq_no as hseq,act.seq_no as aseq from iwmp_project_physical_aap aap, iwmp_project_physical_plan plan,iwmp_m_phy_heads h, iwmp_m_phy_activity act, iwmp_m_unit u where aap.planid=plan.planid and h.head_code=act.head_code and act.unit_code=u.unit_code and act.activity_code=aap.phy_activity_code and plan.fin_yr_cd <=:finYr and plan.proj_id=:pCode) a left join (select sum(aap.qty_planned) as qty_planned_upto_year, aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd<:finYr group by aap.phy_activity_code) b on a.activity_code = b.phy_activity_code left join (select sum(det.achievement) as achievement_this_yr , det.activity_code from  wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr group by det.activity_code) c on a.activity_code=c.activity_code left join (select aap.qty_planned as qty_planned_this_year,aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd=:finYr) d on a.activity_code=d.phy_activity_code left join (select sum(det.achievement) as achievement_upto_this_yr ,det.activity_code from wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd<:finYr group by ach.month_id,det.activity_code) e on a.activity_code=e.activity_code order by hseq,aseq, a.activity_code
#getActivityWithTarget = select distinct on (hseq,aseq,a.activity_code)  a.head_code as headcode,a.head_desc as headdesc,a.activity_code as activitycd, a.activity_desc as activitydesc,a.unit_code as unitcode,a.unit_desc as unitdesc,a.assettype as assettype , coalesce((qty_planned_upto_year-achievement_upto_this_yr),0) as qtyplanneduptoyear, coalesce(achievement_this_yr,0) as achievementthisyr, coalesce(qty_planned_this_year,0) as qtyplannedthisyear, coalesce(achievement_this_month,0) as achievementthismonth from (select distinct on (phy_activity_code) h.head_code, h.head_desc, act.activity_code,act.activity_desc, act.asset as assettype,u.unit_code,u.unit_desc,h.seq_no as hseq, act.seq_no as aseq from iwmp_project_physical_aap aap, iwmp_project_physical_plan plan,iwmp_m_phy_heads h, iwmp_m_phy_activity act, iwmp_m_unit u where aap.planid=plan.planid and h.head_code=act.head_code and act.unit_code=u.unit_code and act.activity_code=aap.phy_activity_code and plan.fin_yr_cd <=:finYr and plan.proj_id=:pCode and plan.status='C') a left join (select sum(aap.qty_planned) as qty_planned_upto_year, aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd<:finYr group by aap.phy_activity_code) b on a.activity_code = b.phy_activity_code left join (select sum(det.achievement) as achievement_this_yr , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id<:monthId group by det.activity_code) c on a.activity_code=c.activity_code left join (select aap.qty_planned as qty_planned_this_year,aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd=:finYr) d on a.activity_code=d.phy_activity_code left join (select sum(det.achievement) as achievement_upto_this_yr ,det.activity_code from wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd<:finYr group by ach.month_id,det.activity_code) e on a.activity_code=e.activity_code left join (select det.achievement as achievement_this_month , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id=:monthId ) f on a.activity_code=f.activity_code order by hseq,aseq, a.activity_code
#getActivityWithTarget = select distinct on (hseq,aseq,a.activity_code)  a.head_code as headcode,a.head_desc as headdesc,a.activity_code as activitycd, a.activity_desc as activitydesc,a.unit_code as unitcode,a.unit_desc as unitdesc,a.assettype as assettype , coalesce((qty_planned_upto_year-achievement_upto_this_yr),0) as qtyplanneduptoyear, coalesce(achievement_this_yr,0) as achievementthisyr, coalesce(qty_planned_this_year,0) as qtyplannedthisyear, coalesce(achievement_this_month,0) as achievementthismonth, coalesce(activity_asset_achiev, 0) as asset_achiev from (select distinct on (phy_activity_code) h.head_code, h.head_desc, act.activity_code,act.activity_desc, act.asset as assettype,u.unit_code,u.unit_desc,h.seq_no as hseq, act.seq_no as aseq from iwmp_project_physical_aap aap, iwmp_project_physical_plan plan,iwmp_m_phy_heads h, iwmp_m_phy_activity act, iwmp_m_unit u where aap.planid=plan.planid and h.head_code=act.head_code and act.unit_code=u.unit_code and act.activity_code=aap.phy_activity_code and plan.fin_yr_cd <=:finYr and plan.proj_id=:pCode and plan.status='C') a left join (select sum(aap.qty_planned) as qty_planned_upto_year, aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd<:finYr group by aap.phy_activity_code) b on a.activity_code = b.phy_activity_code left join (select sum(det.achievement) as achievement_this_yr , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id<:monthId group by det.activity_code) c on a.activity_code=c.activity_code left join (select aap.qty_planned as qty_planned_this_year,aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd=:finYr) d on a.activity_code=d.phy_activity_code left join (select sum(det.achievement) as achievement_upto_this_yr ,det.activity_code from wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd<:finYr group by ach.month_id,det.activity_code) e on a.activity_code=e.activity_code left join (select det.achievement as achievement_this_month , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id=:monthId ) f on a.activity_code=f.activity_code left join (select sum(p.achievement) as activity_asset_achiev, a.phy_activity_code from iwmp_project_physical_asset a, wdcpmksy_project_phy_asset_achievement p where p.asset_id=a.assetid and a.proj_id=:pCode and a.fin_yr_cd=p.fin_yr_cd and p.fin_yr_cd=:finYr and p.month_id=:monthId and p.status='D' group by a.phy_activity_code) g on a.activity_code = g.phy_activity_code order by hseq, aseq, a.activity_code
#getActivityWithTarget=select distinct on (hseq, aseq, a.activity_code)  a.head_code as headcode, a.head_desc as headdesc, a.activity_code as activitycd, a.activity_desc as activitydesc, a.unit_code as unitcode, a.unit_desc as unitdesc, a.assettype as assettype, coalesce(cast((qty_planned_upto_year-achievement_upto_this_yr) as numeric(15,2)), 0) as qtyplanneduptoyear, coalesce(achievement_this_yr,0) as achievementthisyr, coalesce(qty_planned_this_year,0) as qtyplannedthisyear, coalesce(achievement_this_month,0) as achievementthismonth, coalesce(activity_asset_achiev, 0) as asset_achiev from (select distinct on (phy_activity_code) h.head_code, h.head_desc, act.activity_code,act.activity_desc, act.asset as assettype, u.unit_code,u.unit_desc,h.seq_no as hseq, act.seq_no as aseq from iwmp_project_physical_aap aap, iwmp_project_physical_plan plan, iwmp_m_phy_heads h, iwmp_m_phy_activity act, iwmp_m_unit u where aap.planid=plan.planid and h.head_code=act.head_code and act.unit_code=u.unit_code and act.activity_code=aap.phy_activity_code and plan.fin_yr_cd <=:finYr and plan.proj_id=:pCode and plan.status='C') a left join (select sum(aap.qty_planned) as qty_planned_upto_year, aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd<:finYr and p.status='C' group by aap.phy_activity_code) b on a.activity_code = b.phy_activity_code left join (select sum(det.achievement) as achievement_this_yr , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.status='C' group by det.activity_code) c on a.activity_code=c.activity_code left join (select aap.qty_planned as qty_planned_this_year, aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd=:finYr and p.status='C') d on a.activity_code=d.phy_activity_code left join (select sum(det.achievement) as achievement_upto_this_yr ,det.activity_code from wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd<=:finYr and ach.status='C' group by ach.month_id,det.activity_code) e on a.activity_code=e.activity_code left join (select det.achievement as achievement_this_month , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id=:monthId ) f on a.activity_code=f.activity_code left join (select sum(p.achievement) as activity_asset_achiev, a.phy_activity_code from iwmp_project_physical_asset a, wdcpmksy_project_phy_asset_achievement p where p.asset_id=a.assetid and a.proj_id=:pCode and p.fin_yr_cd=:finYr and p.month_id=:monthId and p.status='C' group by a.phy_activity_code) g on a.activity_code = g.phy_activity_code order by hseq, aseq, a.activity_code
getActivityWithTarget=select distinct on (hseq, aseq, a.activity_code)  a.head_code as headcode, a.head_desc as headdesc, a.activity_code as activitycd, a.activity_desc as activitydesc, a.unit_code as unitcode, a.unit_desc as unitdesc, a.assettype as assettype, cast((coalesce(qty_planned_upto_year, 0)- coalesce(achievement_upto_yr, 0)) as numeric(15,2)) as qtyplanneduptoyear, coalesce(achievement_this_yr,0) as achievementthisyr, coalesce(qty_planned_this_year,0) as qtyplannedthisyear, coalesce(achievement_this_month,0) as achievementthismonth, coalesce(activity_asset_achiev, 0) as asset_achiev from (select distinct on (phy_activity_code) h.head_code, h.head_desc, act.activity_code,act.activity_desc, act.asset as assettype, u.unit_code,u.unit_desc,h.seq_no as hseq, act.seq_no as aseq from iwmp_project_physical_aap aap, iwmp_project_physical_plan plan, iwmp_m_phy_heads h, iwmp_m_phy_activity act, iwmp_m_unit u where aap.planid=plan.planid and h.head_code=act.head_code and act.unit_code=u.unit_code and act.activity_code=aap.phy_activity_code and plan.fin_yr_cd <=:finYr and plan.proj_id=:pCode and plan.status='C') a left join (select sum(aap.qty_planned) as qty_planned_upto_year, aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd<:finYr and p.status='C' group by aap.phy_activity_code) b on a.activity_code = b.phy_activity_code left join (select sum(det.achievement) as achievement_this_yr , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.status='C' group by det.activity_code) c on a.activity_code=c.activity_code left join (select aap.qty_planned as qty_planned_this_year, aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd=:finYr and p.status='C') d on a.activity_code=d.phy_activity_code left join (select sum(det.achievement) as achievement_upto_yr ,det.activity_code from wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd<:finYr and ach.status='C' group by ach.month_id,det.activity_code) e on a.activity_code=e.activity_code left join (select det.achievement as achievement_this_month , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id=:monthId ) f on a.activity_code=f.activity_code left join (select sum(p.achievement) as activity_asset_achiev, a.phy_activity_code from iwmp_project_physical_asset a, wdcpmksy_project_phy_asset_achievement p where p.asset_id=a.assetid and a.proj_id=:pCode and p.fin_yr_cd=:finYr and p.month_id=:monthId and p.status='C' group by a.phy_activity_code) g on a.activity_code = g.phy_activity_code order by hseq, aseq, a.activity_code 
#getAssetofActivity = from IwmpProjectPhysicalAsset where iwmpMProject.projectId = :pCode and iwmpMPhyActivity.activityCode=:activityCode and iwmpMFinYear.finYrCd=:finYr and assetid not in (select iwmpProjectPhysicalAsset.assetid from WdcpmksyProjectPhyAssetAchievement where achievement>0 )
#getAssetofActivity = from IwmpProjectPhysicalAsset where iwmpMProject.projectId = :pCode and iwmpMPhyActivity.activityCode=:activityCode and iwmpMFinYear.finYrCd<=:finYr 
getAssetofActivity = from IwmpProjectPhysicalAsset where iwmpMProject.projectId = :pCode and iwmpMPhyActivity.activityCode=:activityCode and iwmpMFinYear.finYrCd<=:finYr and assetid in(select distinct iwmpProjectPhysicalAsset.assetid from IwmpProjectAssetStatus where iwmpMProject.projectId=:pCode and (status='C' and completiondate>=:dated and completiondate is not null) or status='O')
#getAssetofActivity = from IwmpProjectPhysicalAsset where iwmpMProject.projectId = :pCode and iwmpMPhyActivity.activityCode=:activityCode and iwmpMFinYear.finYrCd<=:finYr and assetid in(select iwmpProjectPhysicalAsset.assetid from IwmpProjectAssetStatus where iwmpMProject.projectId=:pCode and status<>'F'  and (case when completiondate>=:dated and completiondate is not null then status='C' else status='O' end) )    
getCurrentFinYrMonthId = select getYearAndMonthForAchievement(:finYr,:pCode)
#getCurrentFinYrMonthId = select case when coalesce(max(ach.financialyearid),0) =0 then proj.fin_yr_cd else max(financialyearid) end as finYr, case when coalesce(max(ach.monthid),0) =0 then 1 else max(monthid)+1 end as startmonth from iwmp_project_physical_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id left join iwmp_m_month m on m.month_id=ach.monthid where proj.proj_id=:pCode group by proj.fin_yr_cd
#getMonthId = select case when coalesce(max(ach.monthid),0) =0 then 1 else max(monthid)+1 end as monthid from iwmp_project_physical_achievement ach where ach.proj_id=:pCode
#getFinancialYearForPlan = select iwmpMFinYear.finYrCd from IwmpProjectPhysicalPlan where iwmpMProject.projectId=:pCode
#getFinancialYearForAchievement = select distinct finYr.finYrCd from IwmpProjectPhysicalPlan plan,IwmpMFinYear finYr where plan.iwmpMProject.projectId=:pCode and finYr.finYrCd>=plan.iwmpMFinYear.finYrCd and finYr.actFlag='A' order by finYr.finYrCd 
#getFinancialYearForAchievement = select distinct finYr.finYrCd from IwmpProjectPhysicalPlan plan,IwmpMFinYear finYr where plan.iwmpMProject.projectId=:pCode and finYr.finYrCd>=plan.iwmpMFinYear.finYrCd and finYr.actFlag='A' and finYr.finYrCd>21 order by finYr.finYrCd
#getFinancialYearForAchievement = select distinct finYr.finYrCd from IwmpProjectPhysicalPlan plan, IwmpMFinYear finYr where plan.iwmpMProject.projectId=:pCode and  finYr.finYrCd>=(select iwmpMFinYear from IwmpMProject where projectId=:pCode) and finYr.actFlag='A'  order by finYr.finYrCd
#getFinancialYearForAchievement=select distinct finYr.finYrCd from IwmpProjectPhysicalPlan plan, IwmpMFinYear finYr where plan.iwmpMProject.projectId=:pCode and finYr.finYrCd>=(select iwmpMFinYear from IwmpMProject where projectId=:pCode) and finYr.actFlag='A' and finYr.finYrCd>22 order by finYr.finYrCd
getFinancialYearForAchievement=select distinct finYr.finYrCd from IwmpProjectPhysicalPlan plan, IwmpMFinYear finYr where plan.iwmpMProject.projectId=:pCode and finYr.finYrCd>=(select iwmpMFinYear from IwmpMProject where projectId=:pCode) and finYr.actFlag='A' and finYr.achievStatus is null order by finYr.finYrCd 
getUserToForwardForPhysicalAchievement = select getUserToForward(:regId,:userType)
getUserDetailByRegId = from UserReg where regId=:regId
checkDistrictApprovalReuiredOrNot = Select approvalReq from IwmpState where stCode=(select distinct iwmpState.stCode from UserMap where userReg.regId=:regId)
saveAchievementAsDraft = select save_project_physical_achievement_as_draft(:ach,:finYr,:month,:pCode,:activityCode,:createdBy,:requestIp,:sentFrom,:sentTo, :bls) 
getAchievementData = from WdcpmksyProjectPhysicalAchievementTranx where iwmpUserRegBySentTo.regId=:regId
checkForAlreadyForwardedAchievement = from WdcpmksyProjectPhysicalAchievementTranx where (iwmpUserRegBySentfrom.regId=:regId or iwmpUserRegBySentTo.regId=:regId ) and wdcpmksyProjectPhysicalAchievement.achievementId=:achId order by senton desc
#viewAchievementMovement = select achievement_id as achievementid,projectdesc,case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlyat,remarks,finyrdesc ,usertype,monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on desc RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on desc RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid , LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on desc RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyrdesc, (select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regId) as userType,mon.month_name as monthdesc, ach.status as achstatus from wdcpmksy_project_phy_ach_tranx tranx, wdcpmksy_project_phy_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and tranx.achievement_id in (select distinct tt.achievement_id from wdcpmksy_project_phy_ach_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id,tranx.sent_on desc) a,iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc,finyrdesc 
viewAchievementMovement = select achievement_id as achievementid,projectdesc,case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlyat,remarks,finyrdesc ,usertype,monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid , LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyrdesc, (select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regId) as userType,mon.month_name as monthdesc, ach.status as achstatus from wdcpmksy_project_phy_ach_tranx tranx, wdcpmksy_project_phy_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and tranx.achievement_id in (select distinct tt.achievement_id from wdcpmksy_project_phy_ach_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id,tranx.sent_on desc) a,iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc,finyrdesc
viewCompletedAchievement = select achievement_id as achievementid,projectdesc,case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlyat,remarks,finyrdesc ,usertype,monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid , LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyrdesc, (select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regId) as userType,mon.month_name as monthdesc, ach.status as achstatus from wdcpmksy_project_phy_ach_tranx tranx, wdcpmksy_project_phy_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and ach.status = 'C' and tranx.achievement_id in (select distinct tt.achievement_id from wdcpmksy_project_phy_ach_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id,tranx.sent_on desc) a,iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc,finyrdesc
viewAchievementNewMovement = select achievement_id as achievementid,projectdesc,case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlyat,remarks,finyrdesc ,usertype,monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid , LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyrdesc, (select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regId) as userType,mon.month_name as monthdesc, ach.status as achstatus from wdcpmksy_project_phy_ach_tranx tranx, wdcpmksy_project_phy_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and ach.status !='C'  and tranx.achievement_id in (select distinct tt.achievement_id from wdcpmksy_project_phy_ach_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id,tranx.sent_on desc) a,iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc,finyrdesc
#viewAchievementMovement = select achievement_id as achievementid,projectdesc,case when a.status='R' then 'Rejected' when a.status='F' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlyat,remarks,finyrdesc ,usertype,monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) status,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid ,LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyrdesc, (select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regId) as userType,mon.month_name as monthdesc from wdcpmksy_project_phy_ach_tranx tranx, wdcpmksy_project_phy_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and tranx.achievement_id in (select distinct tt.achievement_id from wdcpmksy_project_phy_ach_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id,tranx.sent_on desc) a,iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc,finyrdesc
#getUserToRejectForAchievement = select reg_id from iwmp_user_reg where reg_id in (select sent_from from wdcpmksy_project_phy_ach_tranx where achievement_id=:achId and sent_to=:regId) and user_type='PI'
getUserToRejectForAchievement = select reg_id from iwmp_user_reg where reg_id in (select sent_from from wdcpmksy_project_phy_ach_tranx where achievement_id=:achId ) and user_type='PI'
#getUserToReject = from UserReg wgere regId in (select sentFrom from WdcpmksyProjectPhysicalAchievementTranx where iwmpUserRegBySentfrom.regId=:regId and wdcpmksyProjectPhysicalAchievement.achievementId=:achId) and UserType='PI'
getProjectPhyAssetAchievement = from WdcpmksyProjectPhyAssetAchievement where iwmpMFinYear.finYrCd=:finYr and iwmpMMonth.monthId=:monthId and iwmpProjectPhysicalAsset.assetid in (:assetId)
getUserToRejectSL=select reg_id from iwmp_user_reg where reg_id in (select sent_from from wdcpmksy_project_phy_ach_tranx where achievement_id=:achId and sent_to=:regId) and user_type='DI'
chekcPlanComplete=select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd not in (select fin_yr_cd from iwmp_project_physical_plan where proj_id=:projcd and status='C') and fin_yr_cd>=(select fin_yr_cd from iwmp_m_project where proj_id=:projcd) and achiev_status is null order by fin_yr_cd limit 1
completeassetachievement=update wdcpmksy_project_phy_asset_achievement set status='C' where fin_yr_cd=:finyr and month_id=:monid
#Outcome Target Query
getOutcomeActivityList = from WdcpmksyMOutcome where iwmpMFinYear.finYrCd is null or iwmpMFinYear.finYrCd<=:finYr order by seqNo
saveAsDraftOutcomeTarget = select save_outcome_target_as_draft(:projId,:finYr,:outcomeid,:outcomedetailid,:target,:createdby,:ipaddress)
forwardOutcomeTargetFromPIA = select forward_outcome_target(:projId,:finYr,:outcomeid,:outcomedetailid,:target,:createdby,:ipaddress,:sentFrom, :sentTo)
getForwardedOutcome = from  WdcpmksyOutcomeTargetTranx where wdcpmksyOutcomeTarget.iwmpMFinYear.finYrCd=:finYr and wdcpmksyOutcomeTarget.iwmpMProject.projectId=:projId order by sentOn desc
viewOutcomeMovement= select outcome_target_id as targetid,projectdesc,case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlyat,remarks,finyrdesc ,usertype from (select DISTINCT ON (tranx.outcome_target_id) tranx.outcome_target_id,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.outcome_target_id ORDER BY tranx.outcome_target_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.outcome_target_id ORDER BY tranx.outcome_target_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid , LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.outcome_target_id ORDER BY tranx.outcome_target_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyrdesc, (select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regId) as userType, ach.status as achstatus from wdcpmksy_outcome_target_tranx tranx, wdcpmksy_outcome_target ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.outcome_target_id=ach.outcome_target_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and tranx.outcome_target_id in (select distinct tt.outcome_target_id from wdcpmksy_outcome_target_tranx tt where sent_from=:regId or sent_to=:regId) order by tranx.outcome_target_id,tranx.sent_on desc) a,iwmp_user_reg reg where regid=reg.reg_id order by outcome_target_id, projectdesc,finyrdesc
checkForAlreadyForwardedOutcome =  from WdcpmksyOutcomeTargetTranx where (iwmpUserRegBySentFrom.regId=:regId or iwmpUserRegBySentTo.regId=:regId ) and wdcpmksyOutcomeTarget.outcomeTargetId=:targetid order by sent_on desc
getUserToForwardForOutcomeTarget = select getUserToForward(:regId,:userType)
getUserToRejectForOutcomeTarget = select reg_id from iwmp_user_reg where reg_id in (select distinct sent_from from wdcpmksy_outcome_target_tranx where outcome_target_id=:targetId ) and user_type='PI'
getOutcomeDetails = from WdcpmksyOutcomeTargetDetails where wdcpmksyOutcomeTarget.outcomeTargetId=:targetId
getOutcomeTargetMovementDetails = select  plan.outcome_target_id as targetid,proj.proj_name as projectdesc,case when plan.status='D' and tranx.action='R' then 'Rejected' when plan.status='D' then 'Pending' else 'Completed' end as status, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI'  then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end)||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st, iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and  reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_from)as sentfrom, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI' then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end)||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st,iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_to) as sentto, case when tranx.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tranx.remarks end as remarks,tranx.sent_on as senton,yr.fin_yr_desc as finyrdesc,tranx.action from wdcpmksy_outcome_target_tranx tranx,iwmp_user_reg reg, wdcpmksy_outcome_target plan, iwmp_m_project proj,iwmp_m_fin_year yr where tranx.sent_to=reg.reg_id and tranx.outcome_target_id=:targetId and tranx.outcome_target_id=plan.outcome_target_id and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd order by plan.outcome_target_id, proj.proj_name,yr.fin_yr_desc, tranx.sent_on desc 
getFinancialYearForOutcomeAchievement = select distinct finYr.finYrCd from WdcpmksyOutcomeTarget plan,IwmpMFinYear finYr where plan.iwmpMProject.projectId=:pCode and finYr.finYrCd>=plan.iwmpMFinYear.finYrCd and finYr.actFlag='A' order by finYr.finYrCd
getCurrentFinYrMonthIdForOutcomeAchievement = select getYearAndMonthForOutcomeAchievement(:finYr,:pCode)
#getActivityWithTargetForOutcome = select distinct on (hseq,aseq,a.activity_code)  a.head_code as headcode,a.head_desc as headdesc,a.activity_code as activitycd, a.activity_desc as activitydesc,a.unit_code as unitcode,a.unit_desc as unitdesc,a.assettype as assettype , coalesce((qty_planned_upto_year-achievement_upto_this_yr),0) as qtyplanneduptoyear, coalesce(achievement_this_yr,0) as achievementthisyr, coalesce(qty_planned_this_year,0) as qtyplannedthisyear, coalesce(achievement_this_month,0) as achievementthismonth from (select distinct on (phy_activity_code) h.head_code, h.head_desc, act.activity_code,act.activity_desc, act.asset as assettype,u.unit_code,u.unit_desc,h.seq_no as hseq, act.seq_no as aseq from iwmp_project_physical_aap aap, iwmp_project_physical_plan plan,iwmp_m_phy_heads h, iwmp_m_phy_activity act, iwmp_m_unit u where aap.planid=plan.planid and h.head_code=act.head_code and act.unit_code=u.unit_code and act.activity_code=aap.phy_activity_code and plan.fin_yr_cd <=:finYr and plan.proj_id=:pCode) a left join (select sum(aap.qty_planned) as qty_planned_upto_year, aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd<:finYr group by aap.phy_activity_code) b on a.activity_code = b.phy_activity_code left join (select sum(det.achievement) as achievement_this_yr , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id<:monthId group by det.activity_code) c on a.activity_code=c.activity_code left join (select aap.qty_planned as qty_planned_this_year,aap.phy_activity_code from iwmp_project_physical_aap aap,iwmp_project_physical_plan p where p.planid=aap.planid and p.proj_id=:pCode and p.fin_yr_cd=:finYr) d on a.activity_code=d.phy_activity_code left join (select sum(det.achievement) as achievement_upto_this_yr ,det.activity_code from wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd<:finYr group by ach.month_id,det.activity_code) e on a.activity_code=e.activity_code left join (select det.achievement as achievement_this_month , det.activity_code from  wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id=:monthId ) f on a.activity_code=f.activity_code order by hseq,aseq, a.activity_code
#getActivityWithTargetForOutcome = select a.outcome_id as headcode, a.outcome_desc as headdesc ,a.target,a.outcome_detail_desc as activitydesc, a.outcome_detail_id as activitycd,coalesce(a.achievement_this_yr,0.0) as achievementthisyr,coalesce(a.target_upto_year,0.0) as targetuptoyear,coalesce(b.achievement_upto_year,0.0) as achievementuptoyear from (select a.outcome_id, a.outcome_desc ,a.target,a.fin_yr_cd,a.outcome_detail_desc, a.outcome_detail_id,a.achievement_this_yr,target_upto_year from (select a.outcome_id, a.outcome_desc ,a.target,a.fin_yr_cd,a.outcome_detail_desc, a.outcome_detail_id,achievement_this_yr from ( select a.outcome_id, a.outcome_desc ,a.target ,a.fin_yr_cd,d.outcome_detail_desc, d.outcome_detail_id  from (select outcome_detail_id,mout.outcome_id,mout.outcome_desc,tdetails.target,mout.fin_yr_cd from wdcpmksy_m_outcome mout, wdcpmksy_outcome_target target,wdcpmksy_outcome_target_details tdetails where (mout.fin_yr_cd is null or mout.fin_yr_cd<=:finYr) and (mout.month_id is null or mout.month_id <=:monthId) and target.outcome_target_id = tdetails.outcome_target_id and mout.outcome_id=tdetails.outcome_id  and target.proj_id=:pCode  and target.fin_yr_cd=:finYr and target.status='C') a left join (select det.outcome_id,outcome_detail_desc,outcome_detail_id from wdcpmksy_m_outcome_detail det) d on a.outcome_id=d.outcome_id and a.outcome_detail_id=d.outcome_detail_id) a left join (select sum(det.achievement) as achievement_this_yr , det.outcome_id,det.outcome_detail_id from wdcpmksy_outcome_ach_details det, wdcpmksy_outcome_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id<:monthId group by det.outcome_id,det.outcome_detail_id)b on a.outcome_id=b.outcome_id and a.outcome_detail_id=b.outcome_detail_id)a left join (select sum(aap.target) as target_upto_year, aap.outcome_id,aap.outcome_detail_id from wdcpmksy_outcome_target_details aap, wdcpmksy_outcome_target p where p.outcome_target_id=aap.outcome_target_id and p.proj_id=:pCode and p.fin_yr_cd<:finYr group by aap.outcome_id,aap.outcome_detail_id)b on a.outcome_id=b.outcome_id and a.outcome_detail_id=b.outcome_detail_id)a left join (select sum(det.achievement) as achievement_upto_year , det.outcome_id,det.outcome_detail_id from wdcpmksy_outcome_ach_details det, wdcpmksy_outcome_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd<:finYr and ach.month_id<:monthId group by det.outcome_id,det.outcome_detail_id) b on a.outcome_id=b.outcome_id and a.outcome_detail_id=b.outcome_detail_id
getActivityWithTargetForOutcome = select a.outcome_id as headcode, a.outcome_desc as headdesc ,a.target,a.outcome_detail_desc as activitydesc, a.outcome_detail_id as activitycd,coalesce(a.achievement_this_yr,0.0) as achievementthisyr,coalesce(a.target_upto_year,0.0) as targetuptoyear,coalesce(b.achievement_upto_year,0.0) as achievementuptoyear,a.achievement from (select a.outcome_id, a.outcome_desc,a.target,a.fin_yr_cd,a.outcome_detail_desc, a.outcome_detail_id,a.achievement_this_yr,a.target_upto_year,a.achievement from (select a.outcome_id, a.outcome_desc , a.target,a.fin_yr_cd,a.outcome_detail_desc, a.outcome_detail_id,a.achievement_this_yr,a.target_upto_year,b.achievement from (select a.outcome_id, a.outcome_desc , a.target,a.fin_yr_cd,a.outcome_detail_desc, a.outcome_detail_id,a.achievement_this_yr,b.target_upto_year from (select a.outcome_id, a.outcome_desc ,a.target,a.fin_yr_cd, a.outcome_detail_desc, a.outcome_detail_id,b.achievement_this_yr from ( select a.outcome_id, a.outcome_desc ,a.target ,a.fin_yr_cd,d.outcome_detail_desc, d.outcome_detail_id from (select outcome_detail_id,mout.outcome_id,mout.outcome_desc,tdetails.target,mout.fin_yr_cd from wdcpmksy_m_outcome mout, wdcpmksy_outcome_target target, wdcpmksy_outcome_target_details tdetails where (mout.fin_yr_cd is null or mout.fin_yr_cd<=:finYr) and (mout.month_id is null or mout.month_id <=:monthId) and target.outcome_target_id = tdetails.outcome_target_id and mout.outcome_id=tdetails.outcome_id  and target.proj_id=:pCode  and target.fin_yr_cd=:finYr and target.status='C') a left join (select det.outcome_id,outcome_detail_desc,outcome_detail_id from wdcpmksy_m_outcome_detail det) d on a.outcome_id=d.outcome_id and (a.outcome_detail_id=d.outcome_detail_id or a.outcome_detail_id is null)) a left join (select sum(det.achievement) as achievement_this_yr , det.outcome_id,det.outcome_detail_id from wdcpmksy_outcome_ach_details det, wdcpmksy_outcome_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id<:monthId group by det.outcome_id,det.outcome_detail_id)b on a.outcome_id=b.outcome_id and (a.outcome_detail_id=b.outcome_detail_id or a.outcome_detail_id is null))a left join (select sum(aap.target) as target_upto_year, aap.outcome_id,aap.outcome_detail_id from wdcpmksy_outcome_target_details aap, wdcpmksy_outcome_target p where p.outcome_target_id=aap.outcome_target_id and p.proj_id=:pCode and p.fin_yr_cd<:finYr group by aap.outcome_id,aap.outcome_detail_id)b on a.outcome_id=b.outcome_id and (a.outcome_detail_id=b.outcome_detail_id or a.outcome_detail_id is null)) a left join (select det.achievement , det.outcome_id,det.outcome_detail_id from wdcpmksy_outcome_ach_details det,  wdcpmksy_outcome_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id=:monthId group by det.outcome_id,det.outcome_detail_id,det.achievement) b on a.outcome_id=b.outcome_id and (a.outcome_detail_id=b.outcome_detail_id or a.outcome_detail_id is null) ) a left join (select sum(det.achievement) as achievement_this_yr , det.outcome_id,det.outcome_detail_id from wdcpmksy_outcome_ach_details det, wdcpmksy_outcome_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd=:finYr and ach.month_id<=:monthId group by det.outcome_id,det.outcome_detail_id) b on a.outcome_id=b.outcome_id and (a.outcome_detail_id=b.outcome_detail_id or a.outcome_detail_id is null) ) a left join (select sum(det.achievement) as achievement_upto_year , det.outcome_id,det.outcome_detail_id from wdcpmksy_outcome_ach_details det, wdcpmksy_outcome_achievement ach right join iwmp_m_project proj on proj.proj_id=ach.proj_id where ach.achievement_id=det.achievement_id and proj.proj_id=:pCode and ach.fin_yr_cd<:finYr and ach.month_id<:monthId group by det.outcome_id,det.outcome_detail_id) b on a.outcome_id=b.outcome_id and a.outcome_detail_id=b.outcome_detail_id order by headcode,activitycd 
getProjectByRegIdForOutcomeAchievement =select target from WdcpmksyOutcomeTarget target,IwmpUserProjectMap map where target.iwmpMProject.projectId=map.iwmpMProject.projectId and map.userReg.regId=:regId and target.status='C'
getUserToForwardForOutcomeAchievement = select getUserToForward(:regId,:userType)
getUserToRejectForOutcomeAchievement = select reg_id from iwmp_user_reg where reg_id in (select sent_from from wdcpmksy_outcome_ach_tranx where achievement_id=:achId and sent_to=:regId) and user_type='PI'
saveOutcomeAchievementAsDraft = select save_outcome_achievement_as_draft(:ach,:finYr,:month,:pCode,:headCode,:activityCode,:createdBy,:requestIp,:sentFrom,:sentTo)
viewOutcomeAchievementMovement =select achievement_id as achievementid,projectdesc,case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end as status, case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end as currentlyat,remarks,finyrdesc ,usertype,monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id,proj.proj_name as projectdesc,LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid , LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) remarks,yr.fin_yr_desc as finyrdesc, (select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regId) as userType,mon.month_name as monthdesc, ach.status as achstatus from wdcpmksy_outcome_ach_tranx tranx, wdcpmksy_outcome_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and tranx.achievement_id in (select distinct tt.achievement_id from wdcpmksy_outcome_ach_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id,tranx.sent_on desc) a,iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc,finyrdesc
checkForAlreadyForwardedOutcomeAchievement =  from WdcpmksyOutcomeAchTranx where (iwmpUserRegBySentFrom.regId=:regId or iwmpUserRegBySentTo.regId=:regId ) and wdcpmksyOutcomeAchievement.achievementId=:achId order by sentOn desc
getOutcomeAchievementDetails = from WdcpmksyOutcomeAchDetails where wdcpmksyOutcomeAchievement.achievementId=:achId

getOutcomeAchievementMovementDetails = select  plan.achievement_id as achievementid,proj.proj_name as projectdesc,case when plan.status='D' and tranx.action='R' then 'Rejected' when plan.status='D' then 'Pending' else 'Completed' end as status, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI'  then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end)||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st, iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and  reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_from) as sentfrom, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI' then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end)||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st,iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_to) as sentto, case when tranx.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tranx.remarks end as remarks,tranx.sent_on as senton, yr.fin_yr_desc as finyrdesc,tranx.action,mo.month_name as monthdesc from wdcpmksy_outcome_ach_tranx tranx,iwmp_user_reg reg, wdcpmksy_outcome_achievement plan, iwmp_m_project proj,iwmp_m_fin_year yr,iwmp_m_month mo where tranx.sent_to\=reg.reg_id and tranx.achievement_id=:achId and tranx.achievement_id=plan.achievement_id and plan.proj_id = proj.proj_id and plan.fin_yr_cd=yr.fin_yr_cd and plan.month_id=mo.month_id order by plan.achievement_id, proj.proj_name,yr.fin_yr_desc, tranx.sent_on desc
finListByFinCode=from IwmpMFinYear where finYrCd = :toYear
removeProjectActiveUser=select up.iwmpMProject from IwmpUserProjectMap as up where up.userReg.regId=:regid order by up.iwmpMProject.projectSeqNo 
deleteProjectforpiaUser=DELETE FROM public.iwmp_user_project_map WHERE reg_id=:regid and proj_id=:projcd
getFYearDtl=select min(fin_yr_cd) as fyear, max(fin_yr_cd)as lastyear, count(*) as listsize from iwmp_m_fin_year
getYearDtl=select distinct(f.fin_yr_desc) as yeardesc from iwmp_m_fin_year f, wdcpmksy_outcome_target t where f.fin_yr_cd = t.fin_yr_cd order by f.fin_yr_desc
getTrainingSubject=select training_sub_id, training_sub_desc from m_training_subject
getTrainingDetail12HOURS=select m.training_id, training_level, totalno, person_no, d.training_detail_id, string_agg((select training_sub_desc from m_training_subject where training_sub_id=sd.training_sub_id),', ' ) as subject, training_days, to_char(start_date,'dd/mm/yyyy') as start_date, to_char(end_date,'dd/mm/yyyy') as end_date from training_main m, training_detail d, training_subject_detail sd where m.training_id=d.training_id and d.training_detail_id=sd.training_detail_id and m.created_on BETWEEN NOW() - INTERVAL '24 HOURS' AND NOW() and m.st_code=:stcode  group by m.training_id, training_level, totalno, person_no, d.training_detail_id
#SHG QUery
getSHGCoreActivity = from MShgCoreactivity where isActive is true order by shgCoreactivityDesc
getSHGDraftData1 = from ShgCoreactivityDetail where shgDetail.shgMain.iwmpMProject.projectId=:projId and shgDetail.shgMain.groupType=:groupType and shgDetail.shgMain.status='D'
getSHGDraftData2 = from ShgDetail where shgMain.iwmpMProject.projectId=:projId and shgMain.groupType=:groupType and shgMain.status='D'
#FPO data
getFPOCoreActivity = from MFpoCoreactivity where isActive = 'true' order by  fpoCoreactivityId
getDeptOrg = from MDepartmentScheme where types='FPO'  order by schemeDescription
getFinYear=select fin_yr_cd, fin_yr_desc from iwmp_m_fin_year 
getProjectonDist=select proj_name, proj_id from iwmp_m_project where  dcode=:dCode  order by project_seq_no
getGroundWaterTable=select * from (select distinct proj_id, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name, det.depth_premonsoon as bpremon, det.depth_postmonsoon as bpostmon, ph as bph, alkalinity as balkalinity, hardness as bhardness, calcium as bcalcium, chloride as bchloride, nitrate as bnitrate, dissolved_solid as bdissolved_solid, fluoride as bfluoride from groundwater_main gm, groundwater_detail det where proj_id=:project  and gm.level_time='basel' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by proj_name) a full join (select distinct proj_id as projectcd, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name1, gm.fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=gm.fin_yr_cd) as finyear, det.depth_premonsoon as ppremon, det.depth_postmonsoon as ppostmon, ph, alkalinity, hardness, calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main gm, groundwater_detail det where proj_id=:project  and gm.level_time='project' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by proj_id) b on a.proj_id=b.projectcd order by proj_name, proj_name1
#getGroundWaterTable=select * from (select distinct proj_id, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name, det.depth_premonsoon as bpremon, det.depth_postmonsoon as bpostmon from groundwater_main gm,groundwater_detail det where proj_id=:project  and gm.level_time='basel' and det.groundwater_id=gm.groundwater_id order by proj_name) a left join (select distinct proj_id as projectcd, gm.fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=gm.fin_yr_cd) as finyear, det.depth_premonsoon as ppremon, det.depth_postmonsoon as ppostmon from groundwater_main gm,groundwater_detail det where proj_id=:project  and gm.level_time='project' and det.groundwater_id=gm.groundwater_id order by proj_id) b on a.proj_id=b.projectcd order by proj_name
getGroundWaterTableAllProject=select * from (select distinct proj_id, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name, det.depth_premonsoon as bpremon, det.depth_postmonsoon as bpostmon, ph as bph, alkalinity as balkalinity, hardness as bhardness, calcium as bcalcium, chloride as bchloride, nitrate as bnitrate, dissolved_solid as bdissolved_solid, fluoride	as bfluoride from groundwater_main gm, groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode=:district)  and gm.level_time='basel' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by proj_name) a full join (select distinct proj_id as projectcd, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name1, gm.fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=gm.fin_yr_cd) as finyear, det.depth_premonsoon as ppremon, det.depth_postmonsoon as ppostmon, ph, alkalinity, hardness, calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main gm, groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode=:district)  and gm.level_time='project' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by proj_id) b on a.proj_id=b.projectcd order by proj_name, proj_name1
#getGroundWaterTableAllProject=select * from (select distinct proj_id, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name, det.depth_premonsoon as bpremon, det.depth_postmonsoon as bpostmon from groundwater_main gm,groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode=:district)  and gm.level_time='basel' and det.groundwater_id=gm.groundwater_id order by proj_name) a left join (select distinct proj_id as projectcd, gm.fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=gm.fin_yr_cd) as finyear, det.depth_premonsoon as ppremon, det.depth_postmonsoon as ppostmon from groundwater_main gm,groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode=:district)  and gm.level_time='project' and det.groundwater_id=gm.groundwater_id order by proj_id) b on a.proj_id=b.projectcd order by proj_name
getGroundWaterTableAllDistrict=select * from (select distinct proj_id, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name, det.depth_premonsoon as bpremon, det.depth_postmonsoon as bpostmon, ph as bph, alkalinity as balkalinity, hardness as bhardness, calcium as bcalcium, chloride as bchloride, nitrate as bnitrate, dissolved_solid as bdissolved_solid, fluoride as bfluoride from groundwater_main gm,groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:statecd))  and gm.level_time='basel' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by proj_name) a full join (select distinct proj_id as projectcd, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name1, gm.fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=gm.fin_yr_cd) as finyear, det.depth_premonsoon as ppremon, det.depth_postmonsoon as ppostmon, ph, alkalinity, hardness, calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main gm, groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:statecd))  and gm.level_time='project' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by proj_id) b on a.proj_id=b.projectcd order by proj_name,proj_name1
#getGroundWaterTableAllDistrict=select * from (select distinct proj_id, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name, det.depth_premonsoon as bpremon, det.depth_postmonsoon as bpostmon from groundwater_main gm,groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:statecd))  and gm.level_time='basel' and det.groundwater_id=gm.groundwater_id order by proj_name) a left join (select distinct proj_id as projectcd, gm.fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=gm.fin_yr_cd) as finyear, det.depth_premonsoon as ppremon, det.depth_postmonsoon as ppostmon from groundwater_main gm,groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:statecd))   and gm.level_time='project' and det.groundwater_id=gm.groundwater_id order by proj_id) b on a.proj_id=b.projectcd order by proj_name
#getGroundWaterTableAllState=select * from (select distinct proj_id, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name, det.depth_premonsoon as bpremon, det.depth_postmonsoon as bpostmon, ph as bph, alkalinity as balkalinity, hardness as bhardness, calcium as bcalcium, chloride as bchloride, nitrate as bnitrate, dissolved_solid as bdissolved_solid, fluoride as bfluoride from groundwater_main gm,groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code in (select st_code from iwmp_state where wdcpmksy=1))) and gm.level_time='basel' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by proj_name) a full join (select distinct proj_id as projectcd, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name1, gm.fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=gm.fin_yr_cd) as finyear, det.depth_premonsoon as ppremon, det.depth_postmonsoon as ppostmon, ph, alkalinity, hardness, calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main gm, groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code in (select st_code from iwmp_state where wdcpmksy=1)))  and gm.level_time='project' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by proj_id) b on a.proj_id=b.projectcd order by proj_name,proj_name1
getGroundWaterTableAllState=select * from (select distinct (select st_name from iwmp_state where st_code in (select st_code from iwmp_district where dcode in (select dcode from iwmp_m_project where proj_id=gm.proj_id))) as bstname, proj_id, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name, det.depth_premonsoon as bpremon, det.depth_postmonsoon as bpostmon,  ph as bph, alkalinity as balkalinity, hardness as bhardness, calcium as bcalcium, chloride as bchloride, nitrate as bnitrate, dissolved_solid as bdissolved_solid, fluoride as bfluoride  from groundwater_main gm,groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code in(select st_code from iwmp_state where wdcpmksy=1))) and gm.level_time='basel' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by bstname, proj_name) a full join (select distinct  (select st_name from iwmp_state where st_code in (select st_code from iwmp_district where dcode in (select dcode from iwmp_m_project where proj_id=gm.proj_id))) as stname, proj_id as projectcd, (select proj_name from iwmp_m_project where proj_id=gm.proj_id) as proj_name1, gm.fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where fin_yr_cd=gm.fin_yr_cd) as finyear, det.depth_premonsoon as ppremon, det.depth_postmonsoon as ppostmon, ph, alkalinity, hardness,  calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main gm, groundwater_detail det where proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code in (select st_code from iwmp_state where wdcpmksy=1)))  and gm.level_time='project' and det.groundwater_id=gm.groundwater_id and gm.status='C' order by stname, proj_name1) b on a.proj_id=b.projectcd order by bstname, stname, proj_name,proj_name1						 
#getCapicityBuildingReport=select st_code, statename, finyear, sum(case training_level when 'SL' then totalno else 0 end) as sl_tcond, sum(case training_level when 'SL' then person_no else 0 end) as sl_tperson, sum(case training_level when 'DI' then totalno else 0 end) as di_tcond, sum(case training_level when 'DI' then person_no else 0 end) as di_tperson, sum(case training_level when 'PI' then totalno else 0 end) as pi_tcond, sum(case training_level when 'PI' then person_no else 0 end) as pi_tperson, sum(case training_level when 'WC' then totalno else 0 end) as wc_tcond, sum(case training_level when 'WC' then person_no else 0 end) as wc_tperson, sum(case training_level when 'SL' then totalno else 0 end)+sum(case training_level when 'DI' then totalno else 0 end)+sum(case training_level when 'PI' then totalno else 0 end)+ sum(case training_level when 'WC' then totalno else 0 end) as totalcond, sum(case training_level when 'SL' then person_no else 0 end)+sum(case training_level when 'DI' then person_no else 0 end)+sum(case training_level when 'PI' then person_no else 0 end)+sum(case training_level when 'WC' then person_no else 0 end) as totalperson from  (select (select st_name from iwmp_state where st_code=m.st_code) as statename, cast((case  when  (date_part('month', d.start_date) >=4 and date_part('month', d.start_date) <13) then date_part('year', d.start_date) else cast((date_part('year', d.start_date)) as integer) -1 end) as character varying(10)) as finyear, st_code, totalno, person_no, training_level	from training_main m, training_detail d where m.training_id=d.training_id and start_date is not null) as a group by st_code, statename, finyear order by statename, finyear
getCapicityBuildingReport=select st_code, statename, finyear, cast(sum(case training_level when 'SL' then totalno else 0 end) as integer) as sl_tcond, cast(sum(case training_level when 'SL' then person_no else 0 end) as integer) as sl_tperson, cast(sum(case training_level when 'DI' then totalno else 0 end) as integer) as di_tcond, cast(sum(case training_level when 'DI' then person_no else 0 end) as integer) as di_tperson, cast(sum(case training_level when 'PI' then totalno else 0 end) as integer) as pi_tcond, cast(sum(case training_level when 'PI' then person_no else 0 end) as integer) as pi_tperson, cast(sum(case training_level when 'WC' then totalno else 0 end) as integer) as wc_tcond, cast(sum(case training_level when 'WC' then person_no else 0 end) as integer) as wc_tperson, cast(sum(case training_level when 'SL' then totalno else 0 end)+sum(case training_level when 'DI' then totalno else 0 end)+sum(case training_level when 'PI' then totalno else 0 end)+ sum(case training_level when 'WC' then totalno else 0 end)  as integer) as totalcond, cast(sum(case training_level when 'SL' then person_no else 0 end)+sum(case training_level when 'DI' then person_no else 0 end)+sum(case training_level when 'PI' then person_no else 0 end)+sum(case training_level when 'WC' then person_no else 0 end)  as integer) as totalperson from  (select (select st_name from iwmp_state where st_code=m.st_code) as statename, cast((case  when  (date_part('month', d.start_date) >=4 and date_part('month', d.start_date) <13) then date_part('year', d.start_date) else cast((date_part('year', d.start_date)) as integer) -1 end) as character varying(10)) as finyear, st_code, totalno, sum(person_no) as person_no, training_level,  m.training_id	from training_main m, training_detail d where m.training_id=d.training_id and start_date is not null group by st_code, totalno, (case  when  (date_part('month', d.start_date) >=4 and date_part('month', d.start_date) <13) then date_part('year', d.start_date) else cast((date_part('year', d.start_date)) as integer) -1 end), training_level,  m.training_id order by statename, finyear) as a group by st_code, statename, finyear order by statename, finyear
getWaterGroundDraftCom=select distinct m.groundwater_id, proj_id, (select proj_name from iwmp_m_project where proj_id=m.proj_id) as proj_name, level_time, fin_yr_cd, (select fin_yr_desc from iwmp_m_fin_year where m.fin_yr_cd=fin_yr_cd) as finyear, groundwater_detail_id, depth_premonsoon, depth_postmonsoon, CAST( m.status AS character varying(30) ) as status, ph, alkalinity, hardness, calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main m, groundwater_detail g where m.groundwater_id=g.groundwater_id and proj_id=:project and level_time='project'
getWaterGroundDraftComBasel=select distinct m.groundwater_id, proj_id, (select proj_name from iwmp_m_project where proj_id=m.proj_id) as proj_name, level_time, groundwater_detail_id, depth_premonsoon, depth_postmonsoon, CAST( m.status AS character varying(30) ) as status, ph, alkalinity, hardness, calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main m, groundwater_detail g where m.groundwater_id=g.groundwater_id and proj_id=:project and level_time='basel'
deleteGWTdraftmain=delete from groundwater_main where groundwater_id=:gwtm
deleteGWTdraft=delete from groundwater_detail where groundwater_detail_id=:gwtdtl
completeGWTdraft=update groundwater_detail set status='C' where groundwater_detail_id=:gwtdtl
completeGWTdraftmain=update groundwater_main set status='C' where groundwater_id=:gwtm
duringProjCheck=select  groundwater_id, proj_id, level_time, fin_yr_cd from groundwater_main where proj_id=:project and level_time=:atline and fin_yr_cd=:fyear and status='C'
balselinCheck=select  groundwater_id, proj_id, level_time from groundwater_main where proj_id=:project and level_time=:atline and status='C'
getWaterGroundDraftbasel=select m.groundwater_id, level_time, proj_id,  groundwater_detail_id, depth_premonsoon, depth_postmonsoon, ph, alkalinity, hardness, calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main m, groundwater_detail d where m.groundwater_id=d.groundwater_id and m.status='D' and proj_id=:project and level_time=:atline
getWaterGroundDraftproject=select m.groundwater_id, level_time, proj_id, fin_yr_cd,  groundwater_detail_id, depth_premonsoon, depth_postmonsoon, ph, alkalinity, hardness, calcium, chloride, nitrate, dissolved_solid, fluoride from groundwater_main m, groundwater_detail d where m.groundwater_id=d.groundwater_id and m.status='D' and proj_id=:project and level_time=:atline and fin_yr_cd=:fyear

getFPOstatewise = select s.st_code as stcode, st_name , a.* from (select st_code, cast(sum(case when fm.fpo_Type='newFPO' then 1 else 0 end) as int) as newfpono, cast(sum(case when fm.fpo_Type='newFPO' then no_Of_Farmer_Associated else 0 end) as int) as fpofarmerasso, cast(sum(case when fm.fpo_Type='oldFPO' then no_Of_Farmer_Associated else 0 end)as int) as oldfarmerasso, cast(sum(case when fm.fpo_Type='oldFPO' then 1 else 0 end)as int) as oldfpono from fpo_detail fd, fpo_main fm, iwmp_district d, iwmp_m_project p where fd.fpo_id = fm.fpo_id and fm.proj_id = p.proj_id and p.dcode = d.dcode and fm.status ='c' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where s.st_code in(case when :stCode=0 then s.st_code else :stCode end) and wdcpmksy =1 order by st_name 
getFPOdistwise= select d.dcode as dcode, dist_name as distname , a.* from (select p.dcode as distcode, cast(sum(case when fm.fpo_Type='newFPO' then 1 else 0 end) as int) as newfpono, cast(sum(case when fm.fpo_Type='newFPO' then no_Of_Farmer_Associated else 0 end) as int) as fpofarmerasso, cast(sum(case when fm.fpo_Type='oldFPO' then no_Of_Farmer_Associated else 0 end)as int) as oldfarmerasso, cast(sum(case when fm.fpo_Type='oldFPO' then 1 else 0 end)as int) as oldfpono from fpo_detail fd, fpo_main fm, iwmp_m_project p where fd.fpo_id = fm.fpo_id and fm.proj_id = p.proj_id and fm.status ='c' group by dcode) as a right join iwmp_district d on d.dcode=a.distcode where d.st_code in(case when :stCode=0 then d.st_code else :stCode end) and d.dist_proj=true  order by dist_name
getFPOprojwise = from FpoDetail as f where fpoMain.status = 'c' and fpoMain.iwmpMProject.iwmpDistrict.dcode=:dcode and fpoMain.fpoType = :fpoType
getFPOAllprojwise = from FpoDetail as f where fpoMain.status = 'c' and fpoMain.iwmpMProject.iwmpDistrict.iwmpState.stCode\=\:stcode and fpoMain.fpoType \= \:fpoType order by fpoMain.iwmpMProject.projName
getFPODraftData = select m.fpo_id,d.fpo_detail_id, d.fpo_name, md.scheme_description as dept_org, d.registration_no, d.registration_date, d.no_of_members, array_to_string(array_agg(mc.fpo_coreactivity_desc), ', ')as coreactivity, d.turnover, d.no_of_farmer_associated, m.status from fpo_main m,fpo_detail d, fpo_coreaactivity_detail cd,m_department_scheme md, m_fpo_coreactivity mc where m.fpo_type = :group and m.proj_id = :projectId  and m.fpo_id = d.fpo_id and md.department_scheme_id_pk = d.dept_org and d.fpo_detail_id=cd.fpo_detail_id and mc.fpo_coreactivity_id=cd.fpo_coreactivity_id and m.status = 'd' group by m.fpo_id, d.fpo_name,d.turnover, d.no_of_farmer_associated ,md.scheme_description, d.fpo_detail_id order by m.fpo_id, d.fpo_name,d.turnover, d.no_of_farmer_associated ,d.fpo_detail_id
getFPOFinalData = select m.fpo_id,d.fpo_detail_id, d.fpo_name, md.scheme_description as dept_org, d.registration_no, d.registration_date, d.no_of_members, array_to_string(array_agg(mc.fpo_coreactivity_desc), ', ')as coreactivity, d.turnover, d.no_of_farmer_associated, m.status from fpo_main m,fpo_detail d, fpo_coreaactivity_detail cd,m_department_scheme md, m_fpo_coreactivity mc where m.fpo_type = :group and m.proj_id = :projectId  and m.fpo_id = d.fpo_id and md.department_scheme_id_pk = d.dept_org and d.fpo_detail_id=cd.fpo_detail_id and mc.fpo_coreactivity_id=cd.fpo_coreactivity_id and m.status = 'c' group by m.fpo_id, d.fpo_name,d.turnover, d.no_of_farmer_associated ,md.scheme_description, d.fpo_detail_id order by m.fpo_id, d.fpo_name,d.turnover, d.no_of_farmer_associated ,d.fpo_detail_id
deleteFPODraftData = delete from FpoMain where fpoId = :fpoid

#Base Line Survey Query
getPhysicalHead = from IwmpMPhyHeads where blsRequired =true and status ='A' order by headCode
getIwmpMPhyActivity = from IwmpMPhyActivity where iwmpMPhyHeads.blsRequired =true and status ='A' order by activityCode
getIwmpMPhyActivityAll = from IwmpMPhyActivity where status ='A' order by activityCode
getWdcpmksyMOutcome = from WdcpmksyMOutcome where outcomeId in (:headCode) order by outcomeId
getWdcpmksyMOutcomeDetail = from WdcpmksyMOutcomeDetail where wdcpmksyMOutcome.outcomeId in (:headCode) order by outcomeDetailId
getSanctionedArea=select areaProposed from IwmpMProject where projectId=:projId
#getPreFilledBaseLineSurveyData = select m.bls_id,m.proj_id,p.proj_name,m.total_geo_area,m.area_covering_type,m.total_gross_cropped_area,m.total_net_sown_area,m.total_sc,m.total_st,m.total_others,m.total_population, m.no_of_landless_household,m.no_of_bpl_household,m.small_farmer_household,m.marginal_farmer_household,m.person_days_migration,m.status, d.bls_activity_details_id,d.area_of_activity, out.outcome_id,out.outcome_desc,outdet.outcome_detail_id,outdet.outcome_detail_desc,d.phy_head,h.head_desc,d.phy_activity,act.activity_desc from base_line_survey_main m,iwmp_m_project p,base_line_survey_activity_details d left join wdcpmksy_m_outcome out on out.outcome_id=d.outcome_id left join wdcpmksy_m_outcome_detail outdet on d.outcome_detail_id=outdet.outcome_detail_id left join iwmp_m_phy_heads h on d.phy_head=h.head_code left join iwmp_m_phy_activity act on d.phy_activity=act.activity_code where m.bls_id=d.bls_id and m.proj_id=p.proj_id and m.proj_id=:projId order by m.bls_id,d.bls_activity_details_id,out.outcome_id,outdet.outcome_detail_id,phy_head,phy_activity
getPreFilledBaseLineSurveyData = select m.bls_id,m.proj_id,p.proj_name,m.total_geo_area,m.area_covering_type,m.total_gross_cropped_area,m.total_net_sown_area,m.total_sc,m.total_st,m.total_others,m.total_population, m.no_of_landless_household,m.no_of_bpl_household,m.small_farmer_household,m.marginal_farmer_household,m.person_days_migration,m.status,m.household_total,m.population_sc,m.population_st, m.population_other,m.population_total,m.population_landless_people,m.population_bpl,m.population_small_farmers,m.population_marginal_farmers,m.whs_farm_pond,m.whs_check_dam, m.whs_nallah_bund,m.whs_percolation_tank,m.whs_gwrs,m.whs_gully_plug,m.whs_other,m.pi_farm_pond,m.pi_check_dam,m.pi_nallah_bund,m.pi_other,d.bls_activity_details_id,d.area_of_activity, out.outcome_id,out.outcome_desc,outdet.outcome_detail_id,outdet.outcome_detail_desc,d.phy_head,h.head_desc,d.phy_activity,act.activity_desc from base_line_survey_main m, iwmp_m_project p,base_line_survey_activity_details d left join wdcpmksy_m_outcome out on out.outcome_id=d.outcome_id left join wdcpmksy_m_outcome_detail outdet on d.outcome_detail_id=outdet.outcome_detail_id left join iwmp_m_phy_heads h on d.phy_head=h.head_code left join iwmp_m_phy_activity act on d.phy_activity=act.activity_code where m.bls_id=d.bls_id and m.proj_id=p.proj_id and m.proj_id=:projId order by m.bls_id,d.bls_activity_details_id,out.outcome_id,outdet.outcome_detail_id,phy_head,phy_activity 
deleteBaseLineSurveyActivityDetails = delete from base_line_survey_activity_details where bls_id=(select bls_id from base_line_survey_main where proj_id=:projId)
deleteBaseLineSurvey = delete from base_line_survey_main where proj_id=:projId 
completeBaseLineSurvey = update base_line_survey_main set status='C' where proj_id=:projId 
getProjectforBaseLineSurveySLNA = select p from IwmpUserProjectMap map, BaseLineSurveyMain main, IwmpMProject p where p.projectId=main.iwmpMProject.projectId and main.iwmpMProject.projectId=map.iwmpMProject.projectId and map.userReg.regId in (select userReg.regId from UserMap where iwmpDistrict.dcode in (select dcode from IwmpDistrict where iwmpState.stCode = (select iwmpState.stCode from UserMap where userReg.regId=:regId))) and main.status='D' order by p.projName
#getBaseLineSurveyDetailByStCode = select d.dcode as dist_code,d.distName as dist_name,p.projName as proj_name,p.areaProposed as sanctioned_area,bm.totalGeoArea as total_geo_area,bm.areaCoveringType as area_covering_type from BaseLineSurveyMain bm,IwmpMProject p,IwmpDistrict d where bm.iwmpMProject.projectId=p.projectId and p.iwmpDistrict.dcode=d.dcode and d.iwmpState.stCode=:stCode
getBaseLineSurveyDetailByDistCode =  from BaseLineSurveyMain where iwmpMProject.iwmpDistrict.dcode=:distCode and status='C' order by blsId
getBaseLineSurveyDetail = from BaseLineSurveyMain where status='C' order by iwmpMProject.iwmpDistrict.iwmpState.stName,iwmpMProject.iwmpDistrict.distName
getBaseLineSurveyDetailByProjId = select m.bls_id,m.proj_id,p.proj_name,p.area_proposed as sanctioned_area,m.total_geo_area,m.area_covering_type,m.total_gross_cropped_area,m.total_net_sown_area,m.total_sc,m.total_st,m.total_others,m.total_population, m.no_of_landless_household,m.no_of_bpl_household,m.small_farmer_household,m.marginal_farmer_household,m.person_days_migration,m.status, d.bls_activity_details_id,d.area_of_activity, out.outcome_id,out.outcome_desc,outdet.outcome_detail_id,outdet.outcome_detail_desc,d.phy_head,h.head_desc,d.phy_activity,act.activity_desc from base_line_survey_main m,iwmp_m_project p, base_line_survey_activity_details d left join wdcpmksy_m_outcome out on out.outcome_id=d.outcome_id left join wdcpmksy_m_outcome_detail outdet on d.outcome_detail_id=outdet.outcome_detail_id left join iwmp_m_phy_heads h on d.phy_head=h.head_code left join iwmp_m_phy_activity act on d.phy_activity=act.activity_code where m.bls_id=d.bls_id and m.proj_id=p.proj_id and m.proj_id=:projId order by m.bls_id,d.bls_activity_details_id,out.outcome_id,outdet.outcome_detail_id,phy_head,phy_activity 
#getProjectByRegIdUserType = from IwmpUserProjectMap where case when 'PI'=:userType then (userReg.regId=:regId) when 'DI'=:userType then (userReg.regId in (select userReg.regId from UserMap where iwmpDistrict.dcode=(select iwmpDistrict.dcode from UserMap where userReg.regId=:regId))) when 'SL'=:userType then (userReg.regId in  (select userReg.regId from UserMap where iwmpDistrict.dcode in (select dcode from IwmpDistrict where iwmpState.stCode = (select iwsmpState.stCode from IwmpUserMap where userReg.regId=:regId))))end
getBaseLineSurveyDetailByStCodeDistCode = from BaseLineSurveyMain where iwmpMProject.iwmpDistrict.iwmpState.stCode = case when :stCode=0 then iwmpMProject.iwmpDistrict.iwmpState.stCode else :stCode end and iwmpMProject.iwmpDistrict.distCode = case when :distCode=0 then iwmpMProject.iwmpDistrict.distCode else :distCode end and status='C' order by iwmpMProject.iwmpDistrict.iwmpState.stName,iwmpMProject.iwmpDistrict.distName
#stateprofilewdc
getstateprofilewdc=select s.st_code, s.st_name, count (distinct d.dcode) as no_of_district, (select count(p.project_cd)) as noofproject, coalesce(sum( p.area_proposed),0.00) as totArea, coalesce(sum( p.project_cost),0.00) as prjCost from iwmp_state s,  iwmp_m_project p, iwmp_district d  where d.st_code = s.st_code and p.dcode = d.dcode and s.st_code = :sCode group by s.st_code 
#getProjectByRegIdUserType = from IwmpUserProjectMap where case when 'PI'=:userType then (userReg.regId=:regId) when 'DI'=:userType then (userReg.regId in (select userReg.regId from UserMap where iwmpDistrict.dcode=(select iwmpDistrict.dcode from UserMap where userReg.regId=:regId))) when 'SL'=:userType then (userReg.regId in  (select userReg.regId from UserMap where iwmpDistrict.dcode in (select dcode from IwmpDistrict where iwmpState.stCode = (select iwsmpState.stCode from IwmpUserMap where userReg.regId=:regId))))end
#getProjectByRegIdUserType = from IwmpUserProjectMap where case when 'PI'=:userType then (userReg.regId=:regId) when 'DI'=:userType then (userReg.regId in (select userReg.regId from UserMap where iwmpDistrict.dcode=(select iwmpDistrict.dcode from UserMap where userReg.regId=:regId))) when 'SL'=:userType then (userReg.regId in  (select userReg.regId from UserMap where iwmpDistrict.dcode in (select dcode from IwmpDistrict where iwmpState.stCode = (select iwsmpState.stCode from IwmpUserMap where userReg.regId=:regId))))end

getactivitydesc=select activity_code as activitycode, activity_desc as actdesc from iwmp_m_phy_activity where head_code=:headcode order by activity_code

#addstateprofile
getstateprofiledata=from SlnaStProfile s where s.iwmpState.stCode = :stateCode
#getTreatbleareadata=select s.st_code, s.st_name, no_of_dist, no_of_block,tot_no_micro_ws , coalesce (tot_geo_area_hec,00000) as tot_geo_area_hec , coalesce (tot_untreat_area_hec,00000) as tot_untreat_area_hec, coalesce(area_by_preiwmp_proj,00000) as area_by_preiwmp_proj, coalesce(area_by_other_ws,0.00000) as area_by_other_ws, round(sum(p.area_proposed/100000.0),5) as area_proposed, coalesce (tot_area_asur_irrig,0.00000) as tot_area_asur_irrig, tot_geo_area_hec - (tot_untreat_area_hec + area_by_preiwmp_proj + area_by_other_ws + round(sum(p.area_proposed/100000.0),5) + tot_area_asur_irrig) as total from iwmp_state s, slna_st_profile pf, iwmp_m_project p, iwmp_district d where s.st_code = pf.state_cd and p.dcode = d.dcode  and d.st_code = pf.state_cd and pf.status='c' group by s.st_code ,s.st_name ,no_of_dist ,no_of_block , tot_no_micro_ws ,tot_geo_area_hec ,tot_untreat_area_hec ,area_by_preiwmp_proj ,area_by_other_ws ,tot_area_asur_irrig   order by s.st_name
#getTreatbleareadata=select s.st_name, s.st_code, coalesce (t1.no_of_dist, 0) as no_of_dist, coalesce (t1.no_of_block, 0) as no_of_block, coalesce (t1.tot_no_micro_ws, 0) as tot_no_micro_ws, coalesce (t1.tot_geo_area_hec, 0.00000) as tot_geo_area_hec, coalesce (t1.tot_untreat_area_hec, 0.00000) as tot_untreat_area_hec, coalesce(t1.area_by_preiwmp_proj,0.00000) as area_by_preiwmp_proj, coalesce(t1.area_by_other_ws, 0.00000) as area_by_other_ws, coalesce(t1.area_proposed,0.00000) as area_proposed, coalesce (t1.tot_area_asur_irrig, 0.00000) as tot_area_asur_irrig, coalesce(t1.total, 0.00000) as total from ( select d.st_code as stcd, coalesce (no_of_dist, 0) as no_of_dist, coalesce (no_of_block, 0) as no_of_block, coalesce (tot_no_micro_ws, 0) as tot_no_micro_ws, coalesce (tot_geo_area_hec,0.00000) as tot_geo_area_hec, coalesce (tot_untreat_area_hec,0.00000) as tot_untreat_area_hec, coalesce(area_by_preiwmp_proj,0.00000) as area_by_preiwmp_proj, coalesce(area_by_other_ws,0.00000) as area_by_other_ws, coalesce(round(sum(p.area_proposed/100000.0),5), 0.00000) as area_proposed, coalesce (tot_area_asur_irrig,0.00000) as tot_area_asur_irrig, coalesce (tot_geo_area_hec - (tot_untreat_area_hec + area_by_preiwmp_proj + area_by_other_ws + round(sum(p.area_proposed/100000.0),5) + tot_area_asur_irrig), 0.00000) as total from iwmp_m_project p inner join iwmp_district d on  p.dcode = d.dcode inner join slna_st_profile pf on d.st_code = pf.state_cd   where   pf.status='c' group by d.st_code, no_of_dist, no_of_block, tot_no_micro_ws, tot_geo_area_hec, tot_untreat_area_hec, area_by_preiwmp_proj, area_by_other_ws, tot_area_asur_irrig order by d.st_code) as t1 right join iwmp_state s ON s.st_code = t1.stcd where wdcpmksy=1 order by st_name
getTreatbleareadata=select s.st_name, s.st_code, coalesce (t1.no_of_dist, 0) as no_of_dist, coalesce (t1.no_of_block, 0) as no_of_block, coalesce (t1.tot_no_micro_ws, 0) as tot_no_micro_ws, coalesce (t1.tot_geo_area_hec, 0.00000) as tot_geo_area_hec, coalesce (t1.tot_untreat_area_hec, 0.00000) as tot_untreat_area_hec, coalesce(t1.area_by_preiwmp_proj,0.00000) as area_by_preiwmp_proj, coalesce(t1.area_by_other_ws, 0.00000) as area_by_other_ws, coalesce(t1.iwmp_wdcpmksy_area, 0.00000) as iwmp_wdcpmksy_area, coalesce(t1.area_proposed,0.00000) as area_proposed, coalesce (t1.tot_area_asur_irrig, 0.00000) as tot_area_asur_irrig, coalesce(t1.total, 0.00000) as total from ( select d.st_code as stcd, coalesce (no_of_dist, 0) as no_of_dist, coalesce (no_of_block, 0) as no_of_block, coalesce (tot_no_micro_ws, 0) as tot_no_micro_ws, coalesce (tot_geo_area_hec,0.00000) as tot_geo_area_hec, coalesce (tot_untreat_area_hec,0.00000) as tot_untreat_area_hec, coalesce(area_by_preiwmp_proj,0.00000) as area_by_preiwmp_proj, coalesce(area_by_other_ws,0.00000) as area_by_other_ws, coalesce(iwmp_wdcpmksy_area,0.00000) as iwmp_wdcpmksy_area, coalesce(round(sum(p.area_proposed/100000.0),5), 0.00000) as area_proposed, coalesce (tot_area_asur_irrig,0.00000) as tot_area_asur_irrig, coalesce (tot_geo_area_hec - (tot_untreat_area_hec + area_by_preiwmp_proj + area_by_other_ws +coalesce(iwmp_wdcpmksy_area,0.00000)+ round(sum(p.area_proposed/100000.0),5) + tot_area_asur_irrig), 0.00000) as total from iwmp_m_project p inner join iwmp_district d on  p.dcode = d.dcode inner join slna_st_profile pf on d.st_code = pf.state_cd where pf.status='c' group by d.st_code, no_of_dist, no_of_block, tot_no_micro_ws, tot_geo_area_hec, tot_untreat_area_hec, area_by_preiwmp_proj, area_by_other_ws,iwmp_wdcpmksy_area, tot_area_asur_irrig order by d.st_code) as t1 right join iwmp_state s ON s.st_code = t1.stcd where wdcpmksy=1 order by st_name
getphysubactivity=from IwmpMPhySubactivity s order by s.seqNo
getothersubcategory = from WdcpmksyMPhyOtherActivity o where o.iwmpState.stCode = :stCode order by o.seqNo
getphysubidactivity=from IwmpMPhySubactivity where subActivityCode = :id
getothersubcategorybyid = from WdcpmksyMPhyOtherActivity where otherActivityCode  = :id 

deletephysubAct= delete from IwmpMPhySubactivity where subActivityCode = :id
deleteothrsubCat = delete from WdcpmksyMPhyOtherActivity where otherActivityCode = :id

#allactivitymaster
getlivelihoodactivity = from MLivelihoodCoreactivity order by livelihoodCoreactivityDesc
getproductionactivity from MProductivityCoreactivity order by productivityCoreactivityDesc
getepaactivity = from MEpaCoreactivity order by epaDesc
getfpoactivity = from MFpoCoreactivity order by fpoCoreactivityDesc
getshgactivity = from MShgCoreactivity order by shgCoreactivityDesc

gettrainingsubactivity = from MTrainingSubject order by trainingSubDesc
getPreparednessData=from IwmpMProjectPrepare order by prepareDesc
countprojectprepareid=select count(*) from IwmpProjectPrepare where iwmpMProjectPrepare.projectMprepareId=:id 

getSelfHelpCreatedExistList=select stcode as st_code, stname as st_name, coalesce(newno,0) as newno, coalesce(newrevolving,0) as newrevolving, coalesce(newsc,0) as newsc, coalesce(newst,0) as newst, coalesce(newother,0) as newother, coalesce(newtotal,0) as newtotal, coalesce(newwomen,0) as newwomen, coalesce(newthrift,0) as newthrift, coalesce(newbimayogana,0) as newbimayogana, coalesce(newfederated,0) as newfederated, coalesce(oldno,0) as oldno, coalesce(oldrevolving,0) oldrevolving, coalesce(oldsc,0) as oldsc, coalesce(oldst,0) as oldst, coalesce(oldother,0) as oldother, coalesce(oldtotal,0) as oldtotal, coalesce(oldwomen,0) as oldwomen, coalesce(oldthrift,0) as oldthrift, coalesce(oldbimayogana, 0) as oldbimayogana, coalesce(oldfederated,0) as oldfederated, coalesce(newno,0)+coalesce(oldno,0) as totno, coalesce(newrevolving,0)+coalesce(oldrevolving,0) as totrevolving, coalesce(newsc,0)+coalesce(oldsc,0) as totsc, coalesce(newst,0)+coalesce(oldst,0) as totst, coalesce(newother,0)+coalesce(oldother,0) as totother, coalesce(newtotal,0)+coalesce(oldtotal,0) as tottotal, coalesce(newwomen,0)+coalesce(oldwomen,0) as totwomen, coalesce(newthrift,0)+coalesce(oldthrift,0) as totthrift, coalesce(newbimayogana,0)+coalesce(oldbimayogana, 0) as totbimayogana, coalesce(newfederated,0)+coalesce(oldfederated,0) as totfederated from (select s.st_code as stcode, s.st_name as stname,cast((select count(sd.name) from iwmp_district d, iwmp_m_project p, shg_main main, shg_detail sd where sd.shg_id=main.shg_id and main.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code = s.st_code and main.status ='C' and main.group_type = 'newSHG' )as integer) as newno, a.* from (select st_code,  cast(sum(revolving_amount) as integer) as newrevolving,cast (sum(sc)as integer) as newsc, cast(sum(st)as integer) as newst, cast(sum(other)as integer) as newother,cast(sum(sc+st+other)as integer) as newtotal,cast(sum(women)as integer) as newwomen, cast(sum(case when thrift_credit is true then 1 else 0 end)as integer) as newthrift,cast(sum(pm_bima_yogana)as integer) as newbimayogana, cast (sum(case when federated is true then 1 else 0 end)as integer) as newfederated from shg_detail sd ,shg_main ism, iwmp_district d, iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and p.dcode= d.dcode and ism.group_type='newSHG' and ism.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name)as new join(select s.st_code as stcode1,st_name as stname1,cast((select count(sd.name) from iwmp_district d, iwmp_m_project p, shg_main main,  shg_detail sd where sd.shg_id=main.shg_id and main.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code = s.st_code and main.status ='C' and main.group_type = 'oldSHG' )as integer) as oldno, a.* from (select st_code, cast(sum(revolving_amount)as integer) as oldrevolving, cast(sum(sc)as integer) as oldsc,cast (sum(st)as integer) as oldst, cast (sum(other)as integer) as oldother, cast(sum(sc+st+other)as integer) as oldtotal, cast(sum(women)as integer) as oldwomen, cast( sum(case when thrift_credit is true then 1 else 0 end)as integer) as oldthrift, cast(sum(pm_bima_yogana)as integer) as oldbimayogana, cast (sum(case when federated is true then 1 else 0 end)as integer) as oldfederated from shg_detail sd ,shg_main ism, iwmp_district d, iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and p.dcode= d.dcode and ism.group_type='oldSHG' and ism.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where s.st_code=(case when :stcd = 0 then s.st_code else :stcd end) and wdcpmksy=1 order by st_name) as old  on new.stcode=old.stcode1 order by stname	
#getSelfHelpCreatedExistList=select s.st_code, s.st_name, cast(sum(newno) as integer) newno,  cast(sum(newrevolving) as integer) newrevolving, cast(sum(newsc) as integer) newsc, cast(sum(newst) as integer) newst, cast(sum(newother) as integer) newother, cast(sum(newtotal) as integer) newtotal, cast(sum(newwomen) as integer) newwomen, cast(sum(newthrift) as integer) newthrift, cast(sum(newbimayogana) as integer) newbimayogana, cast(sum(newfederated) as integer) newfederated, cast(sum(oldno) as integer) oldno, cast(sum(oldrevolving) as integer) oldrevolving, cast(sum(oldsc) as integer) oldsc, cast(sum(oldst) as integer) oldst, cast(sum(oldother) as integer) oldother, cast(sum(oldtotal) as integer) oldtotal, cast(sum(oldwomen) as integer) oldwomen, cast(sum(oldthrift) as integer) oldthrift, cast(sum(oldbimayogana) as integer) oldbimayogana, cast(sum(oldfederated) as integer) oldfederated, cast(sum(totno) as integer) totno, cast(sum(totrevolving) as integer) totrevolving, cast(sum(totsc) as integer) totsc, cast(sum(totst) as integer) totst, cast(sum(totother) as integer) totother, cast(sum(tottotal) as integer) tottotal, cast(sum(totwomen) as integer) totwomen, cast(sum(totthrift) as integer) totthrift, cast(sum(totbimayogana) as integer) totbimayogana, cast(sum(totfederated) as integer) totfederated from (select * from (( select proj_id projectid, sum(totalno) as newno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newsc, (select sum(st) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newfederated from shg_main sm where sm.group_type='newSHG' and sm.status='C' group by proj_id)as new  full join (select proj_id, sum(totalno) as oldno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldfederated from shg_main sm where sm.group_type='oldSHG' and sm.status='C' group by proj_id) as old  on new.projectid=old.proj_id) as comb  full join (select proj_id pj, sum(totalno) as totno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') tottotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totfederated from shg_main sm where sm.group_type in('newSHG', 'oldSHG') and sm.status='C'  group by proj_id) as total on comb.proj_id=total.pj ) as wer, iwmp_m_project p, iwmp_district d, iwmp_state s where wer.proj_id=p.proj_id and p.dcode=d.dcode and d.st_code=s.st_code and s.st_code=(case when :stcd = 0 then s.st_code else :stcd end) group by s.st_name, s.st_code order by s.st_name
#getSelfHelpCreatedExistList=select d.shgMain.iwmpMProject.iwmpDistrict.iwmpState.stCode as stcode,  d.shgMain.iwmpMProject.iwmpDistrict.iwmpState.stName as stname, cast(sum(d.shgMain.totalno) as int) as totalno, cast(sum(sc) as int) as sc, cast(sum(st) as int) as st, cast(sum(other) as int) as other, cast(sum(sc+st+other) as int) as total, cast(sum(women) as int) as women, sum(pmBimaYogana) as pmBimaYogana, count(case when federated is true then 1 else 0 end)  as federated from ShgDetail as d where d.shgMain.status='C' and d.shgMain.groupType='newSHG' group by  d.shgMain.iwmpMProject.iwmpDistrict.iwmpState.stCode, d.shgMain.iwmpMProject.iwmpDistrict.iwmpState.stName order by d.shgMain.iwmpMProject.iwmpDistrict.iwmpState.stName
#getSelfHelpCreatedExistListDist=select dist_code, dist_name, newno, newrevolving,  newsc, newst, newother, newtotal, newwomen,  newthrift, newbimayogana, newfederated, oldno,  oldrevolving, oldsc, oldst, oldother, oldtotal, oldwomen, oldthrift,oldbimayogana, oldfederated,coalesce(newno,0)+coalesce(oldno,0) as totno, coalesce(newrevolving,0)+coalesce(oldrevolving,0) as totrevolving,coalesce(newsc,0)+coalesce(oldsc,0) as totsc, coalesce(newst,0)+coalesce(oldst,0)  as totst, coalesce(newother,0)+coalesce(oldother,0)  as totother, coalesce(newtotal,0)+coalesce(oldtotal,0) as tottotal,coalesce(newwomen,0)+coalesce(oldwomen,0)  totwomen, coalesce(newthrift,0)+coalesce(oldthrift,0) totthrift, coalesce(newbimayogana,0)+coalesce(oldbimayogana)  as totbimayogana, coalesce(newfederated,0)+coalesce(oldfederated,0)  as totfederated from (select d.dcode as dist_code, d.dist_name,cast((select sum(totalno) from iwmp_m_project p, shg_main main where main.proj_id = p.proj_id and p.dcode = d.dcode and main.status ='C' and main.group_type = 'newSHG' )as integer) as newno, a.* from (select dcode,  cast(sum(revolving_amount) as integer) as newrevolving,cast (sum(sc)as integer) as newsc, cast(sum(st)as integer) as newst, cast(sum(other)as integer) as newother,cast(sum(sc+st+other)as integer) as newtotal,cast(sum(women)as integer) as newwomen, cast(sum(case when thrift_credit is true then 1 else 0 end)as integer) as newthrift,cast(sum(pm_bima_yogana)as integer) as newbimayogana, cast (sum(case when federated is true then 1 else 0 end)as integer) as newfederated from shg_detail sd ,shg_main ism, iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and  ism.group_type='newSHG' and ism.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code =:stcd order by dist_name)as new join (select d.dcode as dcode1,dist_name as distname1,cast((select sum(totalno) from iwmp_m_project p, shg_main main where main.proj_id = p.proj_id and p.dcode = d.dcode and main.status ='C' and main.group_type = 'oldSHG' )as integer) as oldno, a.* from(select dcode, cast(sum(revolving_amount)as integer) as oldrevolving, cast(sum(sc)as integer) as oldsc,cast (sum(st)as integer) as oldst, cast (sum(other)as integer) as oldother, cast(sum(sc+st+other)as integer) as oldtotal, cast(sum(women)as integer) as oldwomen, cast( sum(case when thrift_credit is true then 1 else 0 end)as integer) as oldthrift, cast(sum(pm_bima_yogana)as integer) as oldbimayogana, cast (sum(case when federated is true then 1 else 0 end)as integer) as oldfederated from shg_detail sd ,shg_main ism,  iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and  ism.group_type='oldSHG' and ism.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where  d.st_code=:stcd order by dist_name)as old on new.dist_code=old.dcode1 order by dist_name
#getSelfHelpCreatedExistListDist=select d.dist_code, d.dist_name, cast(sum(newno) as integer) newno, cast(sum(newsc) as integer) newsc, cast(sum(newst) as integer) newst, cast(sum(newother) as integer) newother, cast(sum(newtotal) as integer) newtotal, cast(sum(newwomen) as integer) newwomen, cast(sum(newbimayogana) as integer) newbimayogana, cast(sum(newfederated) as integer) newfederated, cast(sum(oldno) as integer) oldno, cast(sum(oldsc) as integer) oldsc, cast(sum(oldst) as integer) oldst, cast(sum(oldother) as integer) oldother, cast(sum(oldtotal) as integer) oldtotal, cast(sum(oldwomen) as integer) oldwomen, cast(sum(oldbimayogana) as integer) oldbimayogana, cast(sum(oldfederated) as integer) oldfederated, cast(sum(totno) as integer) totno, cast(sum(totsc) as integer) totsc, cast(sum(totst) as integer) totst, cast(sum(totother) as integer) totother, cast(sum(tottotal) as integer) tottotal, cast(sum(totwomen) as integer) totwomen, cast(sum(totbimayogana) as integer) totbimayogana, cast(sum(totfederated) as integer) totfederated from (select * from (( select proj_id projectid, sum(totalno) as newno, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newsc, (select sum(st) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newwomen, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newfederated from shg_main sm where sm.group_type='newSHG' and sm.status='C' group by proj_id)as new  full join (select proj_id, sum(totalno) as oldno, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldwomen, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldfederated from shg_main sm where sm.group_type='oldSHG' and sm.status='C' group by proj_id) as old  on new.projectid=old.proj_id) as comb full join (select proj_id pj, sum(totalno) as totno, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') tottotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totwomen, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totfederated from shg_main sm where sm.group_type in('newSHG', 'oldSHG') and sm.status='C'  group by proj_id) as total on comb.proj_id=total.pj ) as wer, iwmp_m_project p, iwmp_district d, iwmp_state s where wer.proj_id=p.proj_id and p.dcode=d.dcode and d.st_code=s.st_code and d.st_code=:stcd  group by d.dist_name, d.dist_code order by d.dist_name
getSelfHelpCreatedExistListDist=select dist_code, dist_name, coalesce(newno,0) as newno, coalesce(newrevolving,0) as newrevolving, coalesce(newsc,0) as newsc, coalesce(newst,0) as newst, coalesce(newother,0) as newother, coalesce(newtotal,0) as newtotal, coalesce(newwomen,0) as newwomen, coalesce(newthrift,0) as newthrift, coalesce(newbimayogana,0) as newbimayogana, coalesce(newfederated,0) as newfederated, coalesce(oldno,0) as oldno, coalesce(oldrevolving,0) oldrevolving, coalesce(oldsc,0) as oldsc, coalesce(oldst,0) as oldst, coalesce(oldother,0) as oldother, coalesce(oldtotal,0) as oldtotal, coalesce(oldwomen,0) as oldwomen, coalesce(oldthrift,0) as oldthrift, coalesce(oldbimayogana, 0) as oldbimayogana, coalesce(oldfederated,0) as oldfederated, coalesce(newno,0)+coalesce(oldno,0) as totno, coalesce(newrevolving,0)+coalesce(oldrevolving,0) as totrevolving,coalesce(newsc,0)+coalesce(oldsc,0) as totsc, coalesce(newst,0)+coalesce(oldst,0)  as totst, coalesce(newother,0)+coalesce(oldother,0)  as totother, coalesce(newtotal,0)+coalesce(oldtotal,0) as tottotal,coalesce(newwomen,0)+coalesce(oldwomen,0)  totwomen, coalesce(newthrift,0)+coalesce(oldthrift,0) totthrift, coalesce(newbimayogana,0)+coalesce(oldbimayogana, 0)  as totbimayogana, coalesce(newfederated,0)+coalesce(oldfederated,0)  as totfederated from (select d.dcode as dist_code, d.dist_name,cast((select count(sd.name) from iwmp_m_project p, shg_main main, shg_detail sd where sd.shg_id=main.shg_id and main.proj_id = p.proj_id and p.dcode = d.dcode and main.status ='C' and main.group_type = 'newSHG' )as integer) as newno, a.* from (select dcode,cast(sum(revolving_amount) as integer) as newrevolving,cast (sum(sc)as integer) as newsc,cast(sum(st)as integer) as newst,cast(sum(other)as integer) as newother,cast(sum(sc+st+other)as integer) as newtotal,cast(sum(women)as integer) as newwomen, cast(sum(case when thrift_credit is true then 1 else 0 end)as integer) as newthrift,cast(sum(pm_bima_yogana)as integer) as newbimayogana, cast (sum(case when federated is true then 1 else 0 end)as integer) as newfederated from shg_detail sd ,shg_main ism, iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and  ism.group_type='newSHG' and ism.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code =:stcd and d.dist_proj=true order by dist_name)as new join (select d.dcode as dcode1,dist_name as distname1,cast((select count(sd.name) from iwmp_m_project p, shg_main main , shg_detail sd where sd.shg_id=main.shg_id and main.proj_id = p.proj_id and p.dcode = d.dcode and main.status ='C' and main.group_type = 'oldSHG' )as integer) as oldno, a.* from(select dcode, cast(sum(revolving_amount)as integer) as oldrevolving, cast(sum(sc)as integer) as oldsc,cast (sum(st)as integer) as oldst, cast (sum(other)as integer) as oldother, cast(sum(sc+st+other)as integer) as oldtotal, cast(sum(women)as integer) as oldwomen, cast( sum(case when thrift_credit is true then 1 else 0 end)as integer) as oldthrift, cast(sum(pm_bima_yogana)as integer) as oldbimayogana, cast (sum(case when federated is true then 1 else 0 end)as integer) as oldfederated from shg_detail sd ,shg_main ism,  iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and  ism.group_type='oldSHG' and ism.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where  d.st_code=:stcd and d.dist_proj=true order by dist_name)as old on new.dist_code=old.dcode1 order by dist_name

#getSelfHelpCreatedExistListProject=select p.proj_id, p.proj_name, cast(sum(newno) as integer) newno, cast(sum(newrevolving) as integer) newrevolving, cast(sum(newsc) as integer) newsc, cast(sum(newst) as integer) newst, cast(sum(newother) as integer) newother, cast(sum(newtotal) as integer) newtotal, cast(sum(newwomen) as integer) newwomen, cast(sum(newthrift) as integer) newthrift, cast(sum(newbimayogana) as integer) newbimayogana, cast(sum(newfederated) as integer) newfederated, cast(sum(oldno) as integer) oldno, cast(sum(oldrevolving) as integer) oldrevolving, cast(sum(oldsc) as integer) oldsc, cast(sum(oldst) as integer) oldst, cast(sum(oldother) as integer) oldother, cast(sum(oldtotal) as integer) oldtotal, cast(sum(oldwomen) as integer) oldwomen, cast(sum(oldthrift) as integer) oldthrift, cast(sum(oldbimayogana) as integer) oldbimayogana, cast(sum(oldfederated) as integer) oldfederated, cast(sum(totno) as integer) totno, cast(sum(totrevolving) as integer) totrevolving, cast(sum(totsc) as integer) totsc, cast(sum(totst) as integer) totst, cast(sum(totother) as integer) totother, cast(sum(tottotal) as integer) tottotal, cast(sum(totwomen) as integer) totwomen, cast(sum(totthrift) as integer) totthrift, cast(sum(totbimayogana) as integer) totbimayogana, cast(sum(totfederated) as integer) totfederated from  (select * from (( select proj_id projectid, sum(totalno) as newno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newsc, (select sum(st) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newfederated from shg_main sm where sm.group_type='newSHG' and sm.status='C' group by proj_id)as new full join (select proj_id, sum(totalno) as oldno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldfederated from shg_main sm where sm.group_type='oldSHG' and sm.status='C' group by proj_id) as old  on new.projectid=old.proj_id) as comb  full join (select proj_id pj, sum(totalno) as totno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') tottotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totfederated from shg_main sm where sm.group_type in('newSHG', 'oldSHG') and sm.status='C'  group by proj_id) as total on comb.proj_id=total.pj ) as wer, iwmp_m_project p, iwmp_district d, iwmp_state s where wer.proj_id=p.proj_id and p.dcode=d.dcode and d.st_code=s.st_code and p.dcode=:distcd group by p.proj_id, p.proj_name order by p.proj_name
#getSelfHelpCreatedExistListProject=select p.proj_id, p.proj_name, cast(sum(newno) as integer) newno, cast(sum(newsc) as integer) newsc, cast(sum(newst) as integer) newst, cast(sum(newother) as integer) newother, cast(sum(newtotal) as integer) newtotal, cast(sum(newwomen) as integer) newwomen, cast(sum(newbimayogana) as integer) newbimayogana, cast(sum(newfederated) as integer) newfederated, cast(sum(oldno) as integer) oldno, cast(sum(oldsc) as integer) oldsc, cast(sum(oldst) as integer) oldst, cast(sum(oldother) as integer) oldother, cast(sum(oldtotal) as integer) oldtotal, cast(sum(oldwomen) as integer) oldwomen, cast(sum(oldbimayogana) as integer) oldbimayogana, cast(sum(oldfederated) as integer) oldfederated, cast(sum(totno) as integer) totno, cast(sum(totsc) as integer) totsc, cast(sum(totst) as integer) totst, cast(sum(totother) as integer) totother, cast(sum(tottotal) as integer) tottotal, cast(sum(totwomen) as integer) totwomen, cast(sum(totbimayogana) as integer) totbimayogana, cast(sum(totfederated) as integer) totfederated from (select * from (( select proj_id projectid, sum(totalno) as newno, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newsc, (select sum(st) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newwomen, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newfederated from shg_main sm where sm.group_type='newSHG' and sm.status='C' group by proj_id)as new  full join (select proj_id, sum(totalno) as oldno, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldwomen, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldfederated from shg_main sm where sm.group_type='oldSHG' and sm.status='C' group by proj_id) as old  on new.projectid=old.proj_id) as comb full join (select proj_id pj, sum(totalno) as totno, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') tottotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totwomen, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totfederated from shg_main sm where sm.group_type in('newSHG', 'oldSHG') and sm.status='C'  group by proj_id) as total on comb.proj_id=total.pj ) as wer, iwmp_m_project p, iwmp_district d, iwmp_state s where wer.proj_id=p.proj_id and p.dcode=d.dcode and d.st_code=s.st_code and p.dcode=:distcd group by p.proj_id, p.proj_name order by p.proj_name
#getSelfHelpCreatedExistListProject=select p.proj_id, p.proj_name, coalesce(cast(sum(newno) as integer), 0) as newno, coalesce(cast(sum(newrevolving) as integer), 0) as newrevolving, coalesce(cast(sum(newsc) as integer),0) as newsc, coalesce(cast(sum(newst) as integer), 0) as newst, coalesce(cast(sum(newother) as integer), 0) as newother, coalesce(cast(sum(newtotal) as integer), 0) as newtotal, coalesce(cast(sum(newwomen) as integer), 0) as newwomen, coalesce(cast(sum(newthrift) as integer), 0) as newthrift, coalesce(cast(sum(newbimayogana) as integer), 0) as newbimayogana, coalesce(cast(sum(newfederated) as integer), 0) as newfederated, coalesce(cast(sum(oldno) as integer), 0) as oldno, coalesce(cast(sum(oldrevolving) as integer), 0) as oldrevolving, coalesce(cast(sum(oldsc) as integer), 0) as oldsc, coalesce(cast(sum(oldst) as integer), 0) as oldst, coalesce(cast(sum(oldother) as integer),0) as oldother, coalesce(cast(sum(oldtotal) as integer),0) as oldtotal, coalesce(cast(sum(oldwomen) as integer),0) as oldwomen, coalesce(cast(sum(oldthrift) as integer), 0) as oldthrift, coalesce(cast(sum(oldbimayogana) as integer), 0) as oldbimayogana, coalesce(cast(sum(oldfederated) as integer), 0) as oldfederated, coalesce(cast(sum(totno) as integer), 0) as totno, coalesce(cast(sum(totrevolving) as integer), 0) as totrevolving, coalesce(cast(sum(totsc) as integer), 0) as totsc, coalesce(cast(sum(totst) as integer), 0) as totst, coalesce(cast(sum(totother) as integer), 0) as totother, coalesce(cast(sum(tottotal) as integer), 0) as tottotal, coalesce(cast(sum(totwomen) as integer), 0) as totwomen, coalesce(cast(sum(totthrift) as integer), 0) as totthrift, coalesce(cast(sum(totbimayogana) as integer), 0) as totbimayogana, coalesce(cast(sum(totfederated) as integer), 0) as totfederated  from  (select * from (( select proj_id projectid, sum(totalno) as newno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newsc, (select sum(st) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='newSHG' and ism.status='C') newfederated from shg_main sm where sm.group_type='newSHG' and sm.status='C' group by proj_id)as new full join (select proj_id, sum(totalno) as oldno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='oldSHG' and ism.status='C') oldfederated from shg_main sm where sm.group_type='oldSHG' and sm.status='C' group by proj_id) as old  on new.projectid=old.proj_id) as comb  full join (select proj_id pj, sum(totalno) as totno, (select sum(revolving_amount) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totrevolving, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totsc, (select sum(st) from shg_detail sd,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') tottotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totwomen, (select sum(case when thrift_credit is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totthrift, (select sum(pm_bima_yogana) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totbimayogana, (select sum(case when federated is true then 1 else 0 end) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type in('newSHG', 'oldSHG') and ism.status='C') totfederated from shg_main sm where sm.group_type in('newSHG', 'oldSHG') and sm.status='C'  group by proj_id) as total on comb.proj_id=total.pj ) as wer, iwmp_m_project p, iwmp_district d, iwmp_state s where wer.proj_id=p.proj_id and p.dcode=d.dcode and d.st_code=s.st_code and p.dcode=:distcd group by p.proj_id, p.proj_name order by p.proj_name
getSelfHelpCreatedExistListProject=With Total as (select proj_id, count(CASE WHEN sm.group_type = 'newSHG' AND sm.status = 'C' THEN sm.totalno ELSE null END) AS newno, count(CASE WHEN sm.group_type = 'oldSHG' AND sm.status = 'C' THEN sm.totalno ELSE null END) AS oldno, count(CASE WHEN sm.group_type in('newSHG', 'oldSHG') AND sm.status = 'C' THEN sm.totalno ELSE null END) AS totno from shg_main sm join shg_detail sd on sd.shg_id=sm.shg_id group by proj_id), Calculated as (select proj_id, SUM(CASE WHEN sm.group_type = 'newSHG' THEN sd.revolving_amount ELSE 0 END) AS newrevolving, SUM(CASE WHEN sm.group_type = 'newSHG' THEN sd.sc ELSE 0 END) AS newsc, SUM(CASE WHEN sm.group_type = 'newSHG' THEN sd.st ELSE 0 END) AS newst, SUM(CASE WHEN sm.group_type = 'newSHG' THEN sd.other ELSE 0 END) AS newother, SUM(CASE WHEN sm.group_type = 'newSHG' THEN sd.sc + sd.st + sd.other ELSE 0 END) AS newtotal,  SUM(CASE WHEN sm.group_type = 'newSHG' THEN sd.women ELSE 0 END) AS newwomen, SUM(CASE WHEN sm.group_type = 'newSHG' AND sd.thrift_credit THEN 1 ELSE 0 END) AS newthrift, SUM(CASE WHEN sm.group_type = 'newSHG' THEN sd.pm_bima_yogana ELSE 0 END) AS newbimayogana, SUM(CASE WHEN sm.group_type = 'newSHG' AND sd.federated THEN 1 ELSE 0 END) AS newfederated, SUM(CASE WHEN sm.group_type = 'oldSHG' THEN sd.revolving_amount ELSE 0 END) AS oldrevolving, SUM(CASE WHEN sm.group_type = 'oldSHG' THEN sd.sc ELSE 0 END) AS oldsc, SUM(CASE WHEN sm.group_type = 'oldSHG' THEN sd.st ELSE 0 END) AS oldst, SUM(CASE WHEN sm.group_type = 'oldSHG' THEN sd.other ELSE 0 END) AS oldother, SUM(CASE WHEN sm.group_type = 'oldSHG' THEN sd.sc + sd.st + sd.other ELSE 0 END) AS oldtotal, SUM(CASE WHEN sm.group_type = 'oldSHG' THEN sd.women ELSE 0 END) AS oldwomen, SUM(CASE WHEN sm.group_type = 'oldSHG' AND sd.thrift_credit THEN 1 ELSE 0 END) AS oldthrift, SUM(CASE WHEN sm.group_type = 'oldSHG' THEN sd.pm_bima_yogana ELSE 0 END) AS oldbimayogana, SUM(CASE WHEN sm.group_type = 'oldSHG' AND sd.federated THEN 1 ELSE 0 END) AS oldfederated, SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') THEN sd.revolving_amount ELSE 0 END) AS totrevolving, SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') THEN sd.sc ELSE 0 END) AS totsc,SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') THEN sd.st ELSE 0 END) AS totst, SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') THEN sd.other ELSE 0 END) AS totother, SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') THEN sd.sc + sd.st + sd.other ELSE 0 END) AS tottotal, SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') THEN sd.women ELSE 0 END) AS totwomen, SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') AND sd.thrift_credit THEN 1 ELSE 0 END) AS totthrift, SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') THEN sd.pm_bima_yogana ELSE 0 END) AS totbimayogana, SUM(CASE WHEN sm.group_type in('newSHG', 'oldSHG') AND sd.federated THEN 1 ELSE 0 END) AS totfederated from shg_main sm join shg_detail sd ON sm.shg_id = sd.shg_id AND sm.status = 'C' group by proj_id) Select p.proj_id, proj_name, cast(COALESCE(t.newno, 0) as Integer) as newno, cast(COALESCE(c.newrevolving, 0) as Integer) as newrevolving, cast(COALESCE(c.newsc, 0) as Integer) as newsc, cast(COALESCE(c.newst, 0) as Integer) as newst,cast(COALESCE(c.newother, 0) as Integer) as newother, cast(COALESCE(c.newtotal, 0) as Integer) as newtotal, cast(COALESCE(c.newwomen, 0) as Integer) as newwomen, cast(COALESCE(c.newthrift, 0) as Integer) as newthrift, cast(COALESCE(c.newbimayogana, 0) as Integer) as newbimayogana, cast(COALESCE(c.newfederated, 0) as Integer) as newfederated, cast(COALESCE(t.oldno, 0) as Integer) as oldno,cast(COALESCE(c.oldrevolving, 0) as Integer) as oldrevolving, cast(COALESCE(c.oldsc, 0) as Integer) as oldsc, cast(COALESCE(c.oldst, 0) as Integer) as oldst, cast(COALESCE(c.oldother, 0) as Integer) as oldother, cast(COALESCE(c.oldtotal, 0) as Integer) as oldtotal, cast(COALESCE(c.oldwomen, 0) as Integer) as oldwomen, cast(COALESCE(c.oldthrift, 0) as Integer) as oldthrift, cast(COALESCE(c.oldbimayogana, 0) as Integer) as oldbimayogana, cast(COALESCE(c.oldfederated, 0) as Integer) as oldfederated, cast(COALESCE(t.totno, 0) as Integer) as totno, cast(COALESCE(c.totrevolving, 0) as Integer) as totrevolving, cast(COALESCE(c.totsc, 0) as Integer) as totsc, cast(COALESCE(c.totst, 0) as Integer) as totst, cast(COALESCE(c.totother, 0) as Integer) as totother, cast(COALESCE(c.tottotal, 0) as Integer) as tottotal, cast(COALESCE(c.totwomen, 0) as Integer) as totwomen, cast(COALESCE(c.totthrift, 0) as Integer) as totthrift, cast(COALESCE(c.totbimayogana, 0) as Integer) as totbimayogana, cast(COALESCE(c.totfederated, 0) as Integer) as totfederated FROM iwmp_m_project p JOIN Total t ON t.proj_id = p.proj_id JOIN Calculated c ON c.proj_id = p.proj_id WHERE p.dcode =:distcd GROUP BY p.proj_id, proj_name, t.newno, c.newrevolving, c.newsc, c.newst, c.newother, c.newtotal, c.newwomen, c.newthrift, c.newbimayogana, c.newfederated, t.oldno, c.oldrevolving, c.oldsc, c.oldst, c.oldother, c.oldtotal, c.oldwomen, c.oldthrift, c.oldbimayogana, c.oldfederated, t.totno, c.totrevolving, c.totsc, c.totst, c.totother, c.tottotal, c.totwomen, c.totthrift, c.totbimayogana, c.totfederated

getSelfHelpUserGroupList=select stcode as st_code, stname as st_name, COALESCE(newno, 0) as newno, COALESCE(newsc, 0) as newsc, COALESCE(newst, 0) as newst, COALESCE(newother, 0) as newother, COALESCE(newtotal, 0) as newtotal, COALESCE(newwomen, 0) as newwomen from(select s.st_code as stcode, s.st_name as stname,cast((select sum(totalno) from iwmp_district d, iwmp_m_project p, shg_main main where main.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code = s.st_code and main.status ='C' and main.group_type = 'group' )as integer) as newno, a.* from (select st_code,  cast (sum(sc)as integer) as newsc, cast(sum(st)as integer) as newst, cast(sum(other)as integer) as newother,cast(sum(sc+st+other)as integer) as newtotal,cast(sum(women)as integer) as newwomen from shg_detail sd ,shg_main ism, iwmp_district d, iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and p.dcode= d.dcode and ism.group_type='group' and ism.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name)as new join (select s.st_code as stcode1,st_name as stname1,cast((select sum(totalno) from iwmp_district d, iwmp_m_project p, shg_main  main where main.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code = s.st_code and main.status ='C' and main.group_type = 'group' )as integer) as oldno, a.* from (select st_code from shg_detail sd ,shg_main ism, iwmp_district d, iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and p.dcode= d.dcode and ism.group_type='group' and ism.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where s.st_code=(case when :stcd = 0 then s.st_code else :stcd end) and wdcpmksy=1 order by st_name) as old  on new.stcode=old.stcode1 order by stname
#getSelfHelpUserGroupListDist=select d.dcode as dist_code, d.dist_name ,cast((select sum(totalno) from iwmp_m_project p, shg_main main where main.proj_id = p.proj_id and p.dcode = d.dcode and main.status ='C' and main.group_type = 'group' )as integer) as newno, a.* from (select dcode,  coalesce (cast (sum(sc)as integer),0) as newsc, cast(sum(st)as integer) as newst, cast(sum(other)as integer) as newother,cast(sum(sc+st+other)as integer) as newtotal,cast(sum(women)as integer) as newwomen from shg_detail sd ,shg_main ism, iwmp_m_project p where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and ism.group_type='group' and ism.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where  d.st_code=:stcd order by dist_name
getSelfHelpUserGroupListDist=select d.dcode as dist_code, d.dist_name, COALESCE(cast((select sum(totalno) from iwmp_m_project p, shg_main main where main.proj_id = p.proj_id and p.dcode = d.dcode and main.status ='C' and main.group_type = 'group' )as integer), 0) as newno, COALESCE(newsc, 0) as newsc, COALESCE(newst, 0) as newst, COALESCE(newother, 0) as newother, COALESCE(newtotal, 0) as newtotal, COALESCE(newwomen, 0) as newwomen  from (select dcode,  coalesce (cast (sum(sc)as integer),0) as newsc, cast(sum(st)as integer) as newst, cast(sum(other)as integer) as newother, cast(sum(sc+st+other)as integer) as newtotal,cast(sum(women)as integer) as newwomen from shg_detail sd ,shg_main ism, iwmp_m_project p  where sd.shg_id=ism.shg_id and ism.proj_id=p.proj_id and ism.group_type='group' and ism.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where  d.st_code=:stcd and d.dist_proj=true order by dist_name
getSelfHelpUserGroupListProject=select p.proj_id, p.proj_name, coalesce(cast(sum(newno) as integer), 0) as newno, coalesce(cast(sum(newsc) as integer), 0) as newsc, coalesce(cast(sum(newst) as integer), 0) as newst, coalesce(cast(sum(newother) as integer), 0) as newother, coalesce(cast(sum(newtotal) as integer), 0) newtotal, coalesce(cast(sum(newwomen) as integer), 0) as newwomen  from ( select proj_id , sum(totalno) as newno, (select sum(sc) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='group' and ism.status='C') newsc, (select sum(st) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='group' and ism.status='C') newst, (select sum(other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='group' and ism.status='C') newother, (select sum(sc+st+other) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='group' and ism.status='C') newtotal, (select sum(women) from shg_detail sd ,shg_main ism where sd.shg_id=ism.shg_id and ism.proj_id=sm.proj_id and ism.group_type='group' and ism.status='C') newwomen from shg_main sm where sm.group_type='group' and sm.status='C' group by proj_id ) as wer, iwmp_m_project p, iwmp_district d, iwmp_state s where wer.proj_id=p.proj_id and p.dcode=d.dcode and d.st_code=s.st_code and p.dcode=:distcd group by p.proj_id, p.proj_name order by p.proj_name
#getSelfHelpCreatedNEWshg=select m.shg_id, proj_id, group_type, totalno, d.name, sc, st, other, women, string_agg((select shg_coreactivity_desc from m_shg_coreactivity where shg_coreactivity_id=cd.shg_coreactivity_id),', ' ) as coreactivity, avg_turnover, avg_income, pm_bima_yogana, (case when  d.federated is true then 'Yes' else 'No' end) as federated from shg_detail d, shg_main m, shg_coreactivity_detail cd where m.shg_id=d.shg_id and d.shg_detail_id=cd.shg_detail_id and m.group_type='newSHG' and m.status='C' and m.proj_id=:projcd group by m.shg_id, proj_id, group_type, totalno,  d.name, sc, st, other, women, avg_turnover, avg_income, pm_bima_yogana, d.federated
getSelfHelpCreatedNEWshg=select m.shg_id, proj_id, group_type, totalno, d.name, sc, st, other, women, string_agg((select shg_coreactivity_desc from m_shg_coreactivity where shg_coreactivity_id=cd.shg_coreactivity_id),', ' ) as coreactivity, COALESCE(avg_turnover,0) as avg_turnover , avg_income, pm_bima_yogana, (case when  d.federated is true then 'Yes' else 'No' end) as federated, d.department_scheme_id, (select scheme_description from m_department_scheme where department_scheme_id_pk=d.department_scheme_id) as schemename, revolving_amount, to_char(d.reg_date, 'DD/MM/YYYY') as reg_date, (case when  d.thrift_credit is true then 'Yes' else 'No' end) as thrift  from shg_detail d, shg_main m, shg_coreactivity_detail cd where m.shg_id=d.shg_id and d.shg_detail_id=cd.shg_detail_id and m.group_type='newSHG' and m.status='C' and m.proj_id=:projcd group by m.shg_id, proj_id, group_type, totalno,  d.name, sc, st, other, women, avg_turnover, avg_income, pm_bima_yogana, d.federated, department_scheme_id, revolving_amount, reg_date, thrift_credit
getSelfHelpExistedOLDshg=select m.shg_id, proj_id, group_type, totalno, d.name, sc, st, other, women, string_agg((select shg_coreactivity_desc from m_shg_coreactivity where shg_coreactivity_id=cd.shg_coreactivity_id),', ' ) as coreactivity, COALESCE(avg_turnover,0) as avg_turnover , avg_income, pm_bima_yogana, (case when  d.federated is true then 'Yes' else 'No' end) as federated, d.department_scheme_id, (select scheme_description from m_department_scheme where department_scheme_id_pk=d.department_scheme_id) as schemename, revolving_amount, to_char(d.reg_date, 'DD/MM/YYYY') as reg_date, (case when  d.thrift_credit is true then 'Yes' else 'No' end) as thrift  from shg_detail d, shg_main m, shg_coreactivity_detail cd where m.shg_id=d.shg_id and d.shg_detail_id=cd.shg_detail_id and m.group_type='oldSHG' and m.status='C' and m.proj_id=:projcd group by m.shg_id, proj_id, group_type, totalno,  d.name, sc, st, other, women, avg_turnover, avg_income, pm_bima_yogana, d.federated, department_scheme_id, revolving_amount, reg_date, thrift_credit
#getSelfHelpExistedOLDshg=select m.shg_id, proj_id, group_type, totalno, d.name, sc, st, other, women, string_agg((select shg_coreactivity_desc from m_shg_coreactivity where shg_coreactivity_id=cd.shg_coreactivity_id),', ' ) as coreactivity, avg_turnover, avg_income, pm_bima_yogana, (case when  d.federated is true then 'Yes' else 'No' end) as federated from shg_detail d, shg_main m, shg_coreactivity_detail cd where m.shg_id=d.shg_id and d.shg_detail_id=cd.shg_detail_id and m.group_type='oldSHG' and m.status='C' and m.proj_id=:projcd group by m.shg_id, proj_id, group_type, totalno,  d.name, sc, st, other, women, avg_turnover, avg_income, pm_bima_yogana, d.federated
getSelfHelpCreateduserGroup=select m.shg_id, proj_id, group_type, totalno, d.name, sc, st, other, women from shg_detail d, shg_main m where m.shg_id=d.shg_id and m.group_type='group' and m.status='C' and m.proj_id=:projcd group by m.shg_id, proj_id, group_type, totalno, d.name, sc, st, other, women

gettrainingsubactivity = from MTrainingSubject order by trainingSubId
getlivelihoodidactivity = from MLivelihoodCoreactivity where livelihoodCoreactivityId = :id
getproductionidactivity = from MProductivityCoreactivity where productivityCoreactivityId = :id
getepaidactivity = from MEpaCoreactivity where epaActivityId = :id
getfpoidactivity = from MFpoCoreactivity where fpoCoreactivityId = :id
getshgidactivity = from MShgCoreactivity where shgCoreactivityId = :id
gettrainingidactivity = from MTrainingSubject where trainingSubId = :id
findProjectPrepare=from IwmpMProjectPrepare where projectMprepareId=:id

#Query for Asset Report
getSubActivity = select subActivityCode, subActivityDesc from IwmpMPhySubactivity where iwmpMPhyActivity.activityCode=(case when 0<:activityId then :activityId else iwmpMPhyActivity.activityCode end )
#getAssetReport = from IwmpProjectPhysicalAsset where iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode=(case when 0<:stCode then :stCode else iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode end) and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=(case when 0<:dCode then :dCode else iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode end) and iwmpMProject.projectId=(case when 0<:projId then :projId else iwmpMProject.projectId end) and iwmpMFinYear.finYrCd=(case when 0<:fyCode then :fyCode else iwmpMFinYear.finYrCd end) and iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when 0<:headCode then :headCode else iwmpMPhyActivity.iwmpMPhyHeads.headCode end) and iwmpMPhyActivity.activityCode=(case when 0<:activityCode then :activityCode else iwmpMPhyActivity.activityCode end)
getAssetReport = from IwmpProjectPhysicalAsset where status='C' and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode=(case when 0=:stCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode else :stCode end) and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=(case when 0=:dCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode else :dCode end) and iwmpMProject.projectId=(case when 0=:projId then iwmpMProject.projectId else :projId end) and iwmpMFinYear.finYrCd=(case when 0=:fyCode then iwmpMFinYear.finYrCd else :fyCode end) and iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when 0=:headCode then iwmpMPhyActivity.iwmpMPhyHeads.headCode else :headCode end) and iwmpMPhyActivity.activityCode=(case when 0=:activityCode then iwmpMPhyActivity.activityCode else :activityCode end) order by iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName, iwmpMProject.projName, iwmpMPhyActivity.iwmpMPhyHeads.seqNo, iwmpMPhyActivity.seqNo

getAssetReportForclosed =from IwmpProjectPhysicalAsset where status='C' and assetid in(select iwmpProjectPhysicalAsset.assetid from IwmpProjectAssetStatus where status='F') and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode=(case when 0=:stCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode else :stCode end) and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=(case when 0=:dCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode else :dCode end) and iwmpMProject.projectId=(case when 0=:projId then iwmpMProject.projectId else :projId end) and iwmpMFinYear.finYrCd=(case when 0=:fyCode then iwmpMFinYear.finYrCd else :fyCode end) and iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when 0=:headCode then iwmpMPhyActivity.iwmpMPhyHeads.headCode else :headCode end) and iwmpMPhyActivity.activityCode=(case when 0=:activityCode then iwmpMPhyActivity.activityCode else :activityCode end) order by iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName, iwmpMProject.projName, iwmpMPhyActivity.iwmpMPhyHeads.seqNo, iwmpMPhyActivity.seqNo 
getAssetReportCompleted =from IwmpProjectPhysicalAsset where status='C' and assetid in(select iwmpProjectPhysicalAsset.assetid from IwmpProjectAssetStatus where status='C') and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode=(case when 0=:stCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode else :stCode end) and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=(case when 0=:dCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode else :dCode end) and iwmpMProject.projectId=(case when 0=:projId then iwmpMProject.projectId else :projId end) and iwmpMFinYear.finYrCd=(case when 0=:fyCode then iwmpMFinYear.finYrCd else :fyCode end) and iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when 0=:headCode then iwmpMPhyActivity.iwmpMPhyHeads.headCode else :headCode end) and iwmpMPhyActivity.activityCode=(case when 0=:activityCode then iwmpMPhyActivity.activityCode else :activityCode end) order by iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName, iwmpMProject.projName, iwmpMPhyActivity.iwmpMPhyHeads.seqNo, iwmpMPhyActivity.seqNo
#getAssetReportCompleted =from IwmpProjectPhysicalAsset where status='C' and assetid in(select iwmpProjectPhysicalAsset.assetid from IwmpProjectAssetStatus where status='C' and completiondate between :date1 and :date2) and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode=(case when 0=:stCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode else :stCode end) and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=(case when 0=:dCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode else :dCode end) and iwmpMProject.projectId=(case when 0=:projId then iwmpMProject.projectId else :projId end) and iwmpMFinYear.finYrCd=(case when 0=:fyCode then iwmpMFinYear.finYrCd else :fyCode end) and iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when 0=:headCode then iwmpMPhyActivity.iwmpMPhyHeads.headCode else :headCode end) and iwmpMPhyActivity.activityCode=(case when 0=:activityCode then iwmpMPhyActivity.activityCode else :activityCode end) order by iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName, iwmpMProject.projName, iwmpMPhyActivity.iwmpMPhyHeads.seqNo, iwmpMPhyActivity.seqNo
getAssetReportOngoing =from IwmpProjectPhysicalAsset where status='C' and assetid in(select iwmpProjectPhysicalAsset.assetid from IwmpProjectAssetStatus where status='O') and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode=(case when 0=:stCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode else :stCode end) and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=(case when 0=:dCode then iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode else :dCode end) and iwmpMProject.projectId=(case when 0=:projId then iwmpMProject.projectId else :projId end) and iwmpMFinYear.finYrCd=(case when 0=:fyCode then iwmpMFinYear.finYrCd else :fyCode end) and iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when 0=:headCode then iwmpMPhyActivity.iwmpMPhyHeads.headCode else :headCode end) and iwmpMPhyActivity.activityCode=(case when 0=:activityCode then iwmpMPhyActivity.activityCode else :activityCode end) order by iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName, iwmpMProject.projName, iwmpMPhyActivity.iwmpMPhyHeads.seqNo, iwmpMPhyActivity.seqNo

getAssetReportWithSubActivity =  from IwmpProjectPhysicalAsset where status = 'C' and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stCode=:stCode and iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode=(case when 0<:dCode then :dCode else iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.dcode end) and iwmpMProject.projectId=(case when 0<:projId then :projId else iwmpMProject.projectId end) and iwmpMFinYear.finYrCd=(case when 0<:fyCode then :fyCode else iwmpMFinYear.finYrCd end) and iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when 0<:headCode then :headCode else iwmpMPhyActivity.iwmpMPhyHeads.headCode end) and iwmpMPhyActivity.activityCode=(case when 0<:activityCode then :activityCode else iwmpMPhyActivity.activityCode end) and iwmpMPhySubactivity.subActivityCode=(case when 0<:subActivityCode then :subActivityCode else iwmpMPhySubactivity.subActivityCode end) order by iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.iwmpState.stName, iwmpVillage.iwmpGramPanchayat.iwmpBlock.iwmpDistrict.distName, iwmpMProject.projName, iwmpMPhyActivity.iwmpMPhyHeads.seqNo, iwmpMPhyActivity.seqNo

#basleline master
getbaselinetype = from MBlsOutType order by seqNo
gettypeCode = select MBlsOutTypeIdPk as MBlsOutTypeIdPk, description as  description from MBlsOutType order by seqNo

#bls outcome query
#getVillageOfProjectForBaseLine = select v.vcode as vcode , v.villageName as villageName from IwmpVillage v,IwmpProjectLocation pl where v.vcode not in (select distinct m.iwmpVillage.vcode from BlsOutMain m where m.status='C' and m.iwmpMProject.projectId=:projId)  and v.vcode=pl.iwmpVillage.vcode and pl.iwmpMProject.projectId=:projId
getVillageOfProjectForBaseLine = select v.vcode as vcode, v.village_name as villageName, gp.gram_panchayat_name as grampanchayatname from Iwmp_Village v, iwmp_gram_panchayat gp, Iwmp_Project_Location pl where v.vcode not in (select distinct m.vcode from Bls_Out_Main m where m.status='C' and m.proj_Id=:projId)  and v.gcode =gp.gcode and v.vcode=pl.vcode and pl.proj_Id=:projId and pl.status=true order by villageName
getVillageOfProjectMicro = select v.vcode as vcode, v.village_name as villageName, gp.gram_panchayat_name as grampanchayatname from Iwmp_Village v, iwmp_gram_panchayat gp, Iwmp_Project_Location pl where v.vcode in (select distinct m.vcode from Bls_Out_Main m where m.status='C' and m.proj_Id=:projId)  and v.gcode =gp.gcode and v.vcode=pl.vcode and pl.proj_Id=:projId and pl.status=true order by villageName
getVillageOfProjectForUpdateBaseLine = select v.vcode as vcode , v.villageName as villageName from IwmpVillage v,IwmpProjectLocation pl where v.vcode  in (select distinct m.iwmpVillage.vcode from BlsOutMain m where m.status='C' and m.iwmpMProject.projectId=:projId)  and v.vcode=pl.iwmpVillage.vcode and pl.iwmpMProject.projectId=:projId
#getProjectByRegIdForBaseLine = select map.iwmpMProject.projectId, map.iwmpMProject.projName from IwmpUserProjectMap map, IwmpProjectLocation pl where map.iwmpMProject.projectId=pl.iwmpMProject.projectId and map.userReg.regId=:regId and pl.status='C'
getProjectByRegIdForBaseLine = select distinct map.iwmpMProject.projectId, map.iwmpMProject.projName from IwmpUserProjectMap map, IwmpProjectLocation pl where map.iwmpMProject.projectId=pl.iwmpMProject.projectId and map.userReg.regId=:regId and pl.status='true'
getOutComeMaster = from MBlsOutcome
getProjectByRegIdForBaseLineUpdate=from IwmpUserProjectMap m where userReg.regId=:regId and m.iwmpMProject.projectId in(select iwmpMProject.projectId from BlsOutMain) order by iwmpMProject.projName asc 
getPlotForProjectVillage=from BlsOutMain where  iwmpMProject.projectId=:projectId and iwmpVillage.vcode=:vcode and status='C'
getCropDataPlotProject= from BlsOutDetailCropAchiev where blsOutDetailAchiev.blsOutMainAchiev.iwmpMProject.projectId=:projectId and blsOutDetailAchiev.blsOutMainAchiev.iwmpVillage.vcode=:vcode and status='C' and blsOutDetailAchiev.blsOutMainAchiev.plotNo=:plotNo
getAllCropDataForBlsOutDetail= from BlsOutDetailCropAchiev where  blsOutDetailAchiev.blsOutDetailIdPk=:blsOutDetailIdPk
getTotSeasonCropCount=select count(*) from BlsOutDetailCropAchiev where blsOutDetailAchiev.blsOutDetailIdPk=:blsOutDetailIdPk and coalesce(MBlsOutcomeBySeasonId.MBlsOutIdPk, '0')=:season
getSeasonCropforClsOutDetail=select count(distinct MBlsOutcomeBySeasonId.MBlsOutIdPk)  from BlsOutDetailCropAchiev where  blsOutDetailAchiev.blsOutDetailIdPk=:blsOutDetailIdPk

getbaselinedata = from MBlsOutcome order by MBlsOutType.description, MBlsOutIdPk
checkmainbs=select count(*) from bls_out_main where bls_out_main_id_pk=:main
checktransbs=select count(*) from bls_out_detail_crop where bls_out_detail_id=:detail
checkdetalbs=select count(*) from bls_out_detail where bls_out_main_id=:main

#getBaselineNewDraft=select bls_out_main_id_pk, proj_id, vcode, (select village_name from iwmp_village where vcode=m.vcode) as village_name,  plot_no, area, owner_name, irrigation_status_id, (select description from m_bls_outcome where m_bls_out_id_pk=m.irrigation_status_id) as irrigation, status, bls_out_detail_id_pk, classification_land_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.classification_land_id) as classification_land, no_of_crop_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.no_of_crop_id) as no_crop, forest_land_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.forest_land_type_id) as forest_land, bls_out_detail_tranx_id_pk, crop_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.crop_type_id) as crop_type, crop_production, avg_income, crop_area, season_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.season_id) as season, ownership_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.ownership_id) as ownership from bls_out_main m LEFT JOIN bls_out_detail d on (m.bls_out_main_id_pk=d.bls_out_main_id ) LEFT JOIN bls_out_detail_tranx dt on (d.bls_out_detail_id_pk=dt.bls_out_detail_id) where status='D' and proj_id=:project order by bls_out_main_id_pk, village_name
#added land_sub_classification in "getBaselineNewDraft" query by Yogesh
getBaselineNewDraft=select bls_out_main_id_pk, proj_id, vcode, (select village_name from iwmp_village where vcode=m.vcode) as village_name,  plot_no, area, owner_name,land_sub_classification, irrigation_status_id, (select description from m_bls_outcome where m_bls_out_id_pk=m.irrigation_status_id) as irrigation, m.status, bls_out_detail_id_pk, classification_land_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.classification_land_id) as classification_land, no_of_crop_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.no_of_crop_id) as no_crop, forest_land_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.forest_land_type_id) as forest_land, bls_out_detail_tranx_id_pk, crop_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.crop_type_id) as crop_type, crop_production, avg_income, crop_area, season_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.season_id) as season, ownership_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.ownership_id) as ownership from bls_out_main m LEFT JOIN bls_out_detail d on (m.bls_out_main_id_pk=d.bls_out_main_id ) LEFT JOIN bls_out_detail_crop dt on (d.bls_out_detail_id_pk=dt.bls_out_detail_id) where m.status='D' and proj_id= :project order by village_name, classification_land_id, bls_out_detail_id_pk, no_of_crop_id
NewBaselineMainDelete=delete from bls_out_main where bls_out_main_id_pk=:main
NewBaselineDetailDelete=delete from bls_out_detail where bls_out_detail_id_pk=:detail
NewBaselineDetailtranDelete=delete from bls_out_detail_crop where bls_out_detail_tranx_id_pk=:detailtrans
NewBaselineComplete=update bls_out_main set status='C', updated_on=now() where proj_id=:project and vcode=:vill
NewBaselineCompleteachiev=update bls_out_main_achiev set status='C', updated_on=now() where proj_id=:project and vcode=:vill
NewBaselineCompleteMainAch=insert into public.bls_out_main_achiev (bls_out_main_id_pk, proj_id, vcode, plot_no, area, irrigation_status_id, status, created_on, updated_on, request_ip, created_by) select  bls_out_main_id_pk, proj_id, vcode, plot_no, area, irrigation_status_id, status, created_on, updated_on, request_ip, created_by from bls_out_main where proj_id=:project and status='D' and vcode=:vill

NewBaselineCompleteDetailAch=insert into public.bls_out_detail_achiev (bls_out_detail_id_pk, bls_out_main_id, classification_land_id, no_of_crop_id, forest_land_type_id, ownership_id, owner_name, created_on, updated_on, request_ip, created_by, land_sub_classification) select bls_out_detail_id_pk, bls_out_main_id, classification_land_id, no_of_crop_id, forest_land_type_id, ownership_id, owner_name, created_on, updated_on, request_ip, created_by, land_sub_classification  from (select bls_out_detail_id_pk, bls_out_main_id, classification_land_id, no_of_crop_id, forest_land_type_id, ownership_id, owner_name, created_on, updated_on, request_ip, created_by, land_sub_classification from bls_out_detail where bls_out_main_id in(select bls_out_main_id_pk from bls_out_main where proj_id=:project and status='D' and vcode=:vill)) a

NewBaselineCompleteDetTransAch=insert into public.bls_out_detail_crop_achiev (bls_out_detail_crop_id_pk, bls_out_detail_id, crop_type_id, crop_production, avg_income, crop_area, season_id, created_on, updated_on, request_ip, created_by )  select bls_out_detail_tranx_id_pk, bls_out_detail_id, crop_type_id, crop_production, avg_income, crop_area, season_id, created_on, updated_on, request_ip, created_by  from bls_out_detail_crop where bls_out_detail_id in(select bls_out_detail_id_pk from bls_out_detail where  bls_out_main_id in(select bls_out_main_id_pk from bls_out_main where proj_id=:project and status='D' and vcode=:vill))		
NewBaselineCompleteachiev=update bls_out_main_achiev set status='C', updated_on=now() where proj_id=:project and vcode=:vill
findbaselinetypedata = from MBlsOutType where MBlsOutTypeIdPk = :id
deletebaselinetype = delete from MBlsOutType where MBlsOutTypeIdPk = :id
findbasedata = from MBlsOutcome where MBlsOutIdPk = :id
deletebaseline = delete from MBlsOutcome where MBlsOutIdPk = :id

#getbaselinefinaldata = select bls_out_main_id_pk, proj_id, vcode, (select village_name from iwmp_village where vcode=m.vcode) as village_name,  plot_no, area, owner_name, irrigation_status_id, (select description from m_bls_outcome where m_bls_out_id_pk=m.irrigation_status_id) as irrigation, status, bls_out_detail_id_pk, classification_land_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.classification_land_id) as classification_land, no_of_crop_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.no_of_crop_id) as no_crop, forest_land_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.forest_land_type_id) as forest_land, bls_out_detail_tranx_id_pk, crop_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.crop_type_id) as crop_type, crop_production, avg_income, crop_area, season_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.season_id) as season, ownership_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.ownership_id) as ownership from bls_out_main m LEFT JOIN bls_out_detail d on (m.bls_out_main_id_pk=d.bls_out_main_id ) LEFT JOIN bls_out_detail_crop dt on (d.bls_out_detail_id_pk=dt.bls_out_detail_id) where status='C' and proj_id=:project order by bls_out_main_id_pk, village_name
getbaselinefinaldata=select bls_out_main_id_pk, proj_id, vcode, (select village_name from iwmp_village where vcode=m.vcode) as village_name,  plot_no, area, owner_name, irrigation_status_id, (select description from m_bls_outcome where m_bls_out_id_pk=m.irrigation_status_id) as irrigation, status, bls_out_detail_id_pk, classification_land_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.classification_land_id) as classification_land, no_of_crop_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.no_of_crop_id) as no_crop, forest_land_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.forest_land_type_id) as forest_land, bls_out_detail_tranx_id_pk, crop_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.crop_type_id) as crop_type, crop_production, avg_income, crop_area, season_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.season_id) as season, ownership_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.ownership_id) as ownership from bls_out_main_achiev m LEFT JOIN bls_out_detail_achiev d on (m.bls_out_main_id_pk=d.bls_out_main_id ) LEFT JOIN bls_out_detail_crop_achiev dt on (d.bls_out_detail_id_pk=dt.bls_out_detail_id) where status='C' and proj_id=:project order by bls_out_main_id_pk, village_name
getbaselinecomdata = from BlsOutDetailCrop where blsOutDetailTranxIdPk = :id
getbaselinecomdatachieve = from BlsOutDetailCropAchiev where blsOutDetailCropIdPk = :id
#getcroptype = select MBlsOutIdPk as MBlsOutIdPk, description as description from MBlsOutcome
getcroptype = from MBlsOutcome
getcroptypeupdate = from MBlsOutcome as a where a.MBlsOutType.typeCode='crop_type' and a.MBlsOutIdPk not in (select b.MBlsOutcomeByCropTypeId.MBlsOutIdPk from BlsOutDetailCropAchiev as b where b.blsOutDetailAchiev.blsOutMainAchiev.iwmpMProject.projectId=:projId and b.blsOutDetailAchiev.blsOutMainAchiev.iwmpVillage.vcode=:vcode and b.blsOutDetailAchiev.blsOutMainAchiev.plotNo=:plotNo and coalesce(MBlsOutcomeBySeasonId.MBlsOutIdPk, '0')=:season)


#bls outcome report 
#getBlsOutReportStateLevel = select st.st_name as stname,count(distinct bm.proj_id) as total_project,count(distinct vcode) as total_village,count(distinct plot_no) as total_plot, sum(area) as treatable_area from iwmp_state st, iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id group by st.st_name
#29-8-22  getBlsReportStateLevel =select st.st_name as stname,st.st_code as stcode, (select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project, (select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_district d,iwmp_m_project p,bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,p.proj_id,season_id order by bm.plot_no ) a group by plot_no,a.proj_id) b ) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a ) as gross_cropped_area from iwmp_state st where wdcpmksy=1 group by st.st_name,st.st_code order by st.st_name
#26-9-22 getBlsReportStateLevel =select st.st_name as stname,st.st_code as stcode, (select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project,(select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot,(select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland,(select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') degraded_land,(select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') rainfed,(select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail bd where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bd.bls_out_main_id=bls_out_main_id_pk and classification_land_id=8  and bm.status='C') forest_land,(select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others,(select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income,(select sum(area) as area from (select max(area) area,a.proj_id,plot_no from( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_district d,iwmp_m_project p,bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no,p.proj_id,season_id order by bm.plot_no ) a group by plot_no,a.proj_id) b ) as net_sown_area,(select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id group by bm.plot_no,season_id order by bm.plot_no) a ) as gross_cropped_area from iwmp_state st where wdcpmksy=1 group by st.st_name,st.st_code order by st.st_name
#getBlsReportStateLevel=select stname, stcode, total_project, project_area, total_village, total_plot, treatable_area, cultivable_wasteland, degraded as degraded_land, rainfed, forest_land, others_classification as others,total_income,  net_sown_area, gross_cropped_area from (select s.st_name as stname,s.st_code as stcode,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id in(select bm.proj_id from bls_out_main bm where bm.status='C')) as project_area, a.* from (select st_code, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from  iwmp_district d,iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1, a.* from (select st_code,sum(area) plot_area, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) others_classification, sum(case when no_of_crop_id!=10 and classification_land_id!=8  then area else 0 end) net_sown_area from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name ) as y on f.stcode=y.stcode1 join (select s.st_code as stcode2,st_name as stname2, a.* from(select st_code, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code)as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as k on y.stcode1 = k.stcode2 order by stname
#getBlsReportStateLevel=select stname, COALESCE(stcode,0) as stcode ,coalesce(total_project,0) as total_project,coalesce(project_area ,0) as project_area, coalesce(total_village,0) as total_village, coalesce(total_plot,0) as total_plot, coalesce(treatable_area,0) as treatable_area, coalesce(cultivable_wasteland,0) as cultivable_wasteland, coalesce(degraded ,0) as degraded_land, coalesce(rainfed,0) as rainfed, coalesce(forest_land,0) as forest_land, coalesce(others_classification,0) as others,coalesce(total_income,0) as total_income, coalesce(net_sown_area,0) as net_sown_area, coalesce(gross_cropped_area,0)as gross_cropped_area from (select s.st_name as stname,s.st_code as stcode,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode ) as project_area, a.* from (select st_code, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from  iwmp_district d,iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1, a.* from (select st_code,sum(area) plot_area, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) others_classification, sum(case when no_of_crop_id!=10 and classification_land_id!=8  then area else 0 end) net_sown_area from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name ) as y on f.stcode=y.stcode1 join (select s.st_code as stcode2,st_name as stname2, a.* from(select st_code, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code)as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as k on y.stcode1 = k.stcode2 order by stname
getBlsReportStateLevel=select stname, COALESCE(stcode,0) as stcode, coalesce(total_project,0) as total_project, coalesce(project_area ,0) as project_area, coalesce(total_village,0) as total_village, coalesce(total_plot,0) as total_plot, coalesce(treatable_area,0) as treatable_area, coalesce(cultivable_wasteland,0) as cultivable_wasteland, coalesce(degraded ,0) as degraded_land, coalesce(rainfed,0) as rainfed, coalesce(forest_land,0) as forest_land, coalesce(others_classification,0) as others, coalesce(total_income,0) as total_income, coalesce(gross_cropped_area,0)as gross_cropped_area, coalesce(net_sown_area,0) as net_sown_area from (select s.st_name as stname,s.st_code as stcode, (select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode ) as project_area, a.* from (select st_code, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count( plot_no) as total_plot, sum(area) as treatable_area from  iwmp_district d,iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1, st_name as stname1,a.* from (select st_code,sum(area) plot_area, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) others_classification from iwmp_district d,iwmp_m_project p, bls_out_main bm,bls_out_detail boutdet, m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name ) as y on f.stcode=y.stcode1 join (select s.st_code as stcode2,st_name as stname2, a.* from(select st_code, coalesce(sum(crop_production*avg_income*crop_area),0) as total_income, coalesce(sum(crop_area),0) gross_cropped_area from bls_out_main bm left join bls_out_detail det on bm.bls_out_main_id_pk=det.bls_out_main_id left join bls_out_detail_crop dc on dc.bls_out_detail_id=det.bls_out_detail_id_pk left join iwmp_m_project p on p.proj_id=bm.proj_id left join iwmp_district d on d.dcode=p.dcode where bm.status='C' group by st_code)as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as k on y.stcode1 = k.stcode2 join(select s.st_name as stnamek, s.st_code as stcodek, (select sum(area) as area from (select sum(area) area, a.proj_id, plot_no from(select bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from iwmp_district d,iwmp_m_project p, bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.proj_id, bm.plot_no, season_id order by bm.plot_no ) a group by plot_no, a.proj_id) b ) as net_sown_area from iwmp_state s where wdcpmksy=1 group by s.st_name, s.st_code order by s.st_name) as kd on k.stcode2=kd.stcodek order by stname


#30-8-22getBlsOutReportStateLevel = select st.st_name as stname,st.st_code as stcode, (select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project, (select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as total_village, (select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as total_plot, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as treatable_area, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm, bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed_achv, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and  mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and  mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others_achv, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income_achv, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_district d,iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area_achv, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d, iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area , (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d, iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area_achv from iwmp_state st where st.wdcpmksy=1  group by st.st_name,st.st_code order by st.st_name
#getBlsOutReportStateLevel = select stname, stcode, COALESCE(total_project,0) as total_project, COALESCE(total_village,0) as total_village, COALESCE(total_plot,0) as total_plot, COALESCE(treatable_area,0.0000) as treatable_area, COALESCE(cultivable_wasteland,0.0000) as cultivable_wasteland, COALESCE(cultivable_wasteland_achv,0.0000) as cultivable_wasteland_achv, COALESCE(degraded_land,0.0000) as degraded_land, COALESCE(degraded_land_achv,0.0000) as degraded_land_achv, COALESCE(rainfed,0.0000) as rainfed, COALESCE(rainfed_achv,0.0000) as rainfed_achv, COALESCE(forest_land,0.0000) as forest_land, COALESCE(forest_land_achv,0.0000) as forest_land_achv, COALESCE(other,0.0000) as others, COALESCE(others_achv,0.0000) as others_achv, COALESCE(total_income,0.0000) as total_income, COALESCE(total_income_achv,0.0000) as total_income_achv, COALESCE(net_sown_area,0.0000) as net_sown_area, COALESCE(net_sown_area_achv,0.0000) as net_sown_area_achv, COALESCE(gross_cropped_area,0.0000) as gross_cropped_area, COALESCE(gross_cropped_area_achv,0.0000) as gross_cropped_area_achv from (select s.st_name as stname,s.st_code as stcode, a.* from (select st_code, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from  iwmp_district d,iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1, a.* from (select st_code, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.st_code)as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y on f.stcode = y.stcode1 join (select s.st_code as stcode2,st_name as stname2, a.* from(select st_code, sum(case classification_land_id when 8 then area else 0 end) forest_land from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as nt on y.stcode1=nt.stcode2 join (select s.st_code as stcode3,st_name as stname3, a.* from (select st_code,sum(area) net_sown_area from(select  st_code,plot_no,proj_id,max(area) area from(select d.st_code,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_district d,iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  d.st_code,bm.plot_no,p.proj_id,season_id ) as noa group by st_code,plot_no,proj_id) as net_sown_area group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as n on nt.stcode2 = n.stcode3 join (select s.st_code as stcode4,st_name as stname4, a.* from(select st_code, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland_achv, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land_achv, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed_achv, sum(case classification_land_id when 9 then crop_area else 0 end) others_achv, sum(crop_production*avg_income*crop_area) as total_income_achv, sum(crop_area) gross_cropped_area_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as nk on n.stcode3 = nk.stcode4 join (select s.st_code as stcode5,st_name as stname5, a.* from(select st_code, sum(case classification_land_id when 8 then area else 0 end) forest_land_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as ng on nk.stcode4=ng.stcode5 join (select s.st_code as stcode6,st_name as stname6, a.* from (select st_code,sum(area) net_sown_area_achv from(select st_code,plot_no,proj_id,max(area) area from(select d.st_code,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  d.st_code,bm.plot_no,p.proj_id,season_id ) as noa group by st_code,plot_no,proj_id) as net_sown_area_achv group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as na on ng.stcode5 = na.stcode6 order by stname
getBlsOutReportStateLevel = select stname, stcode, COALESCE(treatable_area,0.0000) as treatable_area, COALESCE(cultivable_wasteland,0.0000) as cultivable_wasteland, COALESCE(cultivable_wasteland_achv,0.0000) as cultivable_wasteland_achv, COALESCE(degraded_land,0.0000) as degraded_land, COALESCE(degraded_land_achv,0.0000) as degraded_land_achv, COALESCE(rainfed,0.0000) as rainfed, COALESCE(rainfed_achv,0.0000) as rainfed_achv, COALESCE(other,0.0000) as others, COALESCE(others_achv,0.0000) as others_achv, COALESCE(total_income,0.0000) as total_income, COALESCE(total_income_achv,0.0000) as total_income_achv, COALESCE(net_sown_area,0.0000) as net_sown_area, COALESCE(net_sown_area_achv,0.0000) as net_sown_area_achv, COALESCE(gross_cropped_area,0.0000) as gross_cropped_area, COALESCE(gross_cropped_area_achv,0.0000) as gross_cropped_area_achv from (select s.st_name as stname,s.st_code as stcode, a.* from (select st_code, sum(area) as treatable_area from  iwmp_district d,iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1, a.* from (select st_code, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.st_code)as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y on f.stcode = y.stcode1 join (select s.st_code as stcode3,st_name as stname3, a.* from (select st_code,sum(area) net_sown_area from(select  st_code,plot_no,proj_id,max(area) area from(select d.st_code,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_district d,iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  d.st_code,bm.plot_no,p.proj_id,season_id ) as noa group by st_code,plot_no,proj_id) as net_sown_area group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as n on y.stcode1 = n.stcode3 join (select s.st_code as stcode4,st_name as stname4, a.* from(select st_code, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland_achv, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land_achv, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed_achv, sum(case classification_land_id when 9 then crop_area else 0 end) others_achv, sum(crop_production*avg_income*crop_area) as total_income_achv, sum(crop_area) gross_cropped_area_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as nk on n.stcode3 = nk.stcode4 join (select s.st_code as stcode6,st_name as stname6, a.* from (select st_code,sum(area) net_sown_area_achv from(select st_code,plot_no,proj_id,max(area) area from(select d.st_code,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  d.st_code,bm.plot_no,p.proj_id,season_id ) as noa group by st_code,plot_no,proj_id) as net_sown_area_achv group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as na on nk.stcode4 = na.stcode6 order by stname
#30-8-22getOutcomeReportStateLevel = select st.st_name as stname,st.st_code as stcode, (select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project, (select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,p.proj_id,season_id order by bm.plot_no ) a group by plot_no,a.proj_id) b ) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a ) as gross_cropped_area from iwmp_state st where st.wdcpmksy=1  group by st.st_name,st.st_code order by st.st_name 
getOutcomeReportStateLevel = select stname, stcode, total_project, total_village, total_plot, treatable_area, cultivable_wasteland, degraded_land, rainfed, forest_land, other as others, total_income, net_sown_area, gross_cropped_area from (select s.st_name as stname,s.st_code as stcode, a.* from (select st_code, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from  iwmp_district d,iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1, a.* from(select st_code, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as nk on f.stcode = nk.stcode1 join (select s.st_code as stcode2,st_name as stname2, a.* from(select st_code, sum(case classification_land_id when 8 then area else 0 end) forest_land from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as ng on nk.stcode1=ng.stcode2 join (select s.st_code as stcode3,st_name as stname3, a.* from (select st_code,sum(area) net_sown_area from(select st_code,plot_no,proj_id,max(area) area from(select d.st_code,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  d.st_code,bm.plot_no,p.proj_id,season_id ) as noa group by st_code,plot_no,proj_id) as net_sown_area group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as na on ng.stcode2 = na.stcode3 order by stname
getBlsReportStateLevelForStCode=select stname, COALESCE(stcode,0) as stcode, coalesce(total_project,0) as total_project, coalesce(project_area ,0) as project_area, coalesce(total_village,0) as total_village, coalesce(total_plot,0) as total_plot, coalesce(treatable_area,0) as treatable_area, coalesce(cultivable_wasteland,0) as cultivable_wasteland, coalesce(degraded ,0) as degraded_land, coalesce(rainfed,0) as rainfed,coalesce(forest_land,0) as forest_land, coalesce(others_classification,0) as others, coalesce(total_income,0) as total_income, coalesce(gross_cropped_area,0)as gross_cropped_area, coalesce(net_sown_area,0) as net_sown_area from (select s.st_name as stname,s.st_code as stcode, (select sum(area_proposed) from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode ) as project_area, a.* from (select st_code, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count( plot_no) as total_plot, sum(area) as treatable_area from  iwmp_district d,iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 and s.st_code=:stCode  order by st_name) as f join (select s.st_code as stcode1, st_name as stname1, a.* from (select st_code,sum(area) plot_area, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) others_classification from iwmp_district d,iwmp_m_project p, bls_out_main bm,bls_out_detail boutdet, m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code)as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 and s.st_code=:stCode order by st_name ) as y on f.stcode=y.stcode1 join (select s.st_code as stcode2,st_name as stname2, a.* from(select st_code, coalesce(sum(crop_production*avg_income*crop_area),0) as total_income, coalesce(sum(crop_area),0) gross_cropped_area from bls_out_main bm left join bls_out_detail det on bm.bls_out_main_id_pk=det.bls_out_main_id left join bls_out_detail_crop dc on dc.bls_out_detail_id=det.bls_out_detail_id_pk left join iwmp_m_project p on p.proj_id=bm.proj_id left join iwmp_district d on d.dcode=p.dcode where bm.status='C' group by st_code)as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 and s.st_code=:stCode order by st_name) as k on y.stcode1 = k.stcode2 join(select s.st_name as stnamek, s.st_code as stcodek, (select sum(area) as area from (select sum(area) area, a.proj_id, plot_no from (select bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from iwmp_district d,iwmp_m_project p, bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' and s.st_code=:stCode group by bm.proj_id, bm.plot_no, season_id order by bm.plot_no ) a group by plot_no, a.proj_id) b ) as net_sown_area from iwmp_state s where wdcpmksy=1 group by s.st_name, s.st_code order by s.st_name) as kd on k.stcode2=kd.stcodek order by stname

#getBlsReportStateLevelForStCode = select st.st_name as stname,st.st_code as stcode, (select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project, (select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as total_village, (select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as treatable_area, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id) as cultivable_wasteland, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id) as degraded_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id) as rainfed, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as forest_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id) as others, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id) as total_income, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area from iwmp_state st where st.st_code=:stCode and st.wdcpmksy=1  group by st.st_name,st.st_code order by st.st_name
#30-08-22 getBlsOutReportStateLevelForStCode =select st.st_name as stname,st.st_code as stcode, (select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project, (select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as total_village, (select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as total_plot, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as treatable_area, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm, bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed_achv, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and  mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others,  (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and  mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others_achv, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income_achv, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area_achv, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d, iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area , (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d, iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area_achv from iwmp_state st where st.st_code=:stCode and st.wdcpmksy=1 group by st.st_name,st.st_code order by st.st_name
getBlsOutReportStateLevelForStCode = select st.st_name as stname,st.st_code as stcode, (select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project, (select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as total_village, (select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id) as total_plot, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm, bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed_achv, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail bd where bd.bls_out_main_id=bls_out_main_id_pk and classification_land_id=8 and st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev bd where bd.bls_out_main_id=bls_out_main_id_pk and classification_land_id=8 and st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land_achv, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and  mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others,(select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and  mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others_achv, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income_achv, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_district d,iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area_achv, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d, iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area , (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d, iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area_achv from iwmp_state st where st.st_code=:stCode and st.wdcpmksy=1  group by st.st_name,st.st_code order by st.st_name

#30-8-22getOutcomeReportStateLevelForStCode= select st.st_name as stname,st.st_code as stcode, (select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project, (select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no ) a group by plot_no) b ) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a ) as gross_cropped_area from iwmp_state st where st.st_code=:stCode and and st.wdcpmksy=1 group by st.st_name,st.st_code order by st.st_name
getOutcomeReportStateLevelForStCode = select st.st_name as stname,st.st_code as stcode,(select count(distinct bm.proj_id)  from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as total_project,(select count(distinct vcode) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village,(select count(distinct plot_no) from  iwmp_district d,iwmp_m_project p,bls_out_main bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot,(select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area,(select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland,(select sum(crop_area) from iwmp_district d,iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land,(select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed,(select sum(area) from  iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev bd where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bd.bls_out_main_id=bls_out_main_id_pk and classification_land_id=8  and bm.status='C') as forest_land,(select sum(crop_area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others,(select sum(crop_production*avg_income*crop_area) as total_income from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,p.proj_id,season_id order by bm.plot_no ) a group by plot_no,a.proj_id) b ) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where st.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and bm.status='C' and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a ) as gross_cropped_area from iwmp_state st where  st.st_code=:stCode and st.wdcpmksy=1  group by st.st_name,st.st_code order by st.st_name

# 29-8-22 getBlsReportDistrictLevel = select d.dist_name as distname,d.dcode as dcode, (select count(distinct bm.proj_id)  from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' ) as total_project, (select count(distinct vcode) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(area) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area from iwmp_district d where d.st_code=:stCode group by d.dist_name,d.dcode  order by dist_name
# 27-9-22 getBlsReportDistrictLevel=select d.dist_name as distname,d.dcode as dcode, (select count(distinct bm.proj_id)  from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' )as total_project, (select count(distinct vcode) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village,(select count(distinct plot_no) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot,(select sum(area) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area,(select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland,(select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land,(select sum(crop_area) from iwmp_m_project p, bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed,(select sum(area) from  iwmp_m_project p,bls_out_main bm,bls_out_detail bd where d.dcode=p.dcode and p.proj_id=bm.proj_id and classification_land_id=8 and bd.bls_out_main_id=bls_out_main_id_pk  and bm.status='C') as forest_land,(select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area from iwmp_district d where d.st_code=:stCode group by d.dist_name,d.dcode  order by dist_name
#getBlsReportDistrictLevel=select distname, dcode1 as dcode, total_project, project_area, total_village, total_plot, treatable_area, cultivable_wasteland, degraded as degraded_land, rainfed, forest_land, others_classification as others,total_income,  net_sown_area, gross_cropped_area from (select d.dist_name as distname,d.dcode as dcodef,(select sum(area_proposed) from iwmp_m_project p where d.dcode=p.dcode and p.proj_id in(select bm.proj_id from bls_out_main bm where bm.status='C')) as project_area, a.* from (select dcode, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stCode order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select dcode, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) others_classification, sum(case when no_of_crop_id!=10 and classification_land_id!=8  then area else 0 end) net_sown_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stCode order by distname1 ) as y on f.dcodef=y.dcode1 join (select d.dist_name as distname2,d.dcode as dcode2, a.* from(select dcode, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where  d.st_code= :stCode order by distname2) as k on y.dcode1 = k.dcode2 order by distname
#getBlsReportDistrictLevel=select distname, dcode1 as dcode, coalesce(total_project,0)as total_project,coalesce(project_area,0) as  project_area,coalesce(total_village,0)as total_village, coalesce(total_plot,0)as total_plot, coalesce(treatable_area,0)as treatable_area, coalesce(cultivable_wasteland,0)as cultivable_wasteland, coalesce(degraded,0) as degraded_land, coalesce(rainfed,0)as rainfed,coalesce(forest_land,0)as forest_land, coalesce(others_classification,0) as others,coalesce(total_income,0)as total_income,  coalesce(net_sown_area,0)as net_sown_area, coalesce(gross_cropped_area,0)as gross_cropped_area from (select d.dist_name as distname,d.dcode as dcodef,(select sum(area_proposed) from iwmp_m_project p where d.dcode=p.dcode and p.proj_id in(select bm.proj_id from bls_out_main bm where bm.status='C')) as project_area, a.* from (select dcode, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stCode order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select dcode, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) others_classification, sum(case when no_of_crop_id!=10 and classification_land_id!=8  then area else 0 end) net_sown_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stCode order by distname1 ) as y on f.dcodef=y.dcode1 join (select d.dist_name as distname2,d.dcode as dcode2, a.* from(select dcode, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where  d.st_code= :stCode order by distname2) as k on y.dcode1 = k.dcode2 order by distname
#getBlsReportDistrictLevel=select distname, dcode1 as dcode, coalesce(total_project,0)as total_project, coalesce(project_area,0) as  project_area, coalesce(total_village,0)as total_village, coalesce(total_plot,0)as total_plot, coalesce(treatable_area,0)as treatable_area, coalesce(cultivable_wasteland,0)as cultivable_wasteland, coalesce(degraded,0) as degraded_land, coalesce(rainfed,0)as rainfed,coalesce(forest_land,0)as forest_land, coalesce(others_classification,0) as others, coalesce(total_income,0)as total_income,  coalesce(gross_cropped_area,0)as gross_cropped_area, coalesce(net_sown_area,0)as net_sown_area from (select d.dist_name as distname,d.dcode as dcodef, (select sum(area_proposed) from iwmp_m_project p where d.dcode=p.dcode and p.proj_id in(select bm.proj_id from bls_out_main bm where bm.status='C')) as project_area, a.* from (select dcode, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stCode order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select dcode, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) others_classification from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stCode order by distname1 ) as y on f.dcodef=y.dcode1 join (select d.dist_name as distname2,d.dcode as dcode2, a.* from(select dcode, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where  d.st_code= :stCode order by distname2) as k on y.dcode1 = k.dcode2 join(select dist_name as distnamekd, d.dcode as dcodekd, coalesce((select sum(area) as area from (select sum(area) area, a.proj_id, plot_no from (select bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from iwmp_m_project p, bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.proj_id, bm.plot_no, season_id order by bm.plot_no ) a group by plot_no, a.proj_id) b ), 0) as net_sown_area from iwmp_district d where d.st_code=:stCode group by distnamekd, dcodekd order by distnamekd) as kd on k.dcode2=kd.dcodekd order by distname
 getBlsReportDistrictLevel=select distname, dcode1 as dcode,coalesce(total_project,0)as total_project, coalesce(project_area,0) as  project_area, coalesce(total_village,0)as total_village, coalesce(total_plot,0)as total_plot, coalesce(treatable_area,0)as treatable_area, coalesce(cultivable_wasteland,0)as cultivable_wasteland, coalesce(degraded,0) as degraded_land, coalesce(rainfed,0)as rainfed,coalesce(forest_land,0)as forest_land, coalesce(others_classification,0) as others, coalesce(total_income,0)as total_income, coalesce(gross_cropped_area,0)as gross_cropped_area, coalesce(net_sown_area,0)as net_sown_area from (select d.dist_name as distname,d.dcode as dcodef, (select sum(area_proposed) from iwmp_m_project p where d.dcode=p.dcode and p.proj_id in(select bm.proj_id from bls_out_main bm where bm.status='C')) as project_area, a.* from (select dcode, count(distinct p.proj_id) as total_project, count(distinct vcode)  as total_village, count( plot_no) as total_plot, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode  where d.st_code=:stCode and d.dist_proj=true order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select dcode,sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland,sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) others_classification from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stCode and d.dist_proj=true order by distname1 ) as y on f.dcodef=y.dcode1 join (select d.dist_name as distname2,d.dcode as dcode2, a.* from(select dcode, coalesce(sum(crop_production*avg_income*crop_area),0) as total_income, coalesce(sum(crop_area),0) gross_cropped_area from bls_out_main bm left join bls_out_detail det on bm.bls_out_main_id_pk=det.bls_out_main_id left join bls_out_detail_crop dc on dc.bls_out_detail_id=det.bls_out_detail_id_pk left join iwmp_m_project p on p.proj_id=bm.proj_id where bm.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where  d.st_code=:stCode and d.dist_proj=true order by distname2) as k on y.dcode1 = k.dcode2 join(select dist_name as distnamekd, d.dcode as dcodekd, coalesce((select sum(area) as area from (select sum(area) area, a.proj_id, plot_no from (select bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from iwmp_m_project p, bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.proj_id, bm.plot_no, season_id order by bm.plot_no ) a group by plot_no, a.proj_id) b ), 0) as net_sown_area from iwmp_district d where d.st_code=:stCode and d.dist_proj=true group by distnamekd, dcodekd order by distnamekd) as kd on k.dcode2=kd.dcodekd order by distname
 
# 30-8-22 getBlsOutReportDistrictLevel = select d.dist_name as distname,d.dcode as dcode, (select count(distinct bm.proj_id)  from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' ) as total_project, (select count(distinct vcode) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland_achv, (select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land_achv, (select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(crop_area) from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed_achv, (select sum(area) from  iwmp_m_project p,bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(area) from  iwmp_m_project p,bls_out_main_achiev bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land_achv, (select sum(crop_area) from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_area) from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others_achv, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income_achv, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area_achv, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_m_project p,bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area , (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area_achv from iwmp_district d where d.st_code=:stCode group by d.dist_name,d.dcode  order by dist_name
#getBlsOutReportDistrictLevel=select distname, dcodef as dcode, total_project, total_village, total_plot, treatable_area, cultivable_wasteland, cultivable_wasteland_achv, degraded_land, degraded_land_achv, rainfed, rainfed_achv, forest_land, forest_land_achv, other as others, others_achv, total_income, total_income_achv, net_sown_area, net_sown_area_achv, gross_cropped_area, gross_cropped_area_achv from (select d.dist_name as distname,d.dcode as dcodef, a.* from (select dcode, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj=true order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj=true order by distname1) as y on f.dcodef = y.dcode1 join (select d.dist_name as distname2,d.dcode as dcode2,a.* from (select d.dcode, sum(case classification_land_id when 8 then area else 0 end) forest_land from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code =:stCode and d.dist_proj=true order by distname2) as nt on y.dcode1=nt.dcode2 join (select d.dist_name as distname3,d.dcode as dcode3, a.* from (select dcode, sum(area) net_sown_area from(select  dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode, bm.plot_no,p.proj_id,season_id ) as noa group by dcode, plot_no,proj_id) as net_sown_area group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj=true order by distname3) as n on nt.dcode2 = n.dcode3 join (select d.dist_name as distname4,d.dcode as dcode4, a.* from (select d.dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland_achv, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land_achv, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed_achv, sum(case classification_land_id when 9 then crop_area else 0 end) others_achv, sum(crop_production*avg_income*crop_area) as total_income_achv,sum(crop_area) gross_cropped_area_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj=true order by distname4) as nk on n.dcode3 = nk.dcode4 join (select d.dist_name as distname5,d.dcode as dcode5, a.* from (select d.dcode, sum(case classification_land_id when 8 then area else 0 end) forest_land_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj=true order by distname5) as ng on nk.dcode4=ng.dcode5 join (select d.dist_name as distname6,d.dcode as dcode6, a.* from (select dcode, sum(area) net_sown_area_achv from(select dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where  p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode,bm.plot_no,p.proj_id,season_id ) as noa group by dcode,plot_no,proj_id) as net_sown_area_achv group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj=true order by distname6) as na on ng.dcode5 = na.dcode6 order by distname
#getBlsOutReportDistrictLevel=select distname, dcodef as dcode, total_project, total_village, total_plot, treatable_area, cultivable_wasteland, cultivable_wasteland_achv, degraded_land, degraded_land_achv, rainfed, rainfed_achv, forest_land, forest_land_achv, other as others, others_achv, total_income, total_income_achv, net_sown_area, net_sown_area_achv, gross_cropped_area, gross_cropped_area_achv from (select d.dist_name as distname,d.dcode as dcodef, a.* from (select dcode, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname1) as y on f.dcodef = y.dcode1 join (select d.dist_name as distname2,d.dcode as dcode2,a.* from (select d.dcode, sum(case classification_land_id when 8 then area else 0 end) forest_land from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code =:stCode order by distname2) as nt on y.dcode1=nt.dcode2 join (select d.dist_name as distname3,d.dcode as dcode3, a.* from (select dcode, sum(area) net_sown_area from(select  dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode, bm.plot_no,p.proj_id,season_id ) as noa group by dcode, plot_no,proj_id) as net_sown_area group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname3) as n on nt.dcode2 = n.dcode3 join (select d.dist_name as distname4,d.dcode as dcode4, a.* from (select d.dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland_achv, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land_achv, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed_achv, sum(case classification_land_id when 9 then crop_area else 0 end) others_achv, sum(crop_production*avg_income*crop_area) as total_income_achv,sum(crop_area) gross_cropped_area_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname4) as nk on n.dcode3 = nk.dcode4 join (select d.dist_name as distname5,d.dcode as dcode5, a.* from (select d.dcode, sum(case classification_land_id when 8 then area else 0 end) forest_land_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname5) as ng on nk.dcode4=ng.dcode5 join (select d.dist_name as distname6,d.dcode as dcode6, a.* from (select dcode, sum(area) net_sown_area_achv from(select dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where  p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode,bm.plot_no,p.proj_id,season_id ) as noa group by dcode,plot_no,proj_id) as net_sown_area_achv group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname6) as na on ng.dcode5 = na.dcode6 order by distname
#getBlsOutReportDistrictLevel=select distname, dcodef as dcode, total_project, total_village, total_plot, treatable_area, cultivable_wasteland, cultivable_wasteland_achv, degraded_land, degraded_land_achv, rainfed, rainfed_achv, forest_land, forest_land_achv, other as others, others_achv, total_income, total_income_achv, net_sown_area, net_sown_area_achv, gross_cropped_area, gross_cropped_area_achv from (select d.dist_name as distname,d.dcode as dcodef, a.* from (select dcode, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname1) as y on f.dcodef = y.dcode1 join (select d.dist_name as distname2,d.dcode as dcode2,a.* from (select d.dcode, sum(case classification_land_id when 8 then area else 0 end) forest_land from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code =:stCode and d.dist_proj is true order by distname2) as nt on y.dcode1=nt.dcode2 join (select d.dist_name as distname3,d.dcode as dcode3, a.* from (select dcode, sum(area) net_sown_area from(select  dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode, bm.plot_no,p.proj_id,season_id ) as noa group by dcode, plot_no,proj_id) as net_sown_area group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname3) as n on nt.dcode2 = n.dcode3 join (select d.dist_name as distname4,d.dcode as dcode4, a.* from (select d.dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland_achv, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land_achv, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed_achv, sum(case classification_land_id when 9 then crop_area else 0 end) others_achv, sum(crop_production*avg_income*crop_area) as total_income_achv,sum(crop_area) gross_cropped_area_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname4) as nk on n.dcode3 = nk.dcode4 join (select d.dist_name as distname5,d.dcode as dcode5, a.* from (select d.dcode, sum(case classification_land_id when 8 then area else 0 end) forest_land_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname5) as ng on nk.dcode4=ng.dcode5 join (select d.dist_name as distname6,d.dcode as dcode6, a.* from (select dcode, sum(area) net_sown_area_achv from(select dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where  p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode,bm.plot_no,p.proj_id,season_id ) as noa group by dcode,plot_no,proj_id) as net_sown_area_achv group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname6) as na on ng.dcode5 = na.dcode6 order by distname
getBlsOutReportDistrictLevel = select distname, dcodef as dcode, treatable_area, cultivable_wasteland, cultivable_wasteland_achv, degraded_land, degraded_land_achv, rainfed, rainfed_achv, other as others, others_achv, total_income, total_income_achv, net_sown_area, net_sown_area_achv, gross_cropped_area, gross_cropped_area_achv from (select d.dist_name as distname,d.dcode as dcodef, a.* from (select dcode, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode)as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname1) as y on f.dcodef = y.dcode1 join (select d.dist_name as distname3,d.dcode as dcode3, a.* from (select dcode, sum(area) net_sown_area from(select  dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode, bm.plot_no,p.proj_id,season_id ) as noa group by dcode, plot_no,proj_id) as net_sown_area group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname3) as n on y.dcode1 = n.dcode3 join (select d.dist_name as distname4,d.dcode as dcode4, a.* from (select d.dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland_achv, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land_achv, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed_achv, sum(case classification_land_id when 9 then crop_area else 0 end) others_achv, sum(crop_production*avg_income*crop_area) as total_income_achv,sum(crop_area) gross_cropped_area_achv from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname4) as nk on n.dcode3 = nk.dcode4 join (select d.dist_name as distname6,d.dcode as dcode6, a.* from (select dcode, sum(area) net_sown_area_achv from(select dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where  p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode,bm.plot_no,p.proj_id,season_id ) as noa group by dcode,plot_no,proj_id) as net_sown_area_achv group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode and d.dist_proj is true order by distname6) as na on nk.dcode4 = na.dcode6 order by distname

# 30-8-22 getOutcomeReportDistrictLevel= select d.dist_name as distname,d.dcode as dcode, (select count(distinct bm.proj_id)  from  iwmp_m_project p,bls_out_main_achiev bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' ) as total_project, (select count(distinct vcode) from  iwmp_m_project p,bls_out_main_achiev bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  iwmp_m_project p,bls_out_main_achiev bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  iwmp_m_project p,bls_out_main_achiev bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(area) from  iwmp_m_project p,bls_out_main_achiev bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(crop_area) from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,a.proj_id,plot_no from ( select sum(crop_area) as area,bm.plot_no,p.proj_id,season_id from iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,p.proj_id,season_id order by bm.plot_no) a group by plot_no,a.proj_id) b) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and bm.status='C' and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area from iwmp_district d where d.st_code=:stCode group by d.dist_name,d.dcode  order by dist_name
getOutcomeReportDistrictLevel=select distname, dcodef as dcode, total_project, total_village, total_plot, treatable_area, cultivable_wasteland, degraded_land, rainfed, forest_land, other as others, total_income, net_sown_area, gross_cropped_area from (select d.dist_name as distname,d.dcode as dcodef, a.* from (select dcode, count(distinct bm.proj_id) as total_project, count(distinct vcode)  as total_village, count(distinct plot_no) as total_plot, sum(area) as treatable_area from iwmp_m_project p,bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname) as f join (select d.dist_name as distname1,d.dcode as dcode1, a.* from (select d.dcode, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other, sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and  detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname1) as nk on f.dcode = nk.dcode1 join (select d.dist_name as distname2,d.dcode as dcode2, a.* from (select d.dcode, sum(case classification_land_id when 8 then area else 0 end) forest_land from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code = :stCode order by distname2) as ng on nk.dcode1=ng.dcode2 join (select d.dist_name as distname3,d.dcode as dcode3, a.* from (select dcode, sum(area) net_sown_area from(select dcode,plot_no,proj_id,max(area) area from(select dcode,bm.plot_no,p.proj_id,season_id, sum(crop_area) as area from iwmp_m_project p, bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where  p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  dcode,bm.plot_no,p.proj_id,season_id ) as noa group by dcode,plot_no,proj_id) as net_sown_area group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code =:stCode order by distname3) as na on ng.dcode2 = na.dcode3 order by distname 


# 29-8-22 getBlsReportProjectLevel = select p.proj_name as projname,p.proj_id as projid, (select count(distinct bm.proj_id)  from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_project, (select count(distinct vcode) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(area) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area from iwmp_m_project p where p.dcode=:dCode group by p.proj_name,p.proj_id order by p.proj_name
#27-9-2022 getBlsReportProjectLevel=select p.proj_name as projname,p.proj_id as projid, (select count(distinct bm.proj_id)  from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_project,(select count(distinct vcode) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_plot,(select sum(area) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as treatable_area,(select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land,(select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed,(select sum(area) from  bls_out_main bm,bls_out_detail bd where p.proj_id=bm.proj_id and  bd.bls_out_main_id=bls_out_main_id_pk and classification_land_id=8 and bm.status='C') as forest_land,(select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area from iwmp_m_project p where p.dcode=:dCode group by p.proj_name,p.proj_id order by p.proj_name
#getBlsReportProjectLevel=select projname, projid,project_area,total_plot, treatable_area, cultivable_wasteland, degraded_land, rainfed, forest_land, others, net_sown_area, total_income, gross_cropped_area from (select proj_name as projname, p.proj_id as projid, area_proposed as project_area, count(distinct plot_no) total_plot, sum(area) treatable_area, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded_land, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) as others, sum(case when no_of_crop_id!=10 and classification_land_id!=8  then area else 0 end) net_sown_area from  iwmp_m_project p LEFT join bls_out_main bm on p.proj_id=bm.proj_id LEFT join bls_out_detail boutdet on bm.bls_out_main_id_pk=boutdet.bls_out_main_id where bm.status='C' and dcode=:dCode group by p.proj_name ,p.proj_id) as f LEFT join (select proj_name as projname1, p.proj_id as projid1, a.* from (select proj_id, sum(crop_production*avg_income*crop_area) total_income, sum(crop_area) gross_cropped_area from bls_out_detail_crop detcrop, bls_out_main bmm, bls_out_detail boutdett where bmm.bls_out_main_id_pk=boutdett.bls_out_main_id and  detcrop.bls_out_detail_id=boutdett.bls_out_detail_id_pk and bmm.status = 'C' group by proj_id) as a right join iwmp_m_project p on p.proj_id = a.proj_id where dcode=:dCode order by proj_name) as k on k.proj_id = f.projid order by projname
getBlsReportProjectLevel=select projname, projid, project_area, total_plot, treatable_area, cultivable_wasteland, degraded_land, rainfed, forest_land, others, total_income, gross_cropped_area, net_sown_area from (select proj_name as projname, p.proj_id as projid, area_proposed as project_area, count( plot_no) total_plot, sum(area) treatable_area, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded_land, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case classification_land_id when 8 then area else 0 end) forest_land, sum(case classification_land_id when 9 then area else 0 end) as others from  iwmp_m_project p join bls_out_main bm on p.proj_id=bm.proj_id join bls_out_detail boutdet on bm.bls_out_main_id_pk=boutdet.bls_out_main_id where bm.status='C' and dcode=:dCode group by p.proj_name ,p.proj_id) as f full outer  join (select proj_name as projname1, p.proj_id as projid1, a.* from (select proj_id, coalesce(sum(crop_production*avg_income*crop_area),0) total_income, coalesce(sum(crop_area) ,0)gross_cropped_area from bls_out_main bm left join bls_out_detail det on bm.bls_out_main_id_pk=det.bls_out_main_id left join bls_out_detail_crop dc on dc.bls_out_detail_id=det.bls_out_detail_id_pk and bm.status='C' group by proj_id) as a full outer  join iwmp_m_project p on p.proj_id = a.proj_id where dcode=:dCode order by proj_name) as k on k.proj_id = f.projid join(select proj_name as projnamek, p.proj_id as projidk, coalesce((select sum(area) as area from (select sum(area) area, a.proj_id, plot_no from (select bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.proj_id, bm.plot_no, season_id order by bm.plot_no ) a group by plot_no, a.proj_id) b ), 0) as net_sown_area from iwmp_m_project p where p.dcode=:dCode group by proj_name, proj_id order by projnamek) as kd on kd.projidk=k.proj_id order by projname   

#30-08-22 getBlsOutReportProjectLevel = select p.proj_name as projname,p.proj_id as projid, (select count(distinct bm.proj_id)  from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_project, (select count(distinct vcode) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland_achv, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land_achv, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed_achv, (select sum(area) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(area) from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as forest_land_achv, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others_achv, (select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income_achv, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area_achv, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area_achv from iwmp_m_project p where p.dcode=:dCode group by p.proj_name,p.proj_id order by p.proj_name
#getBlsOutReportProjectLevel=select p.proj_name as projname,p.proj_id as projid, (select count(distinct bm.proj_id)  from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_project, (select count(distinct vcode) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  bls_out_main bm where p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland,(select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland_achv,(select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land_achv, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed_achv, (select sum(area) from  bls_out_main bm ,bls_out_detail bd where bd.bls_out_main_id=bls_out_main_id_pk and classification_land_id=8 and p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(area) from  bls_out_main_achiev bm ,bls_out_detail_achiev bd where bd.bls_out_main_id=bls_out_main_id_pk and classification_land_id=8 and p.proj_id=bm.proj_id and bm.status='C') as forest_land_achv, (select sum(crop_area) from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others_achv, (select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income_achv, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area_achv, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area_achv from iwmp_m_project p where p.dcode=:dCode group by p.proj_name,p.proj_id order by p.proj_name
 getBlsOutReportProjectLevel = select projname, proj_idf as projid, treatable_area, cultivable_wasteland, cultivable_wasteland_achv, degraded_land, degraded_land_achv, rainfed, rainfed_achv, other as others, others_achv, total_income, total_income_achv, net_sown_area, net_sown_area_achv, gross_cropped_area, gross_cropped_area_achv from (select p.proj_name as projname,p.proj_id as proj_idf, a.* from (select proj_id, sum(area) as treatable_area from bls_out_main bm where bm.status='C' group by proj_id) as a right join iwmp_m_project p on p.proj_id=a.proj_id) as f join (select p.proj_name as projname1,p.proj_id as proj_id1, a.* from  (select proj_id, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed, sum(case classification_land_id when 9 then crop_area else 0 end) other,  sum(crop_production*avg_income*crop_area) as total_income, sum(crop_area) gross_cropped_area from bls_out_main bm,bls_out_detail boutdet, bls_out_detail_crop detcrop where detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by proj_id)as a right join iwmp_m_project p on p.proj_id=a.proj_id) as y on f.proj_idf = y.proj_id1 join (select p.proj_name as projname2,p.proj_id as proj_id2, a.* from (select proj_id, sum(area) net_sown_area from(select  proj_id,plot_no,max(area) area from(select proj_id,bm.plot_no,season_id, sum(crop_area) as area from bls_out_main bm,bls_out_detail det, bls_out_detail_crop detcrop where bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  proj_id, bm.plot_no,season_id ) as noa group by proj_id, plot_no) as net_sown_area group by proj_id) as a right join iwmp_m_project p on p.proj_id=a.proj_id) as n on y.proj_id1 = n.proj_id2 join (select p.proj_name as projname3,p.proj_id as proj_id3, a.* from (select proj_id, sum(case classification_land_id when 5 then crop_area else 0 end) cultivable_wasteland_achv, sum(case classification_land_id when 6 then crop_area else 0 end) degraded_land_achv, sum(case classification_land_id when 7 then crop_area else 0 end) rainfed_achv, sum(case classification_land_id when 9 then crop_area else 0 end) others_achv, sum(crop_production*avg_income*crop_area) as total_income_achv, sum(crop_area) gross_cropped_area_achv from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by proj_id) as a right join iwmp_m_project p on p.proj_id=a.proj_id) as nk on n.proj_id2 = nk.proj_id3 join (select p.proj_name as projname4,p.proj_id as proj_id4, a.* from (select proj_id, sum(area) net_sown_area_achv from(select proj_id,plot_no,max(area) area from(select proj_id,bm.plot_no,season_id, sum(crop_area) as area from bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where bm.bls_out_main_id_pk=det.bls_out_main_id and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by  proj_id,bm.plot_no,season_id ) as noa group by proj_id,plot_no) as net_sown_area_achv group by proj_id) as a right join iwmp_m_project p on p.proj_id=a.proj_id) as na on nk.proj_id3 = na.proj_id4 right join iwmp_m_project p on p.proj_id=na.proj_id4 where dcode = :dCode order by projname
 
# 30- 08- 22 getOutcomeReportProjectLevel = select p.proj_name as projname,p.proj_id as projid, (select count(distinct bm.proj_id)  from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as total_project, (select count(distinct vcode) from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=49 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=50 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=51 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(area) from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as forest_land, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=52 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main_achiev bm, bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area from iwmp_m_project p where p.dcode=:dCode group by p.proj_name,p.proj_id order by p.proj_name 
getOutcomeReportProjectLevel=select p.proj_name as projname,p.proj_id as projid, (select count(distinct bm.proj_id)  from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as total_project, (select count(distinct vcode) from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as total_village, (select count(distinct plot_no) from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as total_plot, (select sum(area) from  bls_out_main_achiev bm where p.proj_id=bm.proj_id and bm.status='C') as treatable_area, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=5 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as cultivable_wasteland, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=6 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as degraded_land,(select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=7 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as rainfed, (select sum(area) from  bls_out_main_achiev bm,bls_out_detail_achiev bd where p.proj_id=bm.proj_id and bd.bls_out_main_id=bls_out_main_id_pk and classification_land_id=8  and bm.status='C') as forest_land, (select sum(crop_area) from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop,m_bls_outcome mbout where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and mbout.m_bls_out_id_pk=9 and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as others, (select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main_achiev bm,bls_out_detail_achiev boutdet, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C') as total_income, (select sum(area) as area from (select max(area) area,plot_no from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main_achiev bm, bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a group by plot_no) b) as net_sown_area, (select sum(area) area from ( select sum(crop_area) as area,bm.plot_no,season_id from bls_out_main_achiev bm,bls_out_detail_achiev det, bls_out_detail_crop_achiev detcrop where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.plot_no,season_id order by bm.plot_no) a) as gross_cropped_area from iwmp_m_project p where p.dcode=:dCode group by p.proj_name,p.proj_id order by p.proj_name


getPlotDataOfAVillage = from BlsOutMain where iwmpVillage.vcode=:vcode and iwmpMProject.projectId =:projid and upper(replace(plotNo,' ',''))=upper(replace(:plotno,' ',''))
getPlotDataOfVillageforUpdate = from BlsOutMainAchiev where iwmpVillage.vcode=:vcode and plotNo=:plotno 

getBlsReportDetailLevel=select bls_out_main_id_pk, proj_id, vcode,(select block_name from iwmp_block b,iwmp_gram_panchayat g,iwmp_village v where b.bcode = g.bcode and g.gcode = v.gcode and v.vcode=m.vcode) as block_name, (select gram_panchayat_name from iwmp_gram_panchayat g,iwmp_village v where g.gcode = v.gcode and v.vcode=m.vcode) as gram_panchayat_name, (select village_name from iwmp_village where vcode=m.vcode) as village_name, plot_no, area, owner_name, irrigation_status_id, (select description from m_bls_outcome where m_bls_out_id_pk=m.irrigation_status_id) as irrigation, m.status, bls_out_detail_id_pk, classification_land_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.classification_land_id) as classification_land, no_of_crop_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.no_of_crop_id) as no_crop, forest_land_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.forest_land_type_id) as forest_land, bls_out_detail_tranx_id_pk, crop_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.crop_type_id) as crop_type, crop_production, avg_income, crop_area, season_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.season_id) as season, ownership_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.ownership_id) as ownership from bls_out_main m LEFT JOIN bls_out_detail d on (m.bls_out_main_id_pk=d.bls_out_main_id ) LEFT JOIN bls_out_detail_crop dt on (d.bls_out_detail_id_pk=dt.bls_out_detail_id) where m.status='C' and proj_id= :project order by village_name, plot_no, bls_out_main_id_pk,  classification_land_id, season_id,crop_type_id
getBlsOutReportDetailLevel= select bls_out_main_id_pk, proj_id, vcode, (select block_name from iwmp_block b,iwmp_gram_panchayat g,iwmp_village v where b.bcode = g.bcode and g.gcode = v.gcode and v.vcode=m.vcode) as block_name_achv, (select gram_panchayat_name from iwmp_gram_panchayat g,iwmp_village v where g.gcode = v.gcode and v.vcode=m.vcode) as gram_panchayat_name_achv, (select village_name from iwmp_village where vcode=m.vcode) as village_name_achv,plot_no as plot_no_achv, area as area_achv, owner_name as owner_name_achv, irrigation_status_id, (select description from m_bls_outcome where m_bls_out_id_pk=m.irrigation_status_id) as irrigation_achv, status as status_achv, bls_out_detail_id_pk, classification_land_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.classification_land_id) as classification_land_achv, no_of_crop_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.no_of_crop_id) as no_crop_achv, forest_land_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.forest_land_type_id) as forest_land_achv, bls_out_detail_crop_id_pk as bls_out_detail_tranx_id_pk, crop_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.crop_type_id) as crop_type_achv, crop_production as crop_production_achv, avg_income as avg_income_achv, crop_area as crop_area_achv, season_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.season_id) as season_achv, ownership_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.ownership_id) as ownership_achv from bls_out_main_achiev m LEFT JOIN bls_out_detail_achiev d on (m.bls_out_main_id_pk=d.bls_out_main_id ) LEFT JOIN bls_out_detail_crop_achiev dt on (d.bls_out_detail_id_pk=dt.bls_out_detail_id) where status='C' and proj_id=:project order by village_name_achv, plot_no,season_id, bls_out_main_id_pk, classification_land_id,crop_type_id
getOutcomeReportDetailLevel= select bls_out_main_id_pk, proj_id, vcode, (select block_name from iwmp_block b,iwmp_gram_panchayat g,iwmp_village v where b.bcode = g.bcode and g.gcode = v.gcode and v.vcode=m.vcode) as block_name_achv, (select gram_panchayat_name from iwmp_gram_panchayat g,iwmp_village v where g.gcode = v.gcode and v.vcode=m.vcode) as gram_panchayat_name_achv, (select village_name from iwmp_village where vcode=m.vcode) as village_name_achv,plot_no as plot_no_achv, area as area_achv, owner_name as owner_name_achv, irrigation_status_id, (select description from m_bls_outcome where m_bls_out_id_pk=m.irrigation_status_id) as irrigation_achv, status as status_achv, bls_out_detail_id_pk, classification_land_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.classification_land_id) as classification_land_achv, no_of_crop_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.no_of_crop_id) as no_crop_achv, forest_land_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.forest_land_type_id) as forest_land_achv, bls_out_detail_crop_id_pk as bls_out_detail_tranx_id_pk, crop_type_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.crop_type_id) as crop_type_achv, crop_production as crop_production_achv, avg_income as avg_income_achv, crop_area as crop_area_achv, season_id, (select description from m_bls_outcome where m_bls_out_id_pk=dt.season_id) as season_achv, ownership_id, (select description from m_bls_outcome where m_bls_out_id_pk=d.ownership_id) as ownership_achv from bls_out_main_achiev m LEFT JOIN bls_out_detail_achiev d on (m.bls_out_main_id_pk=d.bls_out_main_id ) LEFT JOIN bls_out_detail_crop_achiev dt on (d.bls_out_detail_id_pk=dt.bls_out_detail_id) where status='C' and proj_id=:project order by village_name_achv,  classification_land_achv desc,plot_no,season_id,crop_type_id

getSHGDepartment = from MDepartmentScheme where types='SHG' order by schemeDescription

getDeptSchemData=from MDepartmentScheme  order by types, seqNo, departmentSchemeIdPk 
deleteDeptSchemData=delete from MDepartmentScheme where departmentSchemeIdPk = :id
finddeptschemmaster=from MDepartmentScheme where departmentSchemeIdPk = :id 
countshgdetailscheme=select count(*) from ShgDetail where MDepartmentScheme.departmentSchemeIdPk=:id
countfpodetailscheme=select count(*) from FpoDetail where MDepartmentScheme.departmentSchemeIdPk=:id 
getoutcomedata = select f.outcome_id, outcome_desc, coalesce(d.outcome_detail_id, 0) as outcome_detail_id, d.outcome_detail_desc from wdcpmksy_m_outcome f full join wdcpmksy_m_outcome_detail d on f.outcome_id=d.outcome_id where f.outcome_id in (1, 10, 6 , 9) order by outcome_desc, d.outcome_detail_id
getOutcomeDraftData = select d.outcome2_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select m.month_name from iwmp_m_month m where month_id = d.month_id) as month, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.degraded_rainfed as degradedrainf, d.man_day_gen, d.farmer_st, d.farmer_sc, d.others, d.farmer_female, d.farmer_small, d.farmer_mirginal, d.farmer_landless, d.farmer_bpl, (select degraded_land from (select proj_name as projname, p.proj_id as projid, sum(case classification_land_id when 6 then area else 0 end) degraded_land from iwmp_m_project p LEFT join bls_out_main bm on p.proj_id=bm.proj_id LEFT join bls_out_detail boutdet on bm.bls_out_main_id_pk=boutdet.bls_out_main_id where bm.status='C' and p.proj_id = :projectId group by p.proj_name ,p.proj_id) as f LEFT join (select proj_name as projname1, p.proj_id as projid1, a.* from (select proj_id from bls_out_detail_crop detcrop, bls_out_main bmm, bls_out_detail boutdett where bmm.bls_out_main_id_pk=boutdett.bls_out_main_id and  detcrop.bls_out_detail_id=boutdett.bls_out_detail_id_pk and bmm.status = 'C' group by proj_id) as a right join iwmp_m_project p on p.proj_id = a.proj_id where p.proj_id = :projectId order by proj_name) as k on k.proj_id = f.projid order by projname) + (select degraded_rainfed from (select proj_name as projname, p.proj_id as projid, sum(case classification_land_id when 7 then area else 0 end) as degraded_rainfed, (select degraded_rainfed from outcome_2_data where proj_id = :projectId and fin_yr_cd = :year and month_id = :month and proj_id  = p.proj_id)  degraded from iwmp_m_project p LEFT join bls_out_main bm on p.proj_id=bm.proj_id LEFT join bls_out_detail boutdet on bm.bls_out_main_id_pk=boutdet.bls_out_main_id where bm.status='C' and p.proj_id = :projectId group by p.proj_name ,p.proj_id) as f LEFT join (select proj_name as projname1, p.proj_id as projid1, a.* from (select proj_id from bls_out_detail_crop detcrop, bls_out_main bmm, bls_out_detail boutdett where bmm.bls_out_main_id_pk=boutdett.bls_out_main_id and detcrop.bls_out_detail_id=boutdett.bls_out_detail_id_pk and bmm.status = 'C' group by proj_id) as a right join iwmp_m_project p on p.proj_id = a.proj_id where p.proj_id = :projectId order by proj_name) as k on k.proj_id = f.projid order by projname) as degraded_rainfed from outcome_2_data d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.month_id=:month and d.status = 'D'
getOutcomecompleteData = select d.outcome2_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select m.month_name from iwmp_m_month m where month_id = d.month_id) as month, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.degraded_rainfed as degradedrainf, d.man_day_gen, d.farmer_st, d.farmer_sc, d.others, d.farmer_female, d.farmer_small, d.farmer_mirginal, d.farmer_landless, d.farmer_bpl, (select degraded_land from (select proj_name as projname, p.proj_id as projid, sum(case classification_land_id when 6 then area else 0 end) degraded_land from iwmp_m_project p LEFT join bls_out_main bm on p.proj_id=bm.proj_id LEFT join bls_out_detail boutdet on bm.bls_out_main_id_pk=boutdet.bls_out_main_id where bm.status='C' and p.proj_id = :projectId group by p.proj_name ,p.proj_id) as f LEFT join (select proj_name as projname1, p.proj_id as projid1, a.* from (select proj_id from bls_out_detail_crop detcrop, bls_out_main bmm, bls_out_detail boutdett where bmm.bls_out_main_id_pk=boutdett.bls_out_main_id and  detcrop.bls_out_detail_id=boutdett.bls_out_detail_id_pk and bmm.status = 'C' group by proj_id) as a right join iwmp_m_project p on p.proj_id = a.proj_id where p.proj_id = :projectId order by proj_name) as k on k.proj_id = f.projid order by projname) + (select degraded_rainfed from (select proj_name as projname, p.proj_id as projid, sum(case classification_land_id when 7 then area else 0 end) as degraded_rainfed, (select degraded_rainfed from outcome_2_data where proj_id = :projectId and fin_yr_cd = :year and month_id = :month and proj_id  = p.proj_id)  degraded from iwmp_m_project p LEFT join bls_out_main bm on p.proj_id=bm.proj_id LEFT join bls_out_detail boutdet on bm.bls_out_main_id_pk=boutdet.bls_out_main_id where bm.status='C' and p.proj_id = :projectId group by p.proj_name ,p.proj_id) as f LEFT join (select proj_name as projname1, p.proj_id as projid1, a.* from (select proj_id from bls_out_detail_crop detcrop, bls_out_main bmm, bls_out_detail boutdett where bmm.bls_out_main_id_pk=boutdett.bls_out_main_id and detcrop.bls_out_detail_id=boutdett.bls_out_detail_id_pk and bmm.status = 'C' group by proj_id) as a right join iwmp_m_project p on p.proj_id = a.proj_id where p.proj_id = :projectId order by proj_name) as k on k.proj_id = f.projid order by projname) as degraded_rainfed from outcome_2_data d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.month_id=:month and d.status = 'C'


getOutcomeFinalData = select d.outcome2_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select m.month_name from iwmp_m_month m where month_id = d.month_id) as month, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.degraded_land, d.rainfed, d.man_day_gen, d.farmer_st, d.farmer_sc, d.others, d.farmer_female, d.farmer_small, d.farmer_mirginal, d.farmer_landless, d.farmer_bpl from outcome_2_data d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.month_id=:month and d.status = 'c'
blockListBypCode = select b.blockCode, b.blockName from IwmpBlock b where b.iwmpDistrict.iwmpMProjects.projectId = :projectId
checkoldpass = select * from iwmp_user_reg where encrypted_pass = :encryptedoldpwd and user_id = :loginId
getAlreadyDiActPlanData=SELECT distinct PROJ_NAME AS projectName, FIN_YR_DESC AS FINYEARDESC, DPR_STATUS AS DPRSTATUS, AUTH_NAME AS AUTHNAME, ac.status, act_plan_id as actplanid FROM IWMP_M_PROJECT p, iwmp_m_fin_year fy, iwmp_act_plan ac WHERE p.proj_id =ac.proj_id and fy.fin_yr_cd = ac.fin_yr_cd and ac.dcode = :dCode
quarterYrDetails =from MQuarter

finYrDetails = from IwmpMFinYear where finYrCd >= (select iwmpMFinYear.finYrCd from IwmpMProject where projectId =:projId)
getConvSchemeList = from MConvScheme
getConvActivityList = from MConvSchemeActivities where MConvScheme.schemeCd=:convSchme

#unfreezebaselineproject=select distinct m.proj_id, (select proj_name from iwmp_m_project where proj_id=m.proj_id or proj_id=a.proj_id) as proj_name, (case when m.status='C' then 'Yes' else 'No' end) as blsstatus, m.status, (case when a.status='C' then 'Yes' else 'No' end) as asset_status, a.status as astatus, (case when t.status='D' then 'Yes' else 'No' end) as asset_temp_status, t.status as tstatus from public.bls_out_main m, iwmp_project_physical_asset a, iwmp_project_physical_asset_temp t  where m.proj_id=:projcd and m.proj_id=a.proj_id and m.proj_id=t.proj_id order by proj_name
unfreezebaselineproject=select distinct p.proj_id, (select proj_name from iwmp_m_project where proj_id=m.proj_id or proj_id=p.proj_id) as proj_name,  (case when p.status='true' then 'Yes' else 'No' end) as  location_status, (case when m.status='C' then 'Yes' else 'No' end) as blsstatus, m.status, (case when a.status='C' then 'Yes' else 'No' end) as asset_status, a.status as astatus, (case when t.status='D' then 'Yes' else 'No' end) as asset_temp_status, t.status as tstatus from iwmp_project_location p FULL join public.bls_out_main m on p.proj_id=m.proj_id full join iwmp_project_physical_asset a on (m.proj_id=a.proj_id) left JOIN iwmp_project_physical_asset_temp t on m.proj_id=t.proj_id where p.proj_id=:projcd order by proj_name
unfreezebaselinedist=select distinct p.proj_id, (select proj_name from iwmp_m_project where  proj_id=p.proj_id or proj_id=m.proj_id) as proj_name, (case when p.status='true' then 'Yes' else 'No' end) as  location_status, (case when m.status='C' then 'Yes' else 'No' end) as blsstatus, m.status, (case when a.status='C' then 'Yes' else 'No' end) as asset_status, a.status as astatus, (case when t.status='D' then 'Yes' else 'No' end) as asset_temp_status, t.status as tstatus from iwmp_project_location p FULL join public.bls_out_main m on p.proj_id=m.proj_id FULL JOIN iwmp_project_physical_asset a on (m.proj_id=a.proj_id) left join iwmp_project_physical_asset_temp t on m.proj_id=t.proj_id where p.proj_id in(select proj_id from iwmp_m_project where dcode=:distcd)  order by proj_name
deleteWorkIdTemp=delete from iwmp_project_physical_asset_temp where proj_id=:id
unfreezebalseline=select unfreezebaselinesurveyplot_projectwise(:projid)
unfreezeProjectLocatinwc=delete from iwmp_project_wc where proj_location_id in ( select proj_location_id from iwmp_project_location where proj_id=:pid)
unfreezeProjectLocatin=update iwmp_project_location set status=false where proj_id=:pid

chkAlreadyExistVillLgdCode =from IwmpVillage where villageLgdcode=:lgdCode
chkAlreadyExistGrmPnchytLgdCode = from IwmpGramPanchayat where gramPanchayatLgdCode=:lgdCode
chkAlreadyExistBlkLgdCode = from IwmpBlock where blockCodelgd=:lgdCode

statewisecurrentstatus=select s.st_name, s.st_code, cast(count(DISTINCT d.dcode) as Integer) as total_dist, cast(count(DISTINCT p.dcode) as Integer) as total_distproj, cast(count(distinct proj_id) as Integer) as total_project, cast((select count(distinct wc_id) from iwmp_district d, iwmp_m_project p, iwmp_m_wc w where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=w.proj_id ) as Integer) as total_wc, cast((select count(distinct l.vcode) from iwmp_district d,iwmp_m_project p, iwmp_m_wc w, iwmp_project_location l, iwmp_project_wc pw where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=w.proj_id and p.proj_id=l.proj_id and l.proj_location_id=pw.proj_location_id and pw.wc_id=w.wc_id and pw.status=true) as Integer) as total_villin_wc, cast((select count(distinct vcode) from iwmp_district d, iwmp_m_project p, bls_out_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as total_vill_Basel, cast((select count(distinct vcode) from iwmp_district d, iwmp_m_project p, iwmp_project_location bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status=true) as Integer) as total_vill_project, cast((select count(distinct p.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_location bm, iwmp_project_wc w where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.proj_location_id=w.proj_location_id and bm.status=true and w.status=true) as Integer) as tot_proj_loc from iwmp_state s left join iwmp_district d on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 group by s.st_name, s.st_code order by s.st_name
getPhysicalHeadActivityList=select h.head_code, head_desc, activity_code, activity_desc from iwmp_m_phy_heads h, iwmp_m_phy_activity a where h.head_code=a.head_code order by head_code, activity_code
statewisecurrentstatusOther=select s.st_name, s.st_code, cast(count(DISTINCT d.dcode) as Integer) as total_dist, cast(count(distinct proj_id) as Integer) as total_project, cast(count(distinct v.vcode)  as Integer) as total_village, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_user_project_map bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as Integer) as tot_proj_permission, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_physical_plan bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as total_project_plan, cast((select count(distinct p.proj_id) from iwmp_district d, iwmp_m_project p, groundwater_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.level_time='basel') as Integer) as tot_proj_basel_ground, cast((select count(distinct reg.user_id) from iwmp_district d, iwmp_user_reg as reg, iwmp_user_map  as mp where s.st_code=d.st_code and d.dcode=mp.dcode and s.st_code=mp.st_code and upper(reg.status)='ACTIVE' and reg.user_type='DI' and reg.reg_id=mp.reg_id) as Integer) as total_wcdc, cast((select count(distinct reg.user_id) from iwmp_district d, iwmp_user_reg as reg, iwmp_user_map  as mp, iwmp_user_project_map up where s.st_code=d.st_code and d.dcode=mp.dcode and s.st_code=mp.st_code and upper(reg.status)='ACTIVE' and reg.user_type='PI' and reg.reg_id=mp.reg_id and reg.reg_id=up.reg_id) as Integer) as total_pia from iwmp_village v INNER join iwmp_gram_panchayat g on v.gcode=g.gcode inner join iwmp_block b on b.bcode=g.bcode inner join iwmp_district d on d.dcode=b.dcode inner join iwmp_state s on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 group by s.st_name, s.st_code  order by s.st_name
#statewisecurrentstatus=select s.st_name, s.st_code, cast(count(DISTINCT d.dcode) as Integer) as total_dist, cast(count(DISTINCT p.dcode) as Integer) as total_distproj, cast(count(distinct proj_id) as Integer) as total_project, cast(count(distinct v.vcode)  as Integer) as total_village, cast((select count(distinct wcname) from  iwmp_district d, iwmp_m_project p, iwmp_m_wc w where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=w.proj_id ) as Integer) as total_wc, cast((select count(distinct l.vcode) from  iwmp_district d,iwmp_m_project p, iwmp_m_wc w, iwmp_project_location l, iwmp_project_wc pw where s.st_code=d.st_code and d.dcode=p.dcode  and p.proj_id=w.proj_id and p.proj_id=l.proj_id and l.proj_location_id=pw.proj_location_id and pw.wc_id=w.wc_id and pw.status=true) as Integer) as total_villin_wc, cast((select count(distinct vcode) from iwmp_district d, iwmp_m_project p, bls_out_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as total_vill_Basel, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_physical_plan bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as total_project_plan, cast((select count(distinct vcode) from iwmp_district d, iwmp_m_project p, iwmp_project_location bm where s.st_code=d.st_code and d.dcode=p.dcode  and p.proj_id=bm.proj_id and bm.status=true) as Integer) as total_vill_project, cast((select count(distinct p.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_location bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status=true) as Integer) as tot_proj_loc, cast((select count(distinct reg.user_id) from iwmp_district d, iwmp_user_reg as reg, iwmp_user_map  as mp where s.st_code=d.st_code and d.dcode=mp.dcode and s.st_code=mp.st_code and  upper(reg.status)='ACTIVE' and reg.user_type='DI' and reg.reg_id=mp.reg_id) as Integer) as total_wcdc, cast((select count(distinct reg.user_id) from iwmp_district d, iwmp_user_reg as reg, iwmp_user_map  as mp where s.st_code=d.st_code and d.dcode=mp.dcode and s.st_code=mp.st_code and upper(reg.status)='ACTIVE' and reg.user_type='PI' and reg.reg_id=mp.reg_id) as Integer) as total_pia, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_user_project_map bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id ) as Integer) as tot_proj_permission	 from iwmp_village v INNER join iwmp_gram_panchayat g on v.gcode=g.gcode inner join iwmp_block b on b.bcode=g.bcode inner join iwmp_district d on d.dcode=b.dcode inner join iwmp_state s on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 group by s.st_name, s.st_code  order by s.st_name

#For API Fetching Reports
getpfmstreasuredata= select iwmpState.stCode as stCode, iwmpState.stName as stName, financialYear as financialYear, sum(treasuryReceipt) as treasuryReceipt, sum(centralShare) as centralShare, sum(stateShare) as stateShare from PfmsTreasuryreceiptDetaildata group by financialYear, iwmpState.stName, iwmpState.stCode order by iwmpState.stName
getexpandtreasure = from PfmsTreasuryreceiptDetaildata where iwmpState.stCode = :statecode 
getpfmstotaltreasuredata = select sum(treasuryReceipt) as treasuryReceipt, sum(centralShare) as centralShare, sum(stateShare) as stateShare from PfmsTreasuryreceiptDetaildata where iwmpState.stCode = :statecode

getPfmsTransactionStLvl = from PfmsEatmisdataDetail pd where pd.iwmpStateByStateLgdCode.stateCodelgd in (select d.iwmpState.stateCodelgd from IwmpDistrict d, IwmpMProject p where d.dcode = p.iwmpDistrict.dcode and p.projectId = :projId) order by date desc
getPfmsTransactionDistLvl = from PfmsEatmisdataDetail pd where pd.districtLgdCode in (select d.districtCodelgd  from IwmpDistrict d, IwmpMProject p where d.dcode = p.iwmpDistrict.dcode and p.projectId = :projId) order by date desc
getPfmsTransactionBlkLvl = from PfmsEatmisdataDetail pd where pd.blockLgdCode in (select b.blockCodelgd  from IwmpBlock b, IwmpDistrict d, IwmpMProject p where b.iwmpDistrict.dcode = d.dcode and d.dcode = p.iwmpDistrict.dcode and p.projectId = :projId) order by date desc
getPfmsTransactionGpLvl = from PfmsEatmisdataDetail pd where pd.panchayatLgdCode in (select g.gramPanchayatLgdCode from IwmpGramPanchayat g, IwmpBlock b, IwmpDistrict d, IwmpMProject p where g.iwmpBlock.bcode = b.bcode and b.iwmpDistrict.dcode = d.dcode and d.dcode = p.iwmpDistrict.dcode and p.projectId = :projId) order by date desc
getPfmsTransactionVillLvl = from PfmsEatmisdataDetail pd where pd.villageCode in (select v.villageLgdcode  from IwmpVillage v, IwmpGramPanchayat g, IwmpBlock b, IwmpDistrict d, IwmpMProject p where v.iwmpGramPanchayat.gcode= g.gcode and g.iwmpBlock.bcode = b.bcode and b.iwmpDistrict.dcode = d.dcode and d.dcode = p.iwmpDistrict.dcode and p.projectId = :projId ) order by date desc

getProjectsByStCode = from  IwmpMProject p where p.iwmpDistrict.dcode in (Select d.dcode from IwmpDistrict d where d.iwmpState.stCode = :stCode) order by p.projName

getMQuarter = from MQuarter
getTargetdata = select i.indicators_id, i.indicators_desc, i.seq_no, i.area_type, coalesce((select sum(qty_planned) from iwmp_project_physical_aap dD, iwmp_m_phy_activity b ,iwmp_project_physical_plan p where  dD.phy_activity_code = b.activity_code and b.head_code  = i.indicators_id and p.planid=dD.planid and proj_id=:projId and fin_yr_cd between  :year and  :year and dD.planid = p.planid), 0)as plan from  wdcpmksy_m_quad_indicators i order by seq_no
getTargetList = select indicators_id, indicators_desc from wdcpmksy_m_quad_indicators order by seq_no
getIndicatorData = select p.proj_name, f.fin_yr_desc, i.indicators_desc, t.first_quad, COALESCE(t.q1status,'-') as q1status, t.second_quad, COALESCE(t.q2status,'-') as q2status, t.third_quad, COALESCE(t.q3status,'-') as q3status, t.fourth_quad, COALESCE(t.q4status,'-') as q4status from wdcpmksy_quad_target t, iwmp_m_project p, iwmp_m_fin_year f, wdcpmksy_m_quad_indicators i where p.proj_id = t.proj_id and f.fin_yr_cd = t.fin_yr_cd and i.indicators_id = t.indicator_id and t.proj_id = :project and t.fin_yr_cd = :financial
getTargetCompare = select * from wdcpmksy_quad_target where proj_id = :projId and fin_yr_cd = :year
getTargetdata1 = select i.indicators_id, i.indicators_desc, i.seq_no, t.first_quad, t.second_quad, t.third_quad, t.fourth_quad, t.q1status, t.q2status, t.q3status, t.q4status, i.area_type, coalesce((select sum(qty_planned) from iwmp_project_physical_aap dD, iwmp_m_phy_activity b where  dD.phy_activity_code = b.activity_code and b.head_code  = i.indicators_id and dD.planid = p.planid), 0)as plan from wdcpmksy_m_quad_indicators i, wdcpmksy_quad_target t, iwmp_project_physical_plan p, iwmp_m_fin_year f where p.proj_id = :projId and p.fin_yr_cd = f.fin_yr_cd and i.indicators_id = t.indicator_id and p.proj_id = t.proj_id and t.fin_yr_cd = f.fin_yr_cd and f.fin_yr_cd  between :year and  :year group by i.indicators_id, i.indicators_desc, p.planid, i.seq_no, t.first_quad, t.second_quad, t.third_quad, t.fourth_quad, t.q1status, t.q2status, t.q3status, t.q4status order by seq_no 
checkindicatos = from WdcpmksyQuadTarget where iwmpMFinYear.finYrCd = :financial and iwmpMProject.projectId = :ProjId and indicatorId = :indicatorid
getquarterlySLNAData = select DISTINCT p.proj_id, p.proj_name, f.fin_yr_cd, f.fin_yr_desc, q.q4status as stats, case when q.q4status = 'S' then 'Quarter4' end as quarter from  iwmp_m_project p, wdcpmksy_quad_target q,  iwmp_m_fin_year f where p.proj_id = q.proj_id and q.fin_yr_cd = f.fin_yr_cd and q.q4status = 'S' and q.stcode = :stcode and q.proj_id = (case when :projId=0 then q.proj_id else :projId end) union select DISTINCT p.proj_id, p.proj_name, f.fin_yr_cd, f.fin_yr_desc, q.q3status as stats, case when q.q3status = 'S' then 'Quarter3' end as quarter from  iwmp_m_project p, wdcpmksy_quad_target q,  iwmp_m_fin_year f where p.proj_id = q.proj_id and q.fin_yr_cd = f.fin_yr_cd and q.q3status = 'S' and q.stcode = :stcode and q.proj_id = (case when :projId=0 then q.proj_id else :projId end) union select DISTINCT p.proj_id, p.proj_name, f.fin_yr_cd, f.fin_yr_desc, q.q2status as stats, case when q.q2status = 'S' then 'Quarter2' end as quarter from  iwmp_m_project p, wdcpmksy_quad_target q,  iwmp_m_fin_year f where p.proj_id = q.proj_id and q.fin_yr_cd = f.fin_yr_cd and q.q2status = 'S' and q.stcode = :stcode and q.proj_id = (case when :projId=0 then q.proj_id else :projId end) union select DISTINCT p.proj_id, p.proj_name, f.fin_yr_cd, f.fin_yr_desc, q.q1status as stats, case when q.q1status = 'S' then 'Quarter1' end as quarter from  iwmp_m_project p, wdcpmksy_quad_target q,  iwmp_m_fin_year f where p.proj_id = q.proj_id and q.fin_yr_cd = f.fin_yr_cd and q.q1status = 'S' and q.stcode = :stcode and q.proj_id = (case when :projId=0 then q.proj_id else :projId end) order by proj_name, quarter
find1quarterlySLNAData = select p.proj_name, f.fin_yr_desc, i.indicators_desc, t.first_quad as quadtervalue  from iwmp_m_project p, iwmp_m_fin_year f, wdcpmksy_quad_target t, wdcpmksy_m_quad_indicators i where p.proj_id = t.proj_id and t.fin_yr_cd = f.fin_yr_cd and i.indicators_id = t.indicator_id and t.proj_id = :projId and t.fin_yr_cd = :finCd
find2quarterlySLNAData = select p.proj_name, f.fin_yr_desc, i.indicators_desc, t.second_quad as quadtervalue from iwmp_m_project p, iwmp_m_fin_year f, wdcpmksy_quad_target t, wdcpmksy_m_quad_indicators i where p.proj_id = t.proj_id and t.fin_yr_cd = f.fin_yr_cd and i.indicators_id = t.indicator_id and t.proj_id = :projId and t.fin_yr_cd = :finCd
find3quarterlySLNAData = select p.proj_name, f.fin_yr_desc, i.indicators_desc, t.third_quad as quadtervalue from iwmp_m_project p, iwmp_m_fin_year f, wdcpmksy_quad_target t, wdcpmksy_m_quad_indicators i where p.proj_id = t.proj_id and t.fin_yr_cd = f.fin_yr_cd and i.indicators_id = t.indicator_id and t.proj_id = :projId and t.fin_yr_cd = :finCd
find4quarterlySLNAData = select p.proj_name, f.fin_yr_desc, i.indicators_desc, t.fourth_quad as quadtervalue from iwmp_m_project p, iwmp_m_fin_year f, wdcpmksy_quad_target t, wdcpmksy_m_quad_indicators i where p.proj_id = t.proj_id and t.fin_yr_cd = f.fin_yr_cd and i.indicators_id = t.indicator_id and t.proj_id = :projId and t.fin_yr_cd = :finCd
update1quarterlySLNAData = update wdcpmksy_quad_target set q1status = :status, q1remarks = :remarks where proj_id = :projId and fin_yr_cd = :finCd
update2quarterlySLNAData = update wdcpmksy_quad_target set q2status = :status, q2remarks = :remarks where proj_id = :projId and fin_yr_cd = :finCd
update3quarterlySLNAData = update wdcpmksy_quad_target set q3status = :status, q3remarks = :remarks where proj_id = :projId and fin_yr_cd = :finCd
update4quarterlySLNAData = update wdcpmksy_quad_target set q4status = :status, q4remarks = :remarks where proj_id = :projId and fin_yr_cd = :finCd
getSLNACompletedData = select DISTINCT p.proj_id, p.proj_name, f.fin_yr_cd, f.fin_yr_desc from wdcpmksy_quad_target t, iwmp_m_project p, iwmp_m_fin_year f where p.proj_id = t.proj_id and t.stcode = :stcode and  t.fin_yr_cd = f.fin_yr_cd and 'C' in (q1status, q2status, q3status, q4status)			
getCompleteQuadData = select p.proj_name, f.fin_yr_desc, i.indicators_desc, case t.q1status when 'C' then t.first_quad else 0 end first_quad, case t.q2status when 'C' then t.second_quad else 0 end second_quad, case t.q3status when 'C' then t.third_quad else 0 end third_quad, case t.q4status when 'C' then t.fourth_quad else 0 end fourth_quad from  wdcpmksy_quad_target t, iwmp_m_project p, iwmp_m_fin_year f, wdcpmksy_m_quad_indicators i where p.proj_id = t.proj_id and f.fin_yr_cd = t.fin_yr_cd and i.indicators_id = t.indicator_id and t.proj_id = :project and t.fin_yr_cd = :financial 

stateWiseStatusOtherActivity=select s.st_name, s.st_code, cast(count(DISTINCT d.dcode) as Integer) as total_dist, cast(count(distinct proj_id) as Integer) as total_project, cast((select COALESCE(sum(totalno), 0) from training_main m where s.st_code=m.st_code) as Integer) as train_conduct, cast((select COALESCE(sum(td.person_no), 0) from training_main m, training_detail td where s.st_code=m.st_code and m.training_id=td.training_id) as Integer) as person_train, cast((select COALESCE(sum(totalno), 0) from iwmp_district d, iwmp_m_project p, shg_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and group_type='group' ) as Integer) as total_group, cast((select COALESCE(sum(totalno), 0) from iwmp_district d, iwmp_m_project p, shg_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and group_type in('oldSHG','newSHG')  ) as Integer) as total_shg, cast((select COALESCE(sum(totalno), 0) from iwmp_district d, iwmp_m_project p, fpo_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='c' ) as Integer) as total_fpo,	cast((select COALESCE(sum(e.no_activities), 0) from iwmp_district d, iwmp_m_project p, livelihood_epa_prod bm, epa_detail e where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.lep_id=e.lep_id and e.status='C' and bm.head_type='epa' ) as Integer) as total_epa, cast((select COALESCE(sum(e.no_activities), 0) from iwmp_district d, iwmp_m_project p, livelihood_epa_prod bm, production_detail e where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.lep_id=e.lep_id and e.status='C' and bm.head_type='production' ) as Integer) as total_production, cast((select COALESCE(sum(e.no_activities), 0) from iwmp_district d, iwmp_m_project p, livelihood_epa_prod bm, livelihood_detail e where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.lep_id=e.lep_id and e.status='C' and bm.head_type='livelihood' ) as Integer) as total_livelihood from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 group by s.st_name, s.st_code  order by s.st_name
stateWiseStatusBaselNetTreatArea=select s.st_name, s.st_code, cast(count(DISTINCT d.dcode) as Integer) as total_dist, cast(count(distinct proj_id) as Integer) as total_project, ROUND(sum(area_proposed),4) as project_area, ROUND(coalesce((select sum(area_proposed) from iwmp_district d,iwmp_m_project q where d.dcode=q.dcode and d.st_code=s.st_code and proj_id in (select proj_id from bls_out_main where status='C' )),0.0000),4) as proj_area_coverbasel, ROUND(coalesce((select sum(area) from iwmp_district d,iwmp_m_project p,bls_out_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C'), 0.00),4) as plot_area_basel, coalesce(cast(((select sum(area) from iwmp_district d,iwmp_m_project p,bls_out_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') / sum(area_proposed)*100) as numeric(10,2)), 0)  as percentage_area, ROUND(coalesce((select tot_geo_area_hec - (tot_untreat_area_hec + area_by_preiwmp_proj + area_by_other_ws +coalesce(iwmp_wdcpmksy_area,0.00000)+ round(sum(p.area_proposed/100000.0),5) + tot_area_asur_irrig) from slna_st_profile sf where sf.status='c' and sf.state_cd=s.st_code), 0.00),5) as net_treat_area from iwmp_state s inner join iwmp_district d on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode where status='C' and wdcpmksy=1 group by s.st_name, s.st_code order by s.st_name
stateWiseAdditionalParameter=select s.st_name, s.st_code, cast((select COALESCE(sum(man_day_gen), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as man_day, cast((select COALESCE(sum(farmer_sc), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as sc, cast((select COALESCE(sum(farmer_st), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as st, cast((select COALESCE(sum(others), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as other, cast((select COALESCE(sum(farmer_sc+farmer_st+others), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as total, cast((select COALESCE(sum(farmer_female), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as female, cast((select COALESCE(sum(farmer_small), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as small, cast((select COALESCE(sum(farmer_mirginal), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as mirginal, cast((select COALESCE(sum(farmer_landless), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as landless, cast((select COALESCE(sum(farmer_bpl), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as bpl from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 group by s.st_name, s.st_code  order by s.st_name
stateWiseAdditionalParameterfinyr=select s.st_name, s.st_code, cast((select COALESCE(sum(man_day_gen), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as man_day, cast((select COALESCE(sum(farmer_sc), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as sc, cast((select COALESCE(sum(farmer_st), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as st, cast((select COALESCE(sum(others), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as other, cast((select COALESCE(sum(farmer_sc+farmer_st+others), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as total, cast((select COALESCE(sum(farmer_female), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as female, cast((select COALESCE(sum(farmer_small), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as small, cast((select COALESCE(sum(farmer_mirginal), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as mirginal, cast((select COALESCE(sum(farmer_landless), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as landless, cast((select COALESCE(sum(farmer_bpl), 0) from iwmp_district d, iwmp_m_project p, outcome_2_data bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as bpl from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 group by s.st_name, s.st_code  order by s.st_name
districtWiseAdditionalParameter=select s.st_name, s.st_code, d.dist_name, d.dcode, cast((select COALESCE(sum(man_day_gen), 0) from iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as man_day, cast((select COALESCE(sum(farmer_sc), 0) from  iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as sc, cast((select COALESCE(sum(farmer_st), 0) from  iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as st, cast((select COALESCE(sum(others), 0) from  iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as other, cast((select COALESCE(sum(farmer_sc+farmer_st+others), 0) from  iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as total, cast((select COALESCE(sum(farmer_female), 0) from  iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as female, cast((select COALESCE(sum(farmer_small), 0) from  iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as small, cast((select COALESCE(sum(farmer_mirginal), 0) from  iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as mirginal, cast((select COALESCE(sum(farmer_landless), 0) from  iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as landless, cast((select COALESCE(sum(farmer_bpl), 0) from  iwmp_m_project p, outcome_2_data bm where   d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as bpl from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE s.st_code=:stcode and d.dist_proj is true and wdcpmksy=1 group by s.st_name, s.st_code, d.dist_name, d.dcode  order by s.st_name, d.dist_name
districtWiseAdditionalParameterfinyr=select s.st_name, s.st_code, d.dist_name, d.dcode, cast((select COALESCE(sum(man_day_gen), 0) from iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as man_day, cast((select COALESCE(sum(farmer_sc), 0) from  iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as sc, cast((select COALESCE(sum(farmer_st), 0) from iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as st, cast((select COALESCE(sum(others), 0) from iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as other, cast((select COALESCE(sum(farmer_sc+farmer_st+others), 0) from iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as total, cast((select COALESCE(sum(farmer_female), 0) from iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as female, cast((select COALESCE(sum(farmer_small), 0) from  iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as small, cast((select COALESCE(sum(farmer_mirginal), 0) from iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as mirginal, cast((select COALESCE(sum(farmer_landless), 0) from  iwmp_m_project p, outcome_2_data bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as landless, cast((select COALESCE(sum(farmer_bpl), 0) from  iwmp_m_project p, outcome_2_data bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as bpl from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE s.st_code=:stcode and d.dist_proj is true and wdcpmksy=1 group by s.st_name, s.st_code, d.dist_name, d.dcode order by s.st_name, d.dist_name
projectWiseAdditionalParameter=select s.st_name, s.st_code, d.dist_name, d.dcode, proj_id, proj_name, cast((select COALESCE(sum(man_day_gen), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as man_day, cast((select COALESCE(sum(farmer_sc), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as sc, cast((select COALESCE(sum(farmer_st), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as st, cast((select COALESCE(sum(others), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as other, cast((select COALESCE(sum(farmer_sc+farmer_st+others), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as total, cast((select COALESCE(sum(farmer_female), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as female, cast((select COALESCE(sum(farmer_small), 0) from  outcome_2_data bm where p.proj_id=bm.proj_id and bm.status='C') as Integer) as small, cast((select COALESCE(sum(farmer_mirginal), 0) from outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as mirginal, cast((select COALESCE(sum(farmer_landless), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as landless, cast((select COALESCE(sum(farmer_bpl), 0) from   outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C') as Integer) as bpl from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE d.dcode=:discode group by s.st_name, s.st_code, d.dist_name, d.dcode, proj_id, proj_name  order by s.st_name, d.dist_name, proj_name
projectWiseAdditionalParameterfinyr=select s.st_name, s.st_code, d.dist_name, d.dcode, proj_id, proj_name, cast((select COALESCE(sum(man_day_gen), 0) from outcome_2_data bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as man_day, cast((select COALESCE(sum(farmer_sc), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as sc, cast((select COALESCE(sum(farmer_st), 0) from  outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as st, cast((select COALESCE(sum(others), 0) from outcome_2_data bm where  p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as other, cast((select COALESCE(sum(farmer_sc+farmer_st+others), 0) from outcome_2_data bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as total, cast((select COALESCE(sum(farmer_female), 0) from outcome_2_data bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as female, cast((select COALESCE(sum(farmer_small), 0) from  outcome_2_data bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as small, cast((select COALESCE(sum(farmer_mirginal), 0) from  outcome_2_data bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as mirginal, cast((select COALESCE(sum(farmer_landless), 0) from  outcome_2_data bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as landless, cast((select COALESCE(sum(farmer_bpl), 0) from  outcome_2_data bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=:fin) as Integer) as bpl from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code inner join iwmp_m_project p on p.dcode=d.dcode WHERE d.dcode=:discode group by s.st_name, s.st_code, d.dist_name, d.dcode, proj_id, proj_name  order by s.st_name, d.dist_name, proj_name
getoutcomedegradedData=select projname as proj_name, projid as proj_id, degraded_land + rainfed as degraded_rainfed from (select proj_name as projname, p.proj_id as projid, sum(case classification_land_id when 6 then area else 0 end) degraded_land, sum(case classification_land_id when 7 then area else 0 end) rainfed from iwmp_m_project p LEFT join bls_out_main bm on p.proj_id=bm.proj_id LEFT join bls_out_detail boutdet on bm.bls_out_main_id_pk=boutdet.bls_out_main_id where bm.status='C' and p.proj_id = :projectId group by p.proj_name ,p.proj_id) as f LEFT join (select proj_name as projname1, p.proj_id as projid1, a.* from (select proj_id from bls_out_detail_crop detcrop, bls_out_main bmm, bls_out_detail boutdett where bmm.bls_out_main_id_pk=boutdett.bls_out_main_id and  detcrop.bls_out_detail_id=boutdett.bls_out_detail_id_pk and bmm.status = 'C' group by proj_id) as a right join iwmp_m_project p on p.proj_id = a.proj_id where p.proj_id = :projectId order by proj_name) as k on k.proj_id = f.projid order by projname

#getStwiseExpndtr = select st_name as stname, st_code as stcode, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where dcode is not null and (bcode is null and gcode is null and village_code is null) and p.st_code = s.st_code),0) dexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where bcode is not null and (gcode is null and village_code is null) and p.st_code = s.st_code),0) bexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where gcode is not null and village_code is null and p.st_code = s.st_code),0) gexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where village_code is not null and p.st_code = s.st_code),0) vexpndtr,COALESCE((select count(distinct transaction_id ) from pfms_eatmisdata_detail p where p.st_code = s.st_code),0) totaltranx, COALESCE((select count(distinct transaction_id ) from pfms_eatmisdata_detail p where proj_id is not null and p.st_code = s.st_code),0) mappedtranx from iwmp_state s where wdcpmksy =1 order by s.st_name
getStwiseExpndtr=select st_name as stname, st_code as stcode, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where dcode is not null and (bcode is null and gcode is null and village_code is null) and p.st_code = s.st_code),0) dexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where bcode is not null and (gcode is null and village_code is null) and p.st_code = s.st_code),0) bexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where gcode is not null and village_code is null and p.st_code = s.st_code),0) gexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where village_code is not null and p.st_code = s.st_code),0) vexpndtr,COALESCE((select count(*) from pfms_eatmisdata_detail p where p.st_code = s.st_code),0) totaltranx,COALESCE((select count(*) from pfms_eatmisdata_detail p where proj_id is not null and status = 'C' and p.st_code = s.st_code),0) mappedtranx,COALESCE((select count(*) from pfms_eatmisdata_detail p where proj_id is not null and totalworks is not null and status = 'C' and wistatus = 'C' and p.st_code = s.st_code),0) mappedworkid from iwmp_state s where wdcpmksy =1 order by s.st_name
#getDistwiseExpndtr = select dist_name as distname, dcode, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where dcode is not null and (bcode is null and gcode is null and village_code is null) and p.dcode = d.dcode),0) dexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where bcode is not null and (gcode is null and village_code is null) and p.dcode = d.dcode),0) bexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where gcode is not null and village_code is null and p.dcode = d.dcode),0) gexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where village_code is not null and p.dcode = d.dcode),0) vexpndtr, COALESCE((select count(distinct transaction_id ) from pfms_eatmisdata_detail p where p.dcode = d.dcode),0) totaltranx, COALESCE((select count(distinct transaction_id ) from pfms_eatmisdata_detail p where proj_id is not null and p.dcode = d.dcode),0) mappedtranx from iwmp_district d where d.st_code = :stCode and d.dist_proj=true order by d.dist_name
getDistwiseExpndtr=select dist_name as distname, dcode, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where dcode is not null and (bcode is null and gcode is null and village_code is null) and p.dcode = d.dcode),0) dexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where bcode is not null and (gcode is null and village_code is null) and p.dcode = d.dcode),0) bexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where gcode is not null and village_code is null and p.dcode = d.dcode),0) gexpndtr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where village_code is not null and p.dcode = d.dcode),0) vexpndtr, COALESCE((select count(distinct transaction_id ) from pfms_eatmisdata_detail p where p.dcode = d.dcode),0) totaltranx, COALESCE((select count(distinct transaction_id ) from pfms_eatmisdata_detail p where proj_id is not null and p.dcode = d.dcode),0) mappedtranx, COALESCE((select count(*) from pfms_eatmisdata_detail p where proj_id is not null and totalworks is not null and status = 'C' and wistatus = 'C' and p.dcode = d.dcode),0)mappedworkid from iwmp_district d where d.st_code = :stCode and d.dist_proj=true order by d.dist_name
getTranxMappedWithProjData =select transaction_id as tranxid, invoice_no as invoiceno, COALESCE((select hierarchy_level from pfms_m_agency a where agency_unique_code = a.unique_agency_code),'') tranxlevel, agency_unique_code as agencycode, agency_name as agencyname, COALESCE((select block_name from iwmp_block b where bcode=pe.bcode),'') blockName, COALESCE((select gram_panchayat_name from iwmp_gram_panchayat g where gcode=pe.gcode),'') gramname, COALESCE(village_code,0) villcode, total_amount as totalamount, COALESCE((select proj_name from iwmp_m_project p where proj_id = pe.proj_id),'') projname, COALESCE((select proj_id from iwmp_m_project p where proj_id = pe.proj_id),0) projid, to_char(date,'dd/MM/yyyy') as tranxdate from pfms_eatmisdata_detail pe where pe.dcode = :distCode order by tranxdate desc


#createAssetOtherActivityName=select cast(assetid as integer) as assetid, (SELECT block_name FROM iwmp_block b, iwmp_gram_panchayat g, iwmp_village iv where b.bcode=g.bcode and g.gcode=iv.gcode and iv.vcode=p.vcode) as blockname, p.vcode, village_name, (SELECT head_desc FROM iwmp_m_phy_heads b, iwmp_m_phy_activity a where b.head_code=a.head_code and a.activity_code=p.phy_activity_code) as headname, (SELECT activity_desc FROM iwmp_m_phy_activity a where a.activity_code=p.phy_activity_code) as actname, phy_activity_code, oa.other_activity_code, other_activity_desc, cast(oa.seq_no as integer) as seq_no from iwmp_project_physical_asset p, iwmp_village v, iwmp_m_phy_activity ac, wdcpmksy_m_phy_other_activity oa where proj_id=:proj and fin_yr_cd=:fin and v.vcode=p.vcode and ac.activity_code=p.phy_activity_code and oa.activity_code=p.phy_activity_code and oa.st_code=:stcd and activity_desc='Others'  order by assetid, headname, phy_activity_code, oa.seq_no
createAssetOtherActivityName=select distinct cast(assetid as integer) as assetid, (SELECT block_name FROM iwmp_block b, iwmp_gram_panchayat g, iwmp_village iv where b.bcode=g.bcode and g.gcode=iv.gcode and iv.vcode=p.vcode) as blockname, p.vcode, village_name, (SELECT head_desc FROM iwmp_m_phy_heads b, iwmp_m_phy_activity a where b.head_code=a.head_code and a.activity_code=p.phy_activity_code) as headname, (SELECT activity_desc FROM iwmp_m_phy_activity a where a.activity_code=p.phy_activity_code) as actname, phy_activity_code, (select string_agg(cast(other_activity_code as character varying(200)), ',') from wdcpmksy_m_phy_other_activity oa where  oa.activity_code=p.phy_activity_code  and oa.st_code=:stcd) as other_activity_code, (select string_agg(cast(other_activity_desc as character varying(2000)), ',') from wdcpmksy_m_phy_other_activity oa where  oa.activity_code=p.phy_activity_code  and oa.st_code=:stcd) as other_activity_desc, p.other_activity_code as other_activity_code_save  from iwmp_project_physical_asset p, iwmp_village v, iwmp_m_phy_activity ac where proj_id=:proj and fin_yr_cd=:fin and v.vcode=p.vcode and ac.activity_code=p.phy_activity_code  and activity_desc='Others'  order by assetid, headname, phy_activity_code
getOtherActivityNameid=select other_activity_code from public.wdcpmksy_m_phy_other_activity where other_activity_desc=:actdes and st_code=:stcd
updateOtherActivityName=update iwmp_project_physical_asset set other_activity_code=:otherid where assetid=:asset
#getAssetOtherActivityName=select cast(assetid as integer) as assetid1, (SELECT block_name FROM iwmp_block b, iwmp_gram_panchayat g, iwmp_village iv where b.bcode=g.bcode and g.gcode=iv.gcode and iv.vcode=p.vcode) as blockname, p.vcode, village_name, (SELECT head_desc FROM iwmp_m_phy_heads b, iwmp_m_phy_activity a where b.head_code=a.head_code and a.activity_code=p.phy_activity_code) as headname, (SELECT activity_desc FROM iwmp_m_phy_activity a where a.activity_code=p.phy_activity_code) as actname, phy_activity_code, p.other_activity_code as otheractid, other_activity_desc from iwmp_project_physical_asset p, iwmp_village v, iwmp_m_phy_activity ac, wdcpmksy_m_phy_other_activity oa where proj_id=:proj and fin_yr_cd=:fin and v.vcode=p.vcode and ac.activity_code=p.phy_activity_code and oa.activity_code=p.phy_activity_code and p.other_activity_code=oa.other_activity_code and activity_desc='Others'  order by assetid, headname, phy_activity_code, oa.seq_no
getAssetOtherActivityName=select cast(assetid as integer) as assetid1, (SELECT block_name FROM iwmp_block b, iwmp_gram_panchayat g, iwmp_village iv where b.bcode=g.bcode and g.gcode=iv.gcode and iv.vcode=p.vcode) as blockname, p.vcode, village_name, (SELECT head_desc FROM iwmp_m_phy_heads b, iwmp_m_phy_activity a where b.head_code=a.head_code and a.activity_code=p.phy_activity_code) as headname, (SELECT activity_desc FROM iwmp_m_phy_activity a where a.activity_code=p.phy_activity_code) as actname, phy_activity_code, p.other_activity_code as otheractid, (select other_activity_desc from wdcpmksy_m_phy_other_activity where p.other_activity_code=other_activity_code) as other_activity_desc from iwmp_project_physical_asset p, iwmp_village v, iwmp_m_phy_activity ac where proj_id=:proj and fin_yr_cd=:fin and v.vcode=p.vcode and ac.activity_code=p.phy_activity_code and activity_desc='Others'  order by assetid, headname, phy_activity_code


#getEPADetailWorkId=from EpaDetail where livelihoodEpaProd.headType=:schm and livelihoodEpaProd.iwmpMProject.projectId=:projId and status='C'
getEPADetailWorkId=from EpaDetail where livelihoodEpaProd.headType=:schm and livelihoodEpaProd.iwmpMProject.projectId=:projId and status='C' and MEpaCoreactivity.epaActivityId=:epaid
#getLivelihoodDetailWorkId=from LivelihoodDetail where livelihoodEpaProd.headType=:schm and livelihoodEpaProd.iwmpMProject.projectId=:projId and status='C'
getLivelihoodDetailWorkId=from LivelihoodDetail where livelihoodEpaProd.headType=:schm and livelihoodEpaProd.iwmpMProject.projectId=:projId and status='C' and MLivelihoodCoreactivity.livelihoodCoreactivityId=:livid
#getProductionDetailWorkId=from ProductionDetail where livelihoodEpaProd.headType=:schm and livelihoodEpaProd.iwmpMProject.projectId=:projId and status='C'
getProductionDetailWorkId=from ProductionDetail where livelihoodEpaProd.headType=:schm and livelihoodEpaProd.iwmpMProject.projectId=:projId and status='C' and MProductivityCoreactivity.productivityCoreactivityId=:prdid

getEPADetailWorkIdDraft=from WdcpmksyEpaWorkid where iwmpMProject.projectId=:projId and epaDetail.livelihoodEpaProd.headType=:finYr and status='D' and (actionForward!='F' or actionForward is null) and currentLevel='P' 
getLivelihoodDetailWorkIdDraft=from WdcpmksyLivelihoodWorkid where iwmpMProject.projectId=:projId and livelihoodDetail.livelihoodEpaProd.headType=:finYr and status='D' and (actionForward!='F' or actionForward is null) and currentLevel='P' 
getProductionDetailWorkIdDraft=from WdcpmksyPrdouctionWorkid where iwmpMProject.projectId=:projId and productionDetail.livelihoodEpaProd.headType=:finYr and status='D' and (actionForward!='F' or actionForward is null) and currentLevel='P' 

getAssetIdForEPACreation=select (select cast((coalesce(max(assetid),0)+1) as integer) from wdcpmksy_epa_workid) as asseteid, epa_activity_id as activitycd, epa_desc as activitydesc from m_epa_coreactivity where epa_activity_id=:activitycd
getAssetIdForLivelihoodCreation=select (select cast((coalesce(max(assetid),0)+1) as integer) from wdcpmksy_livelihood_workid) as asseteid, livelihood_coreactivity_id as activitycd, livelihood_coreactivity_desc as activitydesc from m_livelihood_coreactivity where livelihood_coreactivity_id=:activitycd
getAssetIdForProductionCreation=select (select cast((coalesce(max(assetid),0)+1) as integer) from wdcpmksy_prdouction_workid) as asseteid, productivity_coreactivity_id as activitycd, productivity_coreactivity_desc as activitydesc from m_productivity_coreactivity where productivity_coreactivity_id=:activitycd

piafrowardEPAAsset=UPDATE public.wdcpmksy_epa_workid SET  updatedby=:updatedby, updatedon=:updatedon, sent_from=:sentfrom, sent_to=:sentto, action_forward='F', current_level='D' WHERE assetid in (:assetId);
piafrowardLivelihoodAsset=UPDATE public.wdcpmksy_livelihood_workid SET  updatedby=:updatedby, updatedon=:updatedon, sent_from=:sentfrom, sent_to=:sentto, action_forward='F', current_level='D' WHERE assetid in (:assetId);
piafrowardProductionAsset=UPDATE public.wdcpmksy_prdouction_workid SET  updatedby=:updatedby, updatedon=:updatedon, sent_from=:sentfrom, sent_to=:sentto, action_forward='F', current_level='D' WHERE assetid in (:assetId);

deleteEPAAsset=delete from WdcpmksyEpaWorkid where assetid=:assetid
deleteLivelihoodAsset=delete from WdcpmksyLivelihoodWorkid where assetid=:assetid
deleteProductionAsset=delete from WdcpmksyPrdouctionWorkid where assetid=:assetid

completeEPAAsset=update WdcpmksyEpaWorkid set status='C' where iwmpMProject.projectId=:proj
completeLivelihoodAsset=update WdcpmksyLivelihoodWorkid set status='C' where iwmpMProject.projectId=:proj
completeProductionAsset=update WdcpmksyPrdouctionWorkid set status='C' where iwmpMProject.projectId=:proj

villbaselinelist=from BlsOutMain v WHERE  v.iwmpMProject.projectId=:proj and v.status='C' order by v.iwmpVillage.villageName asc
unfreezebaselinevillage=select distinct m.proj_id, (select proj_name from iwmp_m_project where proj_id=m.proj_id ) as proj_name, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village i where  b.bcode = g.bcode and g.gcode=i.gcode and i.vcode=m.vcode) as block, (select gram_panchayat_name from iwmp_gram_panchayat g, iwmp_village i where g.gcode=i.gcode and i.vcode=m.vcode) as grampanchayat, m.vcode, (SELECT village_name from iwmp_village where vcode=m.vcode) as villname from  public.bls_out_main m where m.vcode=:vill and m.status='C' order by villname
unfreezebaselineprojvill=select distinct m.proj_id, (select proj_name from iwmp_m_project where proj_id=m.proj_id ) as proj_name, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village i where  b.bcode = g.bcode and g.gcode=i.gcode and i.vcode=m.vcode) as block, (select gram_panchayat_name from iwmp_gram_panchayat g, iwmp_village i where g.gcode=i.gcode and i.vcode=m.vcode) as grampanchayat, m.vcode, (SELECT village_name from iwmp_village where vcode=m.vcode) as villname from  public.bls_out_main m where m.proj_id=:proj and m.status='C' order by villname
unfreezebalselinecomplete=select unfreezebaselinesurveyplot_villagewise(:vill)

checkAssetStatus=select count(*) from IwmpProjectAssetStatus where iwmpMProject.projectId = :projid and iwmpProjectPhysicalAsset.iwmpMFinYear.finYrCd = :finYear and status = 'O'
checkAssetLivelihoodStatus=select count(*) from WdcpmksyProjectAssetLivelihoodStatus where iwmpMProject.projectId = :projid and status = 'O'
checkAssetProductionStatus=select count(*) from WdcpmksyProjectAssetProductionStatus where iwmpMProject.projectId = :projid and status = 'O'
checkAssetEPAStatus=select count(*) from WdcpmksyProjectAssetEPAStatus where iwmpMProject.projectId = :projid and status = 'O'

deleteAssetStatus=DELETE FROM iwmp_project_asset_status WHERE projid = :projid AND assetid IN (SELECT assetid FROM iwmp_project_physical_asset WHERE fin_yr_cd = :finYear) and status='O';
deletelivelihooddata=delete from wdcpmksy_project_asset_livelihood_status where projid = :projid and status = 'O' 
deleteproductiondata= delete from wdcpmksy_project_asset_prod_status where projid = :projid and status = 'O' 
deleteepadata= delete from wdcpmksy_project_asset_epa_status where projid = :projid and status = 'O'
 
#getStwiseAreaDetail = select stcode, stname, project_area, plot_area, protective_irrigation, assured_irrigation, no_irrigation, private_owner, govt_owned, community_owned, others_owned, cultivable_wasteland, degraded, rainfed, plantation, no_plantation, others_classification, no_crop, single_crop, double_crop, multiple_crop  from (select s.st_code as stcode,st_name as stname,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,a.* from (select st_code,sum(area) plot_area, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation, sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation, sum(case classification_land_id when 9 then area else 0 end) others_classification from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1,a.* from (select st_code, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop, sum(case no_of_crop_id when 11 then area else 0 end ) single_crop, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y on f.stcode=y.stcode1
getStwiseAreaDetail=select stcode, stname, coalesce(project_area,0) as project_area, coalesce(plot_area,0) as plot_area,coalesce(protective_irrigation,0) as protective_irrigation, coalesce(assured_irrigation,0) as assured_irrigation, coalesce(no_irrigation,0) as no_irrigation, coalesce(private_owner,0) as private_owner, coalesce(govt_owned,0) as govt_owned, coalesce(community_owned,0) as community_owned, coalesce(others_owned,0) as others_owned, coalesce(cultivable_wasteland,0) as cultivable_wasteland, coalesce(degraded,0) as degraded, coalesce(rainfed,0) as rainfed, coalesce(plantation,0) as plantation, coalesce(no_plantation,0) as no_plantation, coalesce(others_classification,0) as others_classification, coalesce(no_crop,0) as no_crop, coalesce(single_crop ,0) as single_crop, coalesce(double_crop ,0)as double_crop, coalesce(multiple_crop,0)as multiple_crop from (select s.st_code as stcode,st_name as stname,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,a.* from (select st_code,sum(area) plot_area, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation, sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation, sum(case classification_land_id when 9 then area else 0 end) others_classification from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1,a.* from (select st_code, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop, sum(case no_of_crop_id when 11 then area else 0 end ) single_crop, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y on f.stcode=y.stcode1
#getDistwiseAreaDetail=select distcode, distname, coalesce(project_area,0) as project_area, coalesce(plot_area,0) as plot_area, coalesce(protective_irrigation,0) as protective_irrigation, coalesce(assured_irrigation,0) as assured_irrigation, coalesce(no_irrigation,0) as no_irrigation, coalesce(private_owner,0) as private_owner, coalesce(govt_owned,0) as govt_owned, coalesce(community_owned,0) as community_owned, coalesce(others_owned,0) as others_owned, coalesce(cultivable_wasteland,0) as cultivable_wasteland, coalesce(degraded,0) as degraded, coalesce(rainfed,0) as rainfed, coalesce(plantation,0) as plantation, coalesce(no_plantation,0) as no_plantation, coalesce(others_classification,0) as others_classification, coalesce(no_crop,0) as no_crop, coalesce(single_crop ,0) as single_crop, coalesce(double_crop ,0)as double_crop, coalesce(multiple_crop,0)as multiple_crop from (select d.dcode as distcode, dist_name as distname, (select sum(area_proposed)  from  iwmp_m_project p where  d.dcode=p.dcode and p.status='C') as project_area, a.* from (select dcode, sum(area) plot_area, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation, sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation, sum(case classification_land_id when 9 then area else 0 end) others_classification from iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet, m_bls_outcome mbout where  p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where  st_code=:stcode order by dist_name) as f join (select d.dcode as distcode1, dist_name as distname1, a.* from (select dcode, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop, sum(case no_of_crop_id when 11 then area else 0 end ) single_crop, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop from iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet, m_bls_outcome mbout where p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where  st_code=:stcode order by dist_name) as y on f.distcode=y.distcode1	
getDistwiseAreaDetail = select distcode, distname, coalesce(project_area,0) as project_area, coalesce(plot_area,0) as plot_area, coalesce(protective_irrigation,0) as protective_irrigation, coalesce(assured_irrigation,0) as assured_irrigation, coalesce(no_irrigation,0) as no_irrigation, coalesce(private_owner,0) as private_owner, coalesce(govt_owned,0) as govt_owned, coalesce(community_owned,0) as community_owned, coalesce(others_owned,0) as others_owned, coalesce(cultivable_wasteland,0) as cultivable_wasteland, coalesce(degraded,0) as degraded, coalesce(rainfed,0) as rainfed, coalesce(plantation,0) as plantation, coalesce(no_plantation,0) as no_plantation, coalesce(others_classification,0) as others_classification, coalesce(no_crop,0) as no_crop, coalesce(single_crop ,0) as single_crop, coalesce(double_crop ,0)as double_crop, coalesce(multiple_crop,0)as multiple_crop from (select d.dcode as distcode, dist_name as distname, (select sum(area_proposed)  from  iwmp_m_project p where  d.dcode=p.dcode and p.status='C') as project_area, a.* from (select dcode, sum(area) plot_area, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation, sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation, sum(case classification_land_id when 9 then area else 0 end) others_classification from iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet, m_bls_outcome mbout where  p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where  st_code=:stcode and dist_proj=true order by dist_name) as f join (select d.dcode as distcode1, dist_name as distname1, a.* from (select dcode, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop, sum(case no_of_crop_id when 11 then area else 0 end ) single_crop, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop from iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet, m_bls_outcome mbout where p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where  st_code=:stcode and dist_proj=true order by dist_name) as y on f.distcode=y.distcode1
getProjtwiseAreaDetail=select projcd, projname, coalesce(project_area,0) as project_area, coalesce(plot_area,0) as plot_area, coalesce(protective_irrigation,0) as protective_irrigation, coalesce(assured_irrigation,0) as assured_irrigation, coalesce(no_irrigation,0) as no_irrigation, coalesce(private_owner,0) as private_owner, coalesce(govt_owned,0) as govt_owned, coalesce(community_owned,0) as community_owned, coalesce(others_owned,0) as others_owned, coalesce(cultivable_wasteland,0) as cultivable_wasteland, coalesce(degraded,0) as degraded, coalesce(rainfed,0) as rainfed, coalesce(plantation,0) as plantation, coalesce(no_plantation,0) as no_plantation, coalesce(others_classification,0) as others_classification, coalesce(no_crop,0) as no_crop, coalesce(single_crop ,0) as single_crop, coalesce(double_crop ,0)as double_crop, coalesce(multiple_crop,0)as multiple_crop from (select p.proj_id as projcd, proj_name as projname, area_proposed as project_area,  a.* from (select proj_id, sum(area) plot_area, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation, sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland, sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation, sum(case classification_land_id when 9 then area else 0 end) others_classification from bls_out_main bm, bls_out_detail boutdet, m_bls_outcome mbout where mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by proj_id) as a right join iwmp_m_project p on p.proj_id=a.proj_id where  dcode=:distcode order by proj_name) as f join (select p.proj_id as projcd1, proj_name as projname1, a.* from (select proj_id, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop, sum(case no_of_crop_id when 11 then area else 0 end ) single_crop, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop from  bls_out_main bm, bls_out_detail boutdet, m_bls_outcome mbout where mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by proj_id) as a right join iwmp_m_project p on p.proj_id=a.proj_id where dcode=:distcode order by proj_name) as y on f.projcd=y.projcd1


#getStwiseAreaAchievDetail =select stcode, stname, project_area, plot_area_ach, protective_irrigation_ach, assured_irrigation_ach, no_irrigation_ach, private_owner_ach, govt_owned_ach, community_owned_ach, others_owned_ach, cultivable_wasteland_ach, degraded_ach, rainfed_ach, plantation_ach, no_plantation_ach, others_classification_ach, no_crop_ach, single_crop_ach, double_crop_ach, multiple_crop_ach  from (select s.st_code as stcode,st_name as stname,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,a.* from (select st_code,sum(area) plot_area_ach, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation_ach, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation_ach, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation_ach, sum(case ownership_id when 1 then area else 0 end ) private_owner_ach, sum(case ownership_id when 2 then area else 0 end ) govt_owned_ach, sum(case ownership_id when 3 then area else 0 end ) community_owned_ach, sum(case ownership_id when 4 then area else 0 end ) others_owned_ach, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland_ach, sum(case classification_land_id when 6 then area else 0 end) degraded_ach, sum(case classification_land_id when 7 then area else 0 end) rainfed_ach, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation_ach, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation_ach, sum(case classification_land_id when 9 then area else 0 end) others_classification_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1,a.* from (select st_code, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop_ach, sum(case no_of_crop_id when 11 then area else 0 end ) single_crop_ach, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop_ach, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id and mbout.m_bls_out_id_pk = boutdet.classification_land_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y on f.stcode=y.stcode1
getStwiseAreaAchievDetail=select stcode, stname, coalesce(project_area,0)as project_area, coalesce(plot_area_ach, 0) as plot_area_ach, coalesce(protective_irrigation_ach, 0) as protective_irrigation_ach, coalesce(assured_irrigation_ach, 0) as assured_irrigation_ach, coalesce(no_irrigation_ach, 0) as no_irrigation_ach, coalesce(private_owner_ach, 0) as private_owner_ach, coalesce(govt_owned_ach, 0) as govt_owned_ach, coalesce(community_owned_ach, 0) as community_owned_ach, coalesce(others_owned_ach,0)as others_owned_ach, coalesce(cultivable_wasteland_ach,0)as cultivable_wasteland_ach , coalesce(degraded_ach,0)as degraded_ach, coalesce(rainfed_ach,0)as rainfed_ach ,coalesce(plantation_ach,0)as plantation_ach, coalesce(no_plantation_ach,0)as no_plantation_ach , coalesce(others_classification_ach,0)as others_classification_ach, coalesce(no_crop_ach,0)as no_crop_ach, coalesce(single_crop_ach,0)as single_crop_ach, coalesce(double_crop_ach,0)as double_crop_ach, coalesce(multiple_crop_ach,0) as  multiple_crop_ach from (select s.st_code as stcode,st_name as stname,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area, a.* from (select st_code, sum(area) plot_area_ach, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation_ach, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation_ach, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation_ach, sum(case ownership_id when 1 then area else 0 end ) private_owner_ach, sum(case ownership_id when 2 then area else 0 end ) govt_owned_ach, sum(case ownership_id when 3 then area else 0 end ) community_owned_ach, sum(case ownership_id when 4 then area else 0 end ) others_owned_ach, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland_ach, sum(case classification_land_id when 6 then area else 0 end) degraded_ach, sum(case classification_land_id when 7 then area else 0 end) rainfed_ach, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation_ach, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation_ach, sum(case classification_land_id when 9 then area else 0 end) others_classification_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join (select s.st_code as stcode1,st_name as stname1,a.* from (select st_code, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop_ach, sum(case no_of_crop_id when 11 then area else 0 end ) single_crop_ach, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop_ach, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y on f.stcode=y.stcode1
#getStwiseCropAreaDetail = select s.st_code as stcode,st_name as stname,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,(select sum(area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where s.st_code = d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by s.st_code)as plot_area,  a.* from (select st_code, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals, sum(case crop_type_id when 14 then crop_production else 0 end )  cereals_prod, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm, iwmp_m_project p, iwmp_district d where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and p.dcode = d.dcode and boutm.status = 'C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by stname
#getStwiseCropAreaDetail=select stname, stcode, coalesce(project_area, 0) as project_area, coalesce(plot_area, 0) as plot_area, coalesce(cereals, 0) as cereals, coalesce(cereals_prod, 0) as cereals_prod, coalesce(pulses, 0) as pulses, coalesce(pulses_prod,0) as pulses_prod, coalesce(oilseeds, 0) as oilseeds, coalesce(oilseeds_prod, 0) as oilseeds_prod, coalesce(fiber_crops,0) as fiber_crops, coalesce(fiber_crops_prod, 0) as fiber_crops_prod, coalesce(pasture, 0) as pasture, coalesce(pasture_prod, 0) as pasture_prod, coalesce(horticulture, 0) as horticulture, coalesce(horticulture_prod, 0) as horticulture_prod, coalesce(plantation_crops, 0) as plantation_crops, coalesce(plantation_crops_prod, 0) as plantation_crops_prod, coalesce(other_crops, 0) as other_crops, coalesce(other_crops_prod, 0) as other_crops_prod, coalesce(gross_cropped_area, 0) as gross_cropped_area, coalesce(net_sown_area, 0) as net_sown_area from (select s.st_code as stcode,st_name as stname, (select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area, (select sum(area) from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where s.st_code = d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by s.st_code)as plot_area, a.* from (select st_code, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals, sum(case crop_type_id when 14 then crop_production else 0 end )  cereals_prod, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm, iwmp_m_project p, iwmp_district d where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and p.dcode = d.dcode and boutm.status = 'C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by stname) as f	join (select s.st_code as stcode2,st_name as stname2, a.* from(select st_code, sum(crop_area) gross_cropped_area from iwmp_district d,iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code)as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as k on f.stcode = k.stcode2 join(select s.st_name as stnamek, s.st_code as stcodek, (select sum(area) as area from (select sum(area) area, a.proj_id, plot_no from (select max(area) as area, bm.plot_no, p.proj_id, season_id from iwmp_district d,iwmp_m_project p, bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.plot_no, p.proj_id, season_id order by bm.plot_no ) a group by plot_no, a.proj_id) b ) as net_sown_area from iwmp_state s where wdcpmksy=1 group by s.st_name, s.st_code order by s.st_name) as kd on k.stcode2=kd.stcodek order by stname
getStwiseCropAreaDetail=With plot as(select d.st_code, sum(area) as plot_area from iwmp_district d, iwmp_m_project p, bls_out_main bm,bls_out_detail boutdet where bm.bls_out_main_id_pk=boutdet.bls_out_main_id and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' GROUP BY d.st_code), area as(select d.st_code, sum(area_proposed) as project_area from iwmp_district d,iwmp_m_project p where d.dcode=p.dcode and p.status='C' GROUP BY d.st_code), crop as(select d.st_code, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from iwmp_district d, iwmp_m_project p, bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm where p.dcode=d.dcode and boutm.proj_id=p.proj_id and bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.status = 'C' group by d.st_code), net_sown as (select d.st_code, sum(area) net_sown_area from (select  bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from  bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by bm.proj_id, bm.plot_no, season_id order by proj_id ) a, iwmp_district d, iwmp_m_project p where d.dcode=p.dcode and a.proj_id=p.proj_id group by d.st_code), gross_crop as (select d.st_code, sum(crop_area) gross_cropped_area from iwmp_district d, iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet, bls_out_detail_crop detcrop where d.dcode=p.dcode and p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.st_code) SELECT st_name as stname, s.st_code as stcode, COALESCE(a.project_area,0) as project_area, COALESCE(plt.plot_area,0) as plot_area, COALESCE(c.cereals,0) as cereals, COALESCE(c.cereals_prod,0) as cereals_prod, COALESCE(c.pulses,0) as pulses, COALESCE(c.pulses_prod,0) as pulses_prod, COALESCE(c.oilseeds,0) as oilseeds, COALESCE(c.oilseeds_prod,0) as oilseeds_prod, COALESCE(c.fiber_crops,0) as fiber_crops, COALESCE(c.fiber_crops_prod,0) as fiber_crops_prod, COALESCE(c.pasture,0) as pasture, COALESCE(c.pasture_prod,0) as pasture_prod, COALESCE(c.horticulture,0) as horticulture, COALESCE(c.horticulture_prod,0) as horticulture_prod, COALESCE(c.plantation_crops,0) as plantation_crops, COALESCE(c.plantation_crops_prod,0) as plantation_crops_prod, COALESCE(c.other_crops,0) as other_crops, COALESCE(c.other_crops_prod,0) as other_crops_prod, COALESCE(n.net_sown_area,0) as net_sown_area, COALESCE(g.gross_cropped_area,0) as gross_cropped_area FROM iwmp_state s LEFT JOIN plot plt on plt.st_code = s.st_code LEFT JOIN area a on a.st_code = s.st_code LEFT JOIN crop c on c.st_code = s.st_code LEFT JOIN net_sown n on n.st_code = s.st_code LEFT JOIN gross_crop g on g.st_code = s.st_code WHERE wdcpmksy=1 GROUP BY st_name, s.st_code, a.project_area, plt.plot_area, c.cereals, c.cereals_prod, c.pulses, c.pulses_prod, c.oilseeds, c.oilseeds_prod, c.fiber_crops, c.fiber_crops_prod, c.pasture, c.pasture_prod, c.horticulture, c.horticulture_prod, c.plantation_crops, c.plantation_crops_prod, c.other_crops, c.other_crops_prod, n.net_sown_area, g.gross_cropped_area ORDER BY st_name

getDistwiseAreaAchieveDetail=select dcode2, dist_name, coalesce(project_area,0)as project_area, coalesce(plot_area_ach, 0) as plot_area_ach, coalesce(protective_irrigation_ach, 0) as protective_irrigation_ach, coalesce(assured_irrigation_ach, 0) as assured_irrigation_ach, coalesce(no_irrigation_ach, 0) as no_irrigation_ach, coalesce(private_owner_ach, 0) as private_owner_ach, coalesce(govt_owned_ach, 0) as govt_owned_ach, coalesce(community_owned_ach, 0) as community_owned_ach, coalesce(others_owned_ach,0)as others_owned_ach, coalesce(cultivable_wasteland_ach,0)as cultivable_wasteland_ach , coalesce(degraded_ach,0)as degraded_ach, coalesce(rainfed_ach,0)as rainfed_ach ,coalesce(plantation_ach,0)as plantation_ach, coalesce(no_plantation_ach,0)as no_plantation_ach , coalesce(others_classification_ach,0)as others_classification_ach, coalesce(no_crop_ach,0)as no_crop_ach,coalesce(single_crop_ach,0)as single_crop_ach, coalesce(double_crop_ach,0)as double_crop_ach, coalesce(multiple_crop_ach,0) as  multiple_crop_ach from (select d.dcode as dcode2,dist_name as dist_name, (select sum(area_proposed)  from  iwmp_m_project p where  d.dcode=p.dcode and p.status='C') as project_area,a.* from (select d.dcode, sum(area) plot_area_ach, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation_ach, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation_ach, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation_ach, sum(case ownership_id when 1 then area else 0 end ) private_owner_ach, sum(case ownership_id when 2 then area else 0 end ) govt_owned_ach, sum(case ownership_id when 3 then area else 0 end ) community_owned_ach, sum(case ownership_id when 4 then area else 0 end ) others_owned_ach, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland_ach, sum(case classification_land_id when 6 then area else 0 end) degraded_ach, sum(case classification_land_id when 7 then area else 0 end) rainfed_ach, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation_ach, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation_ach, sum(case classification_land_id when 9 then area else 0 end) others_classification_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and d.dist_proj=true and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stcode order by dist_name) as f join (select d.dcode as dcode1,dist_name as distname1,a.* from (select d.dcode, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop_ach, sum(case no_of_crop_id when 11 then area else 0 end ) single_crop_ach,  sum(case no_of_crop_id when 12 then area else 0 end ) double_crop_ach, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by d.dcode) as a right join iwmp_district d on d.dcode=a.dcode where d.st_code=:stcode and d.dist_proj=true order by dist_name) as y on f.dcode2 = y.dcode1;
getProjwiseAreaAchieveDetail=with Achv as (select bm.proj_id, sum(area) plot_area_ach, sum(case irrigation_status_id when 22 then area else 0 end) protective_irrigation_ach, sum(case irrigation_status_id when 23 then area else 0 end) assured_irrigation_ach, sum(case irrigation_status_id when 24 then area else 0 end) no_irrigation_ach, sum(case ownership_id when 1 then area else 0 end) private_owner_ach, sum(case ownership_id when 2 then area else 0 end) govt_owned_ach, sum(case ownership_id when 3 then area else 0 end) community_owned_ach, sum(case ownership_id when 4 then area else 0 end) others_owned_ach, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland_ach, sum(case classification_land_id when 6 then area else 0 end) degraded_ach, sum(case classification_land_id when 7 then area else 0 end) rainfed_ach, sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation_ach, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation_ach, sum(case classification_land_id when 9 then area else 0 end) others_classification_ach, sum(case no_of_crop_id when 10 then area else 0 end) no_crop_ach, sum(case no_of_crop_id when 11 then area else 0 end) single_crop_ach,  sum(case no_of_crop_id when 12 then area else 0 end) double_crop_ach, sum(case no_of_crop_id when 13 then area else 0 end) multiple_crop_ach from bls_out_main_achiev bm join bls_out_detail_achiev bd on bm.bls_out_main_id_pk=bd.bls_out_main_id and bm.status='C' group by bm.proj_id)Select p.proj_id, proj_name, sum(area_proposed) as project_area, plot_area_ach, protective_irrigation_ach, assured_irrigation_ach, no_irrigation_ach, private_owner_ach, govt_owned_ach, community_owned_ach, others_owned_ach, cultivable_wasteland_ach, degraded_ach, rainfed_ach, plantation_ach, no_plantation_ach, others_classification_ach, no_crop_ach, single_crop_ach, double_crop_ach, multiple_crop_ach from iwmp_m_project p join Achv a on p.proj_id=a.proj_id where dcode=:dcode group by p.proj_id, area_proposed, plot_area_ach, protective_irrigation_ach, assured_irrigation_ach, no_irrigation_ach, private_owner_ach, govt_owned_ach, community_owned_ach, others_owned_ach, cultivable_wasteland_ach, degraded_ach, rainfed_ach, plantation_ach, no_plantation_ach, others_classification_ach, no_crop_ach, single_crop_ach, double_crop_ach, multiple_crop_ach order by proj_name

#getStwiseCropAreaOutcomeDetail = select s.st_code as stcode,st_name as stname,(select sum(area_proposed) from iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,(select sum(area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where s.st_code = d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by s.st_code)as plot_area_ach,  a.* from (select st_code, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals_ach, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod_ach, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses_ach, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod_ach, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds_ach, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod_ach, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops_ach, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod_ach, sum(case crop_type_id when 18 then crop_area else 0 end) pasture_ach, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod_ach, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture_ach, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod_ach, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops_ach, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod_ach, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops_ach, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod_ach from bls_out_detail_crop_achiev bodc, bls_out_detail_achiev boutd, bls_out_main_achiev boutm, iwmp_m_project p, iwmp_district d where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and p.dcode = d.dcode and boutm.status = 'C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by stname 
#getStwiseCropAreaOutcomeDetail = select s.st_code as stcode,st_name as stname,(select sum(area_proposed) from iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,(select sum(area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where s.st_code = d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by s.st_code)as plot_area_ach,  a.* from (select st_code, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals_ach, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod_ach, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses_ach, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod_ach, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds_ach, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod_ach, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops_ach, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod_ach, sum(case crop_type_id when 18 then crop_area else 0 end) pasture_ach, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod_ach, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture_ach, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod_ach, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops_ach, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod_ach, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops_ach, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod_ach from bls_out_detail_crop_achiev bodc, bls_out_detail_achiev boutd, bls_out_main_achiev boutm, iwmp_m_project p, iwmp_district d where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and p.dcode = d.dcode and boutm.status = 'C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by stname
#getStwiseCropAreaOutcomeDetail = select s.st_code as stcode,st_name as stname,(select sum(area_proposed) from iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,(select sum(area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where s.st_code = d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by s.st_code)as plot_area_ach,  a.* from (select st_code, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals_ach, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod_ach, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses_ach, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod_ach, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds_ach, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod_ach, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops_ach, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod_ach, sum(case crop_type_id when 18 then crop_area else 0 end) pasture_ach, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod_ach, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture_ach, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod_ach, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops_ach, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod_ach, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops_ach, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod_ach from bls_out_detail_crop_achiev bodc, bls_out_detail_achiev boutd, bls_out_main_achiev boutm, iwmp_m_project p, iwmp_district d where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and p.dcode = d.dcode and boutm.status = 'C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by stname 
getStwiseCropAreaOutcomeDetail=select stcode, stname, project_area, coalesce(plot_area_ach,0) as plot_area_ach , coalesce(st_code,0)as st_code, coalesce(cereals_ach,0) as cereals_ach,coalesce(cereals_prod_ach,0)as cereals_prod_ach,coalesce(pulses_ach,0)as pulses_ach,coalesce(pulses_prod_ach,0)as pulses_prod_ach,coalesce(oilseeds_ach,0)as oilseeds_ach,coalesce(oilseeds_prod_ach,0)as oilseeds_prod_ach,coalesce(fiber_crops_ach,0)as fiber_crops_ach,coalesce(fiber_crops_prod_ach,0)as fiber_crops_prod_ach,coalesce(pasture_ach,0)as pasture_ach,coalesce(pasture_prod_ach,0)as pasture_prod_ach,coalesce(horticulture_ach,0)as horticulture_ach,coalesce(horticulture_prod_ach,0)as horticulture_prod_ach,coalesce(plantation_crops_ach,0)as plantation_crops_ach,coalesce(plantation_crops_prod_ach,0)as plantation_crops_prod_ach,coalesce(other_crops_ach,0)as other_crops_ach,coalesce(other_crops_prod_ach,0)as other_crops_prod_ach from(select s.st_code as stcode,st_name as stname,(select sum(area_proposed) from iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,coalesce((select sum(area) from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where s.st_code = d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by s.st_code), 0)as plot_area_ach,  a.* from (select st_code, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals_ach, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod_ach, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses_ach, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod_ach, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds_ach, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod_ach, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops_ach, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod_ach, sum(case crop_type_id when 18 then crop_area else 0 end) pasture_ach, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod_ach, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture_ach, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod_ach, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops_ach, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod_ach, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops_ach, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod_ach from bls_out_detail_crop_achiev bodc, bls_out_detail_achiev boutd, bls_out_main_achiev boutm, iwmp_m_project p, iwmp_district d where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and p.dcode = d.dcode and boutm.status = 'C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by stname) a
getDistrictwiseCropAreaOutcomeDetail= WITH district_data AS (SELECT  d.dcode AS dcd, d.dist_name,SUM(CASE crop_type_id WHEN 14 THEN crop_area ELSE 0 END) AS cereals_ach,SUM(CASE crop_type_id WHEN 14 THEN crop_production ELSE 0 END) AS cereals_prod_ach, SUM(CASE crop_type_id WHEN 15 THEN crop_area ELSE 0 END) AS pulses_ach, SUM(CASE crop_type_id WHEN 15 THEN crop_production ELSE 0 END) AS pulses_prod_ach, SUM(CASE crop_type_id WHEN 16 THEN crop_area ELSE 0 END) AS oilseeds_ach, SUM(CASE crop_type_id WHEN 16 THEN crop_production ELSE 0 END) AS oilseeds_prod_ach, SUM(CASE crop_type_id WHEN 17 THEN crop_area ELSE 0 END) AS fiber_crops_ach, SUM(CASE crop_type_id WHEN 17 THEN crop_production ELSE 0 END) AS fiber_crops_prod_ach, SUM(CASE crop_type_id WHEN 18 THEN crop_area ELSE 0 END) AS pasture_ach,SUM(CASE crop_type_id WHEN 18 THEN crop_production ELSE 0 END) AS pasture_prod_ach,SUM(CASE crop_type_id WHEN 19 THEN crop_area ELSE 0 END) AS horticulture_ach, SUM(CASE crop_type_id WHEN 19 THEN crop_production ELSE 0 END) AS horticulture_prod_ach, SUM(CASE crop_type_id WHEN 20 THEN crop_area ELSE 0 END) AS plantation_crops_ach, SUM(CASE crop_type_id WHEN 20 THEN crop_production ELSE 0 END) AS plantation_crops_prod_ach, SUM(CASE crop_type_id WHEN 21 THEN crop_area ELSE 0 END) AS other_crops_ach, SUM(CASE crop_type_id WHEN 21 THEN crop_production ELSE 0 END) AS other_crops_prod_ach FROM bls_out_detail_crop_achiev bodc JOIN bls_out_detail_achiev boutd ON bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk JOIN bls_out_main_achiev boutm ON boutd.bls_out_main_id = boutm.bls_out_main_id_pk JOIN iwmp_m_project p ON boutm.proj_id = p.proj_id JOIN iwmp_district d ON p.dcode = d.dcode WHERE boutm.status = 'C' AND d.st_code = :stcode AND d.dist_proj = true GROUP BY  d.dcode, d.dist_name),project_area_data AS (SELECT d.dcode,SUM(p.area_proposed) AS project_area FROM iwmp_m_project p JOIN iwmp_district d ON p.dcode = d.dcode WHERE p.status = 'C' GROUP BY d.dcode),plot_area_ach_data AS (SELECT p.dcode,COALESCE(SUM(area), 0) AS plot_area_ach FROM iwmp_m_project p JOIN bls_out_main_achiev bm ON p.proj_id = bm.proj_id JOIN bls_out_detail_achiev boutdet ON bm.bls_out_main_id_pk = boutdet.bls_out_main_id WHERE bm.status = 'C' GROUP BY  p.dcode)SELECT d.dcode AS dcode, d.dist_name, COALESCE(pa.project_area, 0) AS project_area, COALESCE(pla.plot_area_ach, 0) AS plot_area_ach,  COALESCE(dd.cereals_ach, 0) AS cereals_ach,COALESCE(dd.cereals_prod_ach, 0) AS cereals_prod_ach,COALESCE(dd.pulses_ach, 0) AS pulses_ach,COALESCE(dd.pulses_prod_ach, 0) AS pulses_prod_ach,COALESCE(dd.oilseeds_ach, 0) AS oilseeds_ach,COALESCE(dd.oilseeds_prod_ach, 0) AS oilseeds_prod_ach,COALESCE(dd.fiber_crops_ach, 0) AS fiber_crops_ach,COALESCE(dd.fiber_crops_prod_ach, 0) AS fiber_crops_prod_ach,COALESCE(dd.pasture_ach, 0) AS pasture_ach,COALESCE(dd.pasture_prod_ach, 0) AS pasture_prod_ach,COALESCE(dd.horticulture_ach, 0) AS horticulture_ach,COALESCE(dd.horticulture_prod_ach, 0) AS horticulture_prod_ach,COALESCE(dd.plantation_crops_ach, 0) AS plantation_crops_ach, COALESCE(dd.plantation_crops_prod_ach, 0) AS plantation_crops_prod_ach,COALESCE(dd.other_crops_ach, 0) AS other_crops_ach,COALESCE(dd.other_crops_prod_ach, 0) AS other_crops_prod_ach FROM iwmp_district d LEFT JOIN district_data dd ON d.dcode = dd.dcd LEFT JOIN project_area_data pa ON d.dcode = pa.dcode LEFT JOIN plot_area_ach_data pla ON d.dcode = pla.dcode WHERE d.st_code = :stcode AND d.dist_proj = true ORDER BY d.dist_name;

#deleteAssetStatus=delete from iwmp_project_asset_status where projid = :projid
#deleteAssetStatus=delete from iwmp_project_asset_status where projid = :projid

ListofuploadedFileforState=select id, (select st_name from iwmp_state where iwmp_state.st_code =ud.st_code) as state_name, (select uc.upload_category from iwmp_upload_category as uc where uc.id = ud.upload_category_id ) as upload, subject, file_name, is_new, (path ||file_name)  as file_full_path, publish, ud.upload_category_id, file_extension, st_code, status from iwmp_user_upload_details as ud where st_code<>0 and st_code=(Case when :stcode=0 then st_code else :stcode end) and (status<>'C' or status is null) order by state_name, created_date desc
doLRApprovalUploadingDocument=update iwmp_user_upload_details set status='C' where id=:upid
distWiseStatusBaselNetTreatArea= select d.dist_name, d.dcode, cast(count(distinct proj_id) as Integer) as total_project, cast((select count(distinct wc_id) from  iwmp_m_project p, iwmp_m_wc w where  d.dcode=p.dcode and p.proj_id=w.proj_id ) as Integer) as total_wc, cast((select count(distinct l.vcode) from iwmp_m_project p, iwmp_m_wc w, iwmp_project_location l, iwmp_project_wc pw where  d.dcode=p.dcode and p.proj_id=w.proj_id and p.proj_id=l.proj_id and l.proj_location_id=pw.proj_location_id and pw.wc_id=w.wc_id and pw.status=true) as Integer) as total_villin_wc, cast((select count(distinct vcode) from  iwmp_m_project p, bls_out_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as total_vill_Basel, cast((select count(distinct vcode) from iwmp_m_project p, iwmp_project_location bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status=true) as Integer) as total_vill_project, cast((select count(distinct p.proj_id) from iwmp_m_project p, iwmp_project_location bm, iwmp_project_wc w where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.proj_location_id=w.proj_location_id and w.status=true) as Integer) as tot_proj_loc from iwmp_district d right join iwmp_m_project p on p.dcode=d.dcode WHERE d.st_code= :stCode and d.dist_proj=true group by d.dist_name, d.dcode order by d.dist_name
projWiseStatusBaselNetTreatArea=SELECT p.proj_name, p.proj_id, (SELECT COUNT(DISTINCT wc_id) FROM iwmp_m_wc w WHERE p.proj_id = w.proj_id) AS totalwc,(SELECT COUNT(DISTINCT l.vcode) FROM iwmp_project_location l JOIN iwmp_project_wc pw ON l.proj_location_id = pw.proj_location_id JOIN iwmp_m_wc w ON pw.wc_id = w.wc_id WHERE p.proj_id = l.proj_id AND pw.status = true) AS totalvillinwc,(SELECT COUNT(DISTINCT bm.vcode) FROM bls_out_main bm WHERE p.proj_id = bm.proj_id AND bm.status = 'C') AS totalvillBasel,(SELECT COUNT(DISTINCT bm.vcode) FROM iwmp_project_location bm WHERE p.proj_id = bm.proj_id AND bm.status = true) AS totalvillproject,(SELECT COUNT(DISTINCT p2.proj_id) FROM iwmp_m_project p2 JOIN iwmp_project_location bm ON p2.proj_id = bm.proj_id JOIN iwmp_project_wc w ON bm.proj_location_id = w.proj_location_id  WHERE p.proj_id = p2.proj_id AND w.status = true) AS totprojloc FROM iwmp_m_project p WHERE p.dcode = :dcode GROUP BY p.proj_name, p.proj_id ORDER BY p.proj_name;

districtwisecurrentstatusOther=select d.dist_name, d.dcode, cast(count(distinct proj_id) as Integer) as total_project, cast(count(distinct v.vcode)  as Integer) as total_village, cast((select count(distinct bm.proj_id) from iwmp_m_project p, iwmp_user_project_map bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id ) as Integer) as tot_proj_permission, cast((select count(distinct bm.proj_id) from iwmp_m_project p, iwmp_project_physical_plan bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') as Integer) as total_project_plan, cast((select count(distinct p.proj_id) from iwmp_m_project p, groundwater_main bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.level_time='basel') as Integer) as tot_proj_basel_ground, cast((select count(distinct reg.user_id) from  iwmp_user_reg as reg, iwmp_user_map  as mp, iwmp_user_project_map up where d.dcode=mp.dcode and  upper(reg.status)='ACTIVE' and reg.user_type='PI' and reg.reg_id=mp.reg_id and reg.reg_id=up.reg_id ) as Integer) as total_pia from iwmp_village v INNER join iwmp_gram_panchayat g on v.gcode=g.gcode inner join iwmp_block b on b.bcode=g.bcode inner join iwmp_district d on d.dcode=b.dcode left join iwmp_m_project p on d.dcode=p.dcode WHERE d.st_code= :stCode and d.dist_proj=true group by d.dist_name, d.dcode order by d.dist_name
districtWiseStatusBaselNetTreatArea=select d.dist_name, d.dcode, cast(count(distinct proj_id) as Integer) as total_project, coalesce(sum(area_proposed),0.00) as project_area, coalesce((select sum(area_proposed) from iwmp_m_project q where d.dcode=q.dcode  and proj_id in (select proj_id from bls_out_main where status='C' )),0.00) as proj_area_coverbasel, coalesce((select sum(area) from iwmp_m_project p,bls_out_main bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C'), 0.00) as plot_area_basel, coalesce(cast(((select sum(area) from iwmp_m_project p,bls_out_main bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C') / sum(area_proposed)*100) as numeric(10,2)), 0)  as percentage_area from iwmp_district d join iwmp_m_project p  on p.dcode=d.dcode where d.st_code= :stCode and d.dist_proj=true group by d.dist_name, d.dcode order by d.dist_name
getLocationAndBaselineDraft=select d.dist_name, p.proj_name as projectname, p.proj_id, (case (select distinct w.status from iwmp_project_location l, iwmp_project_wc w where  l.proj_location_id=w.proj_location_id and l.created_dt=(select max(li.created_dt) from iwmp_project_location li, iwmp_project_wc v where  l.proj_location_id=v.proj_location_id and li.proj_id=l.proj_id) and l.proj_id=p.proj_id limit 1) when false then 'Draft' when  true then 'Completed' else 'Not Filled'  end) as locstatus, COALESCE((select sum(bm.area) from bls_out_main bm where  p.proj_id=bm.proj_id and bm.status='D'),0) as plot_area_basel, (case (select distinct status from bls_out_main b where created_on=(select max(created_on) from bls_out_main li where li.proj_id=p.proj_id) and b.proj_id=p.proj_id order by status DESC limit 1)  when 'D' then 'Draft' when  'C' then 'Completed' else 'Not Filled'  end) as basestatus from iwmp_m_project p, iwmp_district d where d.st_code=:states and p.dcode=d.dcode group by p.proj_name, p.proj_id, dist_name order by dist_name, proj_name
getLocationAndBaselineDistrictDraft=select  p.proj_name as projectname, p.proj_id, (case (select distinct w.status from iwmp_project_location l, iwmp_project_wc w where l.proj_location_id=w.proj_location_id and l.created_dt=(select max(li.created_dt) from iwmp_project_location li, iwmp_project_wc v where l.proj_location_id=v.proj_location_id and li.proj_id=l.proj_id) and l.proj_id=p.proj_id limit 1) when false then 'Draft' when  true then 'Completed' else 'Not Filled'  end) as locstatus, COALESCE((select sum(bm.area) from bls_out_main bm where  p.proj_id=bm.proj_id and bm.status='D'),0) as plot_area_basel, (case (select distinct status from bls_out_main b where created_on=(select max(created_on) from bls_out_main li where li.proj_id=p.proj_id) and b.proj_id=p.proj_id order by status DESC limit 1)  when 'D' then 'Draft' when  'C' then 'Completed' else 'Not Filled'  end) as basestatus from iwmp_m_project p where  p.dcode=:distcd group by p.proj_name, p.proj_id order by  proj_name
districtWiseStatusOtherActivity=select b.dist_name, b.dcode, cast(count(distinct proj_id) as Integer) as total_project,cast((select COALESCE(sum(totalno), 0) from  iwmp_m_project p, shg_main bm where  b.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and group_type='group' ) as Integer) as total_group, cast((select COALESCE(sum(totalno), 0) from  iwmp_m_project p, shg_main bm where b.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and group_type in('oldSHG','newSHG')  ) as Integer) as total_shg, cast((select COALESCE(sum(totalno), 0) from  iwmp_m_project p, fpo_main bm where b.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='c' ) as Integer) as total_fpo,	cast((select COALESCE(sum(e.no_activities), 0) from  iwmp_m_project p, livelihood_epa_prod bm, epa_detail e where b.dcode=p.dcode and p.proj_id=bm.proj_id and bm.lep_id=e.lep_id and e.status='C' and bm.head_type='epa' ) as Integer) as total_epa, cast((select COALESCE(sum(e.no_activities), 0) from  iwmp_m_project p, livelihood_epa_prod bm, production_detail e where b.dcode=p.dcode and p.proj_id=bm.proj_id and bm.lep_id=e.lep_id and e.status='C' and bm.head_type='production' ) as Integer) as total_production, cast((select COALESCE(sum(e.no_activities), 0) from  iwmp_m_project p, livelihood_epa_prod bm, livelihood_detail e where  b.dcode=p.dcode and p.proj_id=bm.proj_id and bm.lep_id=e.lep_id and e.status='C' and bm.head_type='livelihood' ) as Integer) as total_livelihood from iwmp_district b  left join iwmp_m_project p on p.dcode=b.dcode WHERE b.st_code= :stCode and dist_proj=true group by b.dist_name, b.dcode  order by b.dist_name    
#getDistWiseCrpAreaDtl=With project as(select dcode, sum(area_proposed) as project_area from iwmp_m_project p where p.status='C' GROUP BY dcode), plot as(select dcode, sum(area) as plot_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' GROUP BY p.dcode),crop as(select dcode, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod,sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm, iwmp_m_project p where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and  boutm.status ='C' group by dcode) SELECT dist_name, d.dcode, cast(COALESCE(pjt.project_area,0) as numeric) as project_area, cast(COALESCE(plt.plot_area,0) as numeric) as plot_area, cast(COALESCE(c.cereals,0) as numeric) as cereals, cast(COALESCE(c.cereals_prod,0) as numeric) as cereals_prod, cast(COALESCE(c.pulses,0) as numeric) as pulses, cast(COALESCE(c.pulses_prod,0) as numeric) as pulses_prod, cast(COALESCE(c.oilseeds,0) as numeric) as oilseeds, cast(COALESCE(c.oilseeds_prod,0) as numeric) as oilseeds_prod, cast(COALESCE(c.fiber_crops,0) as numeric) as fiber_crops, cast(COALESCE(c.fiber_crops_prod,0) as numeric) as fiber_crops_prod, cast(COALESCE(c.pasture,0) as numeric) as pasture, cast(COALESCE(c.pasture_prod,0) as numeric) as pasture_prod, cast(COALESCE(c.horticulture,0) as numeric) as horticulture, cast(COALESCE(c.horticulture_prod,0) as numeric) as horticulture_prod, cast(COALESCE(c.plantation_crops,0) as numeric) as plantation_crops, cast(COALESCE(c.plantation_crops_prod,0) as numeric) as plantation_crops_prod, cast(COALESCE(c.other_crops,0) as numeric) as other_crops, cast(COALESCE(c.other_crops_prod,0) as numeric) as other_crops_prod FROM iwmp_district d LEFT JOIN project pjt on pjt.dcode = d.dcode LEFT JOIN plot plt on plt.dcode = d.dcode LEFT JOIN crop c on c.dcode = d.dcode WHERE st_code = :stCode GROUP BY d.dcode, dist_name, pjt.project_area, plt.plot_area, c.cereals, c.cereals_prod, c.pulses, c.pulses_prod, c.oilseeds, c.oilseeds_prod, c.fiber_crops, c.fiber_crops_prod, c.pasture, c.pasture_prod, c.horticulture, c.horticulture_prod, c.plantation_crops, c.plantation_crops_prod, c.other_crops, c.other_crops_prod ORDER BY dist_name
#getDistWiseCrpAreaDtl=With project as(select dcode, sum(area_proposed) as project_area from iwmp_m_project p where p.status='C' GROUP BY dcode), plot as(select dcode, sum(area) as plot_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' GROUP BY p.dcode), crop as(select dcode, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm, iwmp_m_project p where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and  boutm.status ='C' group by dcode), net_sown as (select a.dcode, sum(area) net_sown_area from (select p.dcode, bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from iwmp_m_project p, bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where   p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by dcode, bm.proj_id, bm.plot_no, season_id order by dcode ) a group by a.dcode), gross_crop as (select dcode, sum(crop_area) gross_cropped_area from iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet, bls_out_detail_crop detcrop where  p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) SELECT dist_name, d.dcode, cast(COALESCE(pjt.project_area,0) as numeric) as project_area, cast(COALESCE(plt.plot_area,0) as numeric) as plot_area, cast(COALESCE(c.cereals,0) as numeric) as cereals, cast(COALESCE(c.cereals_prod,0) as numeric) as cereals_prod, cast(COALESCE(c.pulses,0) as numeric) as pulses, cast(COALESCE(c.pulses_prod,0) as numeric) as pulses_prod, cast(COALESCE(c.oilseeds,0) as numeric) as oilseeds, cast(COALESCE(c.oilseeds_prod,0) as numeric) as oilseeds_prod, cast(COALESCE(c.fiber_crops,0) as numeric) as fiber_crops, cast(COALESCE(c.fiber_crops_prod,0) as numeric) as fiber_crops_prod, cast(COALESCE(c.pasture,0) as numeric) as pasture, cast(COALESCE(c.pasture_prod,0) as numeric) as pasture_prod, cast(COALESCE(c.horticulture,0) as numeric) as horticulture, cast(COALESCE(c.horticulture_prod,0) as numeric) as horticulture_prod, cast(COALESCE(c.plantation_crops,0) as numeric) as plantation_crops, cast(COALESCE(c.plantation_crops_prod,0) as numeric) as plantation_crops_prod, cast(COALESCE(c.other_crops,0) as numeric) as other_crops, cast(COALESCE(c.other_crops_prod,0) as numeric) as other_crops_prod, COALESCE(n.net_sown_area,0) as net_sown_area, COALESCE(g.gross_cropped_area,0) as gross_cropped_area FROM iwmp_district d LEFT JOIN project pjt on pjt.dcode = d.dcode LEFT JOIN plot plt on plt.dcode = d.dcode LEFT JOIN crop c on c.dcode = d.dcode LEFT JOIN net_sown n on n.dcode = d.dcode LEFT JOIN gross_crop g on g.dcode = d.dcode WHERE st_code = :stCode GROUP BY d.dcode, dist_name, pjt.project_area, plt.plot_area, c.cereals, c.cereals_prod, c.pulses, c.pulses_prod, c.oilseeds, c.oilseeds_prod, c.fiber_crops, c.fiber_crops_prod, c.pasture, c.pasture_prod, c.horticulture, c.horticulture_prod, c.plantation_crops, c.plantation_crops_prod, c.other_crops, c.other_crops_prod, n.net_sown_area, g.gross_cropped_area ORDER BY dist_name
getDistWiseCrpAreaDtl=With project as(select dcode, sum(area_proposed) as project_area from iwmp_m_project p where p.status='C' GROUP BY dcode), plot as(select dcode, sum(area) as plot_area from iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' GROUP BY p.dcode), crop as(select dcode, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm, iwmp_m_project p where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and  boutm.status ='C' group by dcode), net_sown as (select a.dcode, sum(area) net_sown_area from (select p.dcode, bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from iwmp_m_project p, bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where   p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C'  group by dcode, bm.proj_id, bm.plot_no, season_id order by dcode ) a group by a.dcode), gross_crop as (select dcode, sum(crop_area) gross_cropped_area from iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet, bls_out_detail_crop detcrop where  p.proj_id=bm.proj_id and detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) SELECT dist_name, d.dcode, cast(COALESCE(pjt.project_area,0) as numeric) as project_area, cast(COALESCE(plt.plot_area,0) as numeric) as plot_area, cast(COALESCE(c.cereals,0) as numeric) as cereals, cast(COALESCE(c.cereals_prod,0) as numeric) as cereals_prod, cast(COALESCE(c.pulses,0) as numeric) as pulses, cast(COALESCE(c.pulses_prod,0) as numeric) as pulses_prod, cast(COALESCE(c.oilseeds,0) as numeric) as oilseeds, cast(COALESCE(c.oilseeds_prod,0) as numeric) as oilseeds_prod, cast(COALESCE(c.fiber_crops,0) as numeric) as fiber_crops, cast(COALESCE(c.fiber_crops_prod,0) as numeric) as fiber_crops_prod, cast(COALESCE(c.pasture,0) as numeric) as pasture, cast(COALESCE(c.pasture_prod,0) as numeric) as pasture_prod, cast(COALESCE(c.horticulture,0) as numeric) as horticulture, cast(COALESCE(c.horticulture_prod,0) as numeric) as horticulture_prod, cast(COALESCE(c.plantation_crops,0) as numeric) as plantation_crops, cast(COALESCE(c.plantation_crops_prod,0) as numeric) as plantation_crops_prod, cast(COALESCE(c.other_crops,0) as numeric) as other_crops, cast(COALESCE(c.other_crops_prod,0) as numeric) as other_crops_prod, COALESCE(n.net_sown_area,0) as net_sown_area, COALESCE(g.gross_cropped_area,0) as gross_cropped_area FROM iwmp_district d LEFT JOIN project pjt on pjt.dcode = d.dcode LEFT JOIN plot plt on plt.dcode = d.dcode LEFT JOIN crop c on c.dcode = d.dcode LEFT JOIN net_sown n on n.dcode = d.dcode LEFT JOIN gross_crop g on g.dcode = d.dcode WHERE st_code = :stCode and dist_proj=true GROUP BY d.dcode, dist_name, pjt.project_area, plt.plot_area, c.cereals, c.cereals_prod, c.pulses, c.pulses_prod, c.oilseeds, c.oilseeds_prod, c.fiber_crops, c.fiber_crops_prod, c.pasture, c.pasture_prod, c.horticulture, c.horticulture_prod, c.plantation_crops, c.plantation_crops_prod, c.other_crops, c.other_crops_prod, n.net_sown_area, g.gross_cropped_area ORDER BY dist_name

projWiseCurrentStatusPlanAchieve=select distinct p.proj_name, p.proj_id, cast((select count(distinct bm.proj_id) from iwmp_project_physical_plan bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_plan2022, cast((select count(distinct bm.proj_id) from wdcpmksy_project_phy_achievement bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_achievement2022, cast((select count(distinct bm.proj_id) from iwmp_project_physical_plan bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_plan2023, cast((select count(distinct bm.proj_id) from wdcpmksy_project_phy_achievement bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_achievement2023, cast((select count(distinct bm.proj_id) from iwmp_project_physical_plan bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=24) as Integer) as total_project_plan2024, cast((select count(distinct bm.proj_id) from wdcpmksy_project_phy_achievement bm where p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=24) as Integer) as total_project_achievement2024 from iwmp_m_project p where p.dcode=:dcode group by p.proj_name, p.proj_id
projWiseStatusofOtherActivity= WITH shg AS (select s.proj_id, cast(sum(case when s.group_type='group' and s.status='C' then s.totalno else 0 end) as Integer) as total_group, cast(sum(case when s.group_type in('oldSHG','newSHG') and s.status='C' then s.totalno else 0 end) as Integer) as total_shg from shg_main s group by s.proj_id), fpo AS (select proj_id, cast(sum(case when status='c' then totalno else 0 end) as Integer) as total_fpo from fpo_main group by proj_id), act AS (select t.proj_id, cast(sum(case when t.head_type='epa' and e.status='C' then e.no_activities else 0 end) as Integer) as total_epa, cast(sum(case when t.head_type='production' and pd.status='C' then pd.no_activities else 0 end) as Integer) as total_production, cast(sum(case when t.head_type='livelihood' and l.status='C' then l.no_activities else 0 end) as Integer) as total_livelihood from livelihood_epa_prod t left join epa_detail e on e.lep_id=t.lep_id left join production_detail pd on pd.lep_id=t.lep_id left join livelihood_detail l on l.lep_id=t.lep_id group by t.proj_id)SELECT p.proj_name, p.proj_id, COALESCE(sg.total_group ,0) as total_group, COALESCE(sg.total_shg ,0) as total_shg, COALESCE(f.total_fpo ,0) as total_fpo, COALESCE(a.total_epa ,0) as total_epa, COALESCE(a.total_production ,0) as total_production, COALESCE(a.total_livelihood ,0) as total_livelihood FROM iwmp_m_project p LEFT JOIN fpo f on f.proj_id=p.proj_id  LEFT JOIN shg sg on sg.proj_id=p.proj_id LEFT JOIN act a on a.proj_id=p.proj_id WHERE p.dcode=:dcode GROUP BY p.proj_name, p.proj_id, sg.total_group, sg.total_shg, f.total_fpo, a.total_epa, a.total_production, a.total_livelihood ORDER BY p.proj_name
projWiseStatusBaseArea=WITH bls_sums AS (SELECT bm.proj_id,SUM(bm.area) AS total_area FROM bls_out_main bm WHERE bm.status = 'C'GROUP BY bm.proj_id),proj_sums AS (SELECT q.proj_id,SUM(q.area_proposed) AS total_area_proposed FROM iwmp_m_project q WHERE q.proj_id IN (SELECT proj_id FROM bls_out_main WHERE status = 'C') GROUP BY q.proj_id)SELECT p.proj_name, p.proj_id,  COALESCE(p.area_proposed, 0.00) AS project_area,COALESCE(ps.total_area_proposed, 0.00) AS proj_area_coverbasel,COALESCE(bs.total_area, 0.00) AS plot_area_basel,COALESCE(CAST(bs.total_area / NULLIF(p.area_proposed, 0) * 100 AS NUMERIC(10, 2)), 0.00) AS percentage_area FROM iwmp_m_project p LEFT JOIN proj_sums ps ON p.proj_id = ps.proj_id LEFT JOIN bls_sums bs ON p.proj_id = bs.proj_id WHERE p.dcode = :dcode  ORDER BY p.proj_name;
projectwisecurrentstatusOther=select p.proj_name, p.proj_id, cast(count(distinct v.vcode)  as Integer) as covered_village,cast((select count(distinct bm.proj_id) from iwmp_user_project_map bm where p.proj_id=bm.proj_id ) as Integer) as tot_proj_permission, cast((select count(distinct bm.proj_id) from iwmp_project_physical_plan bm where p.proj_id=bm.proj_id and bm.status='C') as Integer) as total_project_plan, cast(coalesce((select count(distinct p.proj_id) from groundwater_main bm where p.proj_id=bm.proj_id and bm.status='C' and bm.level_time='basel'),0) as Integer) as tot_proj_basel_ground from iwmp_project_location v inner join iwmp_m_project p on p.proj_id=v.proj_id  WHERE p.dcode= :dcode group by p.proj_name, p.proj_id order by p.proj_name
#getProjWiseCropAreaDtl=select projname, projid,project_area,plot_area, cereals, cereals_prod, pulses, pulses_prod, oilseeds, oilseeds_prod, fiber_crops, fiber_crops_prod, pasture, pasture_prod, horticulture, horticulture_prod, plantation_crops, plantation_crops_prod, other_crops, other_crops_prod from (select proj_name as projname, p.proj_id as projid, area_proposed as project_area, sum(boutm.area) as plot_area, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals,sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod,sum(case crop_type_id when 15 then crop_area else 0 end ) pulses,sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod,sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from  bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm, iwmp_m_project p where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and boutm.proj_id = p.proj_id and boutm.status = 'C' and dcode=:dCode group by p.proj_name, p.proj_id) as f LEFT join (select proj_name as projname1, p.proj_id as projid1, a.* from (select proj_id from bls_out_detail_crop detcrop, bls_out_main bmm, bls_out_detail boutdett where bmm.bls_out_main_id_pk=boutdett.bls_out_main_id and  detcrop.bls_out_detail_id=boutdett.bls_out_detail_id_pk and bmm.status = 'C' group by proj_id) as a right join iwmp_m_project p on p.proj_id = a.proj_id where dcode=:dCode order by proj_name) as k on k.proj_id = f.projid order by projname
#getProjWiseCropAreaDtl=With plot as(select proj_id, sum(area) as plot_area from bls_out_main bm,bls_out_detail boutdet where bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' GROUP BY proj_id),crop as(select proj_id, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod,sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and  boutm.status = 'C' group by proj_id)SELECT proj_name as projname, p.proj_id, sum(area_proposed) as project_area, COALESCE(plt.plot_area,0) as plot_area, COALESCE(c.cereals,0) as cereals,COALESCE(c.cereals_prod,0) as cereals_prod, COALESCE(c.pulses,0) as pulses, COALESCE(c.pulses_prod,0) as pulses_prod, COALESCE(c.oilseeds,0) as oilseeds, COALESCE(c.oilseeds_prod,0) as oilseeds_prod, COALESCE(c.fiber_crops,0) as fiber_crops, COALESCE(c.fiber_crops_prod,0) as fiber_crops_prod, COALESCE(c.pasture,0) as pasture, COALESCE(c.pasture_prod,0) as pasture_prod, COALESCE(c.horticulture,0) as horticulture, COALESCE(c.horticulture_prod,0) as horticulture_prod, COALESCE(c.plantation_crops,0) as plantation_crops, COALESCE(c.plantation_crops_prod,0) as plantation_crops_prod, COALESCE(c.other_crops,0) as other_crops, COALESCE(c.other_crops_prod,0) as other_crops_prod FROM iwmp_m_project p LEFT JOIN plot plt on plt.proj_id = p.proj_id LEFT JOIN crop c on c.proj_id = p.proj_id WHERE dcode = :dCode GROUP BY p.proj_id, projname, area_proposed, plt.plot_area, c.cereals, c.cereals_prod, c.pulses, c.pulses_prod, c.oilseeds, c.oilseeds_prod, c.fiber_crops, c.fiber_crops_prod, c.pasture, c.pasture_prod, c.horticulture, c.horticulture_prod, c.plantation_crops, c.plantation_crops_prod, c.other_crops, c.other_crops_prod ORDER BY projname
getProjWiseCropAreaDtl=With plot as(select proj_id, sum(area) as plot_area from bls_out_main bm,bls_out_detail boutdet where bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' GROUP BY proj_id), crop as(select proj_id, sum(case crop_type_id when 14 then crop_area else 0 end ) cereals, sum(case crop_type_id when 14 then crop_production else 0 end ) cereals_prod, sum(case crop_type_id when 15 then crop_area else 0 end ) pulses, sum(case crop_type_id when 15 then crop_production else 0 end ) pulses_prod, sum(case crop_type_id when 16 then crop_area else 0 end ) oilseeds, sum(case crop_type_id when 16 then crop_production else 0 end ) oilseeds_prod, sum(case crop_type_id when 17 then crop_area else 0 end) fiber_crops, sum(case crop_type_id when 17 then crop_production else 0 end) fiber_crops_prod, sum(case crop_type_id when 18 then crop_area else 0 end) pasture, sum(case crop_type_id when 18 then crop_production else 0 end) pasture_prod, sum(case crop_type_id when 19 then crop_area else 0 end) horticulture, sum(case crop_type_id when 19 then crop_production else 0 end) horticulture_prod, sum(case crop_type_id when 20 then crop_area else 0 end) plantation_crops, sum(case crop_type_id when 20 then crop_production else 0 end) plantation_crops_prod, sum(case crop_type_id when 21 then crop_area else 0 end) other_crops, sum(case crop_type_id when 21 then crop_production else 0 end) other_crops_prod from bls_out_detail_crop bodc, bls_out_detail boutd, bls_out_main boutm where bodc.bls_out_detail_id = boutd.bls_out_detail_id_pk and boutd.bls_out_main_id = boutm.bls_out_main_id_pk and  boutm.status = 'C' group by proj_id), net_sown as (select a.proj_id, sum(area) net_sown_area from (select  bm.proj_id, bm.plot_no, season_id, max(crop_area) as area from  bls_out_main bm, bls_out_detail det, bls_out_detail_crop detcrop where bm.bls_out_main_id_pk=det.bls_out_main_id and det.no_of_crop_id in (11,12,13) and det.bls_out_detail_id_pk=detcrop.bls_out_detail_id and bm.status='C' group by bm.proj_id, bm.plot_no, season_id order by proj_id ) a group by a.proj_id), gross_crop as (select proj_id, sum(crop_area) gross_cropped_area from  bls_out_main bm, bls_out_detail boutdet, bls_out_detail_crop detcrop where detcrop.bls_out_detail_id=boutdet.bls_out_detail_id_pk and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by proj_id) SELECT proj_name as projname, p.proj_id, sum(area_proposed) as project_area, COALESCE(plt.plot_area,0) as plot_area, COALESCE(c.cereals,0) as cereals, COALESCE(c.cereals_prod,0) as cereals_prod, COALESCE(c.pulses,0) as pulses, COALESCE(c.pulses_prod,0) as pulses_prod, COALESCE(c.oilseeds,0) as oilseeds, COALESCE(c.oilseeds_prod,0) as oilseeds_prod, COALESCE(c.fiber_crops,0) as fiber_crops, COALESCE(c.fiber_crops_prod,0) as fiber_crops_prod, COALESCE(c.pasture,0) as pasture, COALESCE(c.pasture_prod,0) as pasture_prod, COALESCE(c.horticulture,0) as horticulture, COALESCE(c.horticulture_prod,0) as horticulture_prod, COALESCE(c.plantation_crops,0) as plantation_crops, COALESCE(c.plantation_crops_prod,0) as plantation_crops_prod, COALESCE(c.other_crops,0) as other_crops, COALESCE(c.other_crops_prod,0) as other_crops_prod, COALESCE(n.net_sown_area,0) as net_sown_area, COALESCE(g.gross_cropped_area,0) as gross_cropped_area FROM iwmp_m_project p LEFT JOIN plot plt on plt.proj_id = p.proj_id LEFT JOIN crop c on c.proj_id = p.proj_id LEFT JOIN net_sown n on n.proj_id = p.proj_id LEFT JOIN gross_crop g on g.proj_id = p.proj_id WHERE dcode =:dCode GROUP BY p.proj_id, projname, area_proposed, plt.plot_area, c.cereals, c.cereals_prod, c.pulses, c.pulses_prod, c.oilseeds, c.oilseeds_prod, c.fiber_crops, c.fiber_crops_prod, c.pasture, c.pasture_prod, c.horticulture, c.horticulture_prod, c.plantation_crops, c.plantation_crops_prod, c.other_crops, c.other_crops_prod, n.net_sown_area, g.gross_cropped_area ORDER BY projname
#firstQuarterStartingYear=select * from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter1, :im, :jm, :km) as ach left join (select d.st_code, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=22 then first_quad else 0 end) area_diversified_crops_tar, sum(case when q1status='C' and indicator_id=23 then first_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q1status='C' and indicator_id=24 then first_quad else 0 end) increase_croparea_tar, sum(case when q1status='C' and indicator_id=25 then first_quad else 0 end) increase_farmerincome_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code ) as tar on ach.statecode=tar.st_code 
#firstQuarterStartingYear=select * from insert_ommf_querterwise as ach left join (select d.st_code as statecode, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=22 then first_quad else 0 end) area_diversified_crops_tar, sum(case when q1status='C' and indicator_id=23 then first_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q1status='C' and indicator_id=24 then first_quad else 0 end) increase_croparea_tar, sum(case when q1status='C' and indicator_id=25 then first_quad else 0 end) increase_farmerincome_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr group by d.st_code ) as tar on ach.st_code=tar.statecode where ach.fin_yr_cd=:finyr and ach.quarter=:quarter1
#firstQuarterStartingNextYear=select f.statecode, f.statename, f.areaof_degraded_land_achie-s.areaof_degraded_land_achie as areaof_degraded_land_achie, s.area_soilmoisture_activities_achie as area_soilmoisture_activities_achie, s.area_afforestation_horticulture_achie as area_afforestation_horticulture_achie, s.water_created_renovated_achie as water_created_renovated_achie, s.area_diversified_crops_achie-f.area_diversified_crops_achie as area_diversified_crops_achie, s.area_nilsingto_doubmulcrop_achie-f.area_nilsingto_doubmulcrop_achie as area_nilsingto_doubmulcrop_achie, s.increase_croparea_achie - f.increase_croparea_achie as increase_croparea_achie, s.increase_farmerincome_achie - f.increase_farmerincome_achie as increase_farmerincome_achie, s.farmer_benefitte_achie  as farmer_benefitte_achie, s.protective_irrigation_achie  as protective_irrigation_achie, s.mandays_generated_achie  as mandays_generated_achie,  st.*  from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter1, :im, :jm, :km) as f left join (select * from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter2, :im, :jm, :km)) as s on f.statecode=s.statecode LEFT JOIN (select d.st_code, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=22 then first_quad else 0 end) area_diversified_crops_tar, sum(case when q1status='C' and indicator_id=23 then first_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q1status='C' and indicator_id=24 then first_quad else 0 end) increase_croparea_tar, sum(case when q1status='C' and indicator_id=25 then first_quad else 0 end) increase_farmerincome_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.st_code=f.statecode order by statename
#firstQuarterStartingNextYear=select f.st_code, f.st_name, coalesce(r.areaof_degraded_land_achie, 0.0)-coalesce(f.areaof_degraded_land_achie, 0.0) as areaof_degraded_land_achie, coalesce(f.area_soilmoisture_activities_achie, 0.0) as area_soilmoisture_activities_achie, coalesce(f.area_afforestation_horticulture_achie, 0.0) as area_afforestation_horticulture_achie, coalesce(f.water_created_renovated_achie, 0.0) as water_created_renovated_achie, coalesce(f.area_diversified_crops_achie, 0.0)-coalesce(r.area_diversified_crops_achie, 0.0) as area_diversified_crops_achie, coalesce(f.area_nilsingto_doubmulcrop_achie, 0.0)-coalesce(r.area_nilsingto_doubmulcrop_achie, 0.0) as area_nilsingto_doubmulcrop_achie, coalesce(f.increase_croparea_achie, 0.0)- coalesce(r.increase_croparea_achie, 0.0) as increase_croparea_achie, coalesce(f.increase_farmerincome_achie, 0.0)-coalesce(r.increase_farmerincome_achie, 0.0) as increase_farmerincome_achie, coalesce(f.farmer_benefitte_achie, 0) as farmer_benefitte_achie, coalesce(f.protective_irrigation_achie, 0.0) as protective_irrigation_achie, coalesce(f.mandays_generated_achie,0.0) as mandays_generated_achie, st.* from (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter2) as f left join (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter1) r on f.st_code=r.st_code LEFT JOIN (select d.st_code as statecode, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=22 then first_quad else 0 end) area_diversified_crops_tar, sum(case when q1status='C' and indicator_id=23 then first_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q1status='C' and indicator_id=24 then first_quad else 0 end) increase_croparea_tar, sum(case when q1status='C' and indicator_id=25 then first_quad else 0 end) increase_farmerincome_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#secondQuarterStartingYear=select f.statecode, f.statename, f.areaof_degraded_land_achie-s.areaof_degraded_land_achie as areaof_degraded_land_achie, s.area_soilmoisture_activities_achie as area_soilmoisture_activities_achie, s.area_afforestation_horticulture_achie as area_afforestation_horticulture_achie, s.water_created_renovated_achie as water_created_renovated_achie, s.area_diversified_crops_achie-f.area_diversified_crops_achie as area_diversified_crops_achie, s.area_nilsingto_doubmulcrop_achie-f.area_nilsingto_doubmulcrop_achie as area_nilsingto_doubmulcrop_achie, s.increase_croparea_achie - f.increase_croparea_achie as increase_croparea_achie, s.increase_farmerincome_achie - f.increase_farmerincome_achie as increase_farmerincome_achie, s.farmer_benefitte_achie  as farmer_benefitte_achie, s.protective_irrigation_achie  as protective_irrigation_achie, s.mandays_generated_achie  as mandays_generated_achie,  st.*  from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter1, :im, :jm, :km) as f left join (select * from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter2, :im, :jm, :km)) as s on f.statecode=s.statecode LEFT JOIN (select d.st_code, sum(case when q2status='C' and indicator_id in(20,21) then second_quad else 0 end) areaof_degraded_land_tar, sum(case when q2status='C' and indicator_id=3 then second_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q2status='C' and indicator_id in(1,2) then second_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q2status='C' and indicator_id in(4,5) then second_quad else 0 end) water_created_renovated_tar, sum(case when q2status='C' and indicator_id=22 then second_quad else 0 end) area_diversified_crops_tar, sum(case when q2status='C' and indicator_id=23 then second_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q2status='C' and indicator_id=24 then second_quad else 0 end) increase_croparea_tar, sum(case when q2status='C' and indicator_id=25 then second_quad else 0 end) increase_farmerincome_tar, sum(case when q2status='C' and indicator_id=26 then second_quad else 0 end) farmer_benefitte_tar, sum(case when q2status='C' and indicator_id in(6,7) then second_quad else 0 end) protective_irrigation_tar, sum(case when q2status='C' and indicator_id=27 then second_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.st_code=f.statecode order by statename
#secondQuarterStartingYear=select f.st_code, f.st_name, coalesce(r.areaof_degraded_land_achie, 0.0)-coalesce(f.areaof_degraded_land_achie, 0.0) as areaof_degraded_land_achie, coalesce(f.area_soilmoisture_activities_achie, 0.0) as area_soilmoisture_activities_achie, coalesce(f.area_afforestation_horticulture_achie, 0.0) as area_afforestation_horticulture_achie, coalesce(f.water_created_renovated_achie, 0.0) as water_created_renovated_achie, coalesce(f.area_diversified_crops_achie, 0.0)-coalesce(r.area_diversified_crops_achie, 0.0) as area_diversified_crops_achie, coalesce(f.area_nilsingto_doubmulcrop_achie, 0.0)-coalesce(r.area_nilsingto_doubmulcrop_achie, 0.0) as area_nilsingto_doubmulcrop_achie, coalesce(f.increase_croparea_achie, 0.0)- coalesce(r.increase_croparea_achie, 0.0) as increase_croparea_achie, coalesce(f.increase_farmerincome_achie, 0.0)-coalesce(r.increase_farmerincome_achie, 0.0) as increase_farmerincome_achie, coalesce(f.farmer_benefitte_achie, 0) as farmer_benefitte_achie, coalesce(f.protective_irrigation_achie, 0.0) as protective_irrigation_achie, coalesce(f.mandays_generated_achie,0.0) as mandays_generated_achie, st.* from (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter2) as f left join (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter1) r on f.st_code=r.st_code LEFT JOIN (select d.st_code as statecode, sum(case when q2status='C' and indicator_id in(20,21) then second_quad else 0 end) areaof_degraded_land_tar, sum(case when q2status='C' and indicator_id=3 then second_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q2status='C' and indicator_id in(1,2) then second_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q2status='C' and indicator_id in(4,5) then second_quad else 0 end) water_created_renovated_tar, sum(case when q2status='C' and indicator_id=22 then second_quad else 0 end) area_diversified_crops_tar, sum(case when q2status='C' and indicator_id=23 then second_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q2status='C' and indicator_id=24 then second_quad else 0 end) increase_croparea_tar, sum(case when q2status='C' and indicator_id=25 then second_quad else 0 end) increase_farmerincome_tar, sum(case when q2status='C' and indicator_id=26 then second_quad else 0 end) farmer_benefitte_tar, sum(case when q2status='C' and indicator_id in(6,7) then second_quad else 0 end) protective_irrigation_tar, sum(case when q2status='C' and indicator_id=27 then second_quad else 0 end) mandays_generated_tar  from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#thirdQuarterStartingYear=select f.statecode, f.statename, f.areaof_degraded_land_achie-s.areaof_degraded_land_achie as areaof_degraded_land_achie, s.area_soilmoisture_activities_achie as area_soilmoisture_activities_achie, s.area_afforestation_horticulture_achie as area_afforestation_horticulture_achie, s.water_created_renovated_achie as water_created_renovated_achie, s.area_diversified_crops_achie-f.area_diversified_crops_achie as area_diversified_crops_achie, s.area_nilsingto_doubmulcrop_achie-f.area_nilsingto_doubmulcrop_achie as area_nilsingto_doubmulcrop_achie, s.increase_croparea_achie - f.increase_croparea_achie as increase_croparea_achie, s.increase_farmerincome_achie - f.increase_farmerincome_achie as increase_farmerincome_achie, s.farmer_benefitte_achie  as farmer_benefitte_achie, s.protective_irrigation_achie  as protective_irrigation_achie, s.mandays_generated_achie  as mandays_generated_achie,  st.*  from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter1, :im, :jm, :km) as f left join (select * from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter2, :im, :jm, :km)) as s on f.statecode=s.statecode LEFT JOIN (select d.st_code, sum(case when q3status='C' and indicator_id in(20,21) then third_quad else 0 end) areaof_degraded_land_tar, sum(case when q3status='C' and indicator_id=3 then third_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q3status='C' and indicator_id in(1,2) then third_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q3status='C' and indicator_id in(4,5) then third_quad else 0 end) water_created_renovated_tar, sum(case when q3status='C' and indicator_id=22 then third_quad else 0 end) area_diversified_crops_tar, sum(case when q3status='C' and indicator_id=23 then third_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q3status='C' and indicator_id=24 then third_quad else 0 end) increase_croparea_tar, sum(case when q3status='C' and indicator_id=25 then third_quad else 0 end) increase_farmerincome_tar, sum(case when q3status='C' and indicator_id=26 then third_quad else 0 end) farmer_benefitte_tar, sum(case when q3status='C' and indicator_id in(6,7) then third_quad else 0 end) protective_irrigation_tar, sum(case when q3status='C' and indicator_id=27 then third_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code ) AS st on st.st_code=f.statecode order by statename
#thirdQuarterStartingYear=select f.st_code, f.st_name, coalesce(r.areaof_degraded_land_achie, 0.0)-coalesce(f.areaof_degraded_land_achie, 0.0) as areaof_degraded_land_achie, coalesce(f.area_soilmoisture_activities_achie, 0.0) as area_soilmoisture_activities_achie, coalesce(f.area_afforestation_horticulture_achie, 0.0) as area_afforestation_horticulture_achie, coalesce(f.water_created_renovated_achie, 0.0) as water_created_renovated_achie, coalesce(f.area_diversified_crops_achie, 0.0)-coalesce(r.area_diversified_crops_achie, 0.0) as area_diversified_crops_achie, coalesce(f.area_nilsingto_doubmulcrop_achie, 0.0)-coalesce(r.area_nilsingto_doubmulcrop_achie, 0.0) as area_nilsingto_doubmulcrop_achie, coalesce(f.increase_croparea_achie, 0.0)- coalesce(r.increase_croparea_achie, 0.0) as increase_croparea_achie, coalesce(f.increase_farmerincome_achie, 0.0)-coalesce(r.increase_farmerincome_achie, 0.0) as increase_farmerincome_achie, coalesce(f.farmer_benefitte_achie, 0) as farmer_benefitte_achie, coalesce(f.protective_irrigation_achie, 0.0) as protective_irrigation_achie, coalesce(f.mandays_generated_achie,0.0) as mandays_generated_achie, st.* from (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter2) as f left join (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter1) r on f.st_code=r.st_code LEFT JOIN (select d.st_code as statecode, sum(case when q3status='C' and indicator_id in(20,21) then third_quad else 0 end) areaof_degraded_land_tar, sum(case when q3status='C' and indicator_id=3 then third_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q3status='C' and indicator_id in(1,2) then third_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q3status='C' and indicator_id in(4,5) then third_quad else 0 end) water_created_renovated_tar, sum(case when q3status='C' and indicator_id=22 then third_quad else 0 end) area_diversified_crops_tar, sum(case when q3status='C' and indicator_id=23 then third_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q3status='C' and indicator_id=24 then third_quad else 0 end) increase_croparea_tar, sum(case when q3status='C' and indicator_id=25 then third_quad else 0 end) increase_farmerincome_tar, sum(case when q3status='C' and indicator_id=26 then third_quad else 0 end) farmer_benefitte_tar, sum(case when q3status='C' and indicator_id in(6,7) then third_quad else 0 end) protective_irrigation_tar, sum(case when q3status='C' and indicator_id=27 then third_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#fourQuarterStartingYear=select f.statecode, f.statename, f.areaof_degraded_land_achie-s.areaof_degraded_land_achie as areaof_degraded_land_achie, s.area_soilmoisture_activities_achie as area_soilmoisture_activities_achie, s.area_afforestation_horticulture_achie as area_afforestation_horticulture_achie, s.water_created_renovated_achie as water_created_renovated_achie, s.area_diversified_crops_achie-f.area_diversified_crops_achie as area_diversified_crops_achie, s.area_nilsingto_doubmulcrop_achie-f.area_nilsingto_doubmulcrop_achie as area_nilsingto_doubmulcrop_achie, s.increase_croparea_achie - f.increase_croparea_achie as increase_croparea_achie, s.increase_farmerincome_achie - f.increase_farmerincome_achie as increase_farmerincome_achie, s.farmer_benefitte_achie  as farmer_benefitte_achie, s.protective_irrigation_achie  as protective_irrigation_achie, s.mandays_generated_achie  as mandays_generated_achie,  st.*  from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter1, :im, :jm, :km) as f left join (select * from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter2, :im, :jm, :km)) as s on f.statecode=s.statecode LEFT JOIN (select d.st_code, sum(case when q4status='C' and indicator_id in(20,21) then fourth_quad else 0 end) areaof_degraded_land_tar, sum(case when q4status='C' and indicator_id=3 then fourth_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q4status='C' and indicator_id in(1,2) then fourth_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q4status='C' and indicator_id in(4,5) then fourth_quad else 0 end) water_created_renovated_tar, sum(case when q4status='C' and indicator_id=22 then fourth_quad else 0 end) area_diversified_crops_tar, sum(case when q4status='C' and indicator_id=23 then fourth_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q4status='C' and indicator_id=24 then fourth_quad else 0 end) increase_croparea_tar, sum(case when q4status='C' and indicator_id=25 then fourth_quad else 0 end) increase_farmerincome_tar, sum(case when q4status='C' and indicator_id=26 then fourth_quad else 0 end) farmer_benefitte_tar, sum(case when q4status='C' and indicator_id in(6,7) then fourth_quad else 0 end) protective_irrigation_tar, sum(case when q4status='C' and indicator_id=27 then fourth_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.st_code=f.statecode order by statename
#fourQuarterStartingYear=select f.st_code, f.st_name, coalesce(r.areaof_degraded_land_achie, 0.0)-coalesce(f.areaof_degraded_land_achie, 0.0) as areaof_degraded_land_achie, coalesce(f.area_soilmoisture_activities_achie, 0.0) as area_soilmoisture_activities_achie, coalesce(f.area_afforestation_horticulture_achie, 0.0) as area_afforestation_horticulture_achie, coalesce(f.water_created_renovated_achie, 0.0) as water_created_renovated_achie, coalesce(f.area_diversified_crops_achie, 0.0)-coalesce(r.area_diversified_crops_achie, 0.0) as area_diversified_crops_achie, coalesce(f.area_nilsingto_doubmulcrop_achie, 0.0)-coalesce(r.area_nilsingto_doubmulcrop_achie, 0.0) as area_nilsingto_doubmulcrop_achie, coalesce(f.increase_croparea_achie, 0.0)- coalesce(r.increase_croparea_achie, 0.0) as increase_croparea_achie, coalesce(f.increase_farmerincome_achie, 0.0)-coalesce(r.increase_farmerincome_achie, 0.0) as increase_farmerincome_achie, coalesce(f.farmer_benefitte_achie, 0) as farmer_benefitte_achie, coalesce(f.protective_irrigation_achie, 0.0) as protective_irrigation_achie, coalesce(f.mandays_generated_achie,0.0) as mandays_generated_achie, st.* from (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter_cd=4 and quarter=:quarter2) as f left join (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter1) r on f.st_code=r.st_code LEFT JOIN (select d.st_code as statecode, sum(case when q4status='C' and indicator_id in(20,21) then fourth_quad else 0 end) areaof_degraded_land_tar, sum(case when q4status='C' and indicator_id=3 then fourth_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q4status='C' and indicator_id in(1,2) then fourth_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q4status='C' and indicator_id in(4,5) then fourth_quad else 0 end) water_created_renovated_tar, sum(case when q4status='C' and indicator_id=22 then fourth_quad else 0 end) area_diversified_crops_tar, sum(case when q4status='C' and indicator_id=23 then fourth_quad else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when q4status='C' and indicator_id=24 then fourth_quad else 0 end) increase_croparea_tar, sum(case when q4status='C' and indicator_id=25 then fourth_quad else 0 end) increase_farmerincome_tar, sum(case when q4status='C' and indicator_id=26 then fourth_quad else 0 end) farmer_benefitte_tar, sum(case when q4status='C' and indicator_id in(6,7) then fourth_quad else 0 end) protective_irrigation_tar, sum(case when q4status='C' and indicator_id=27 then fourth_quad else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#allQuarterofYearData=select f.statecode, f.statename, f.areaof_degraded_land_achie-s.areaof_degraded_land_achie as areaof_degraded_land_achie, s.area_soilmoisture_activities_achie as area_soilmoisture_activities_achie, s.area_afforestation_horticulture_achie as area_afforestation_horticulture_achie, s.water_created_renovated_achie as water_created_renovated_achie, s.area_diversified_crops_achie-f.area_diversified_crops_achie as area_diversified_crops_achie, s.area_nilsingto_doubmulcrop_achie-f.area_nilsingto_doubmulcrop_achie as area_nilsingto_doubmulcrop_achie, s.increase_croparea_achie - f.increase_croparea_achie as increase_croparea_achie, s.increase_farmerincome_achie - f.increase_farmerincome_achie as increase_farmerincome_achie, s.farmer_benefitte_achie  as farmer_benefitte_achie, s.protective_irrigation_achie  as protective_irrigation_achie, s.mandays_generated_achie  as mandays_generated_achie,  st.*  from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter1) as f left join (select * from quarterlyOutcomeIndicatorsAchievement(:stcd, :finyr, :quarter2)) as s on f.statecode=s.statecode LEFT JOIN (select d.st_code, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(20,21) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) areaof_degraded_land_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=3 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_soilmoisture_activities_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(1,2) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_afforestation_horticulture_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(4,5) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) water_created_renovated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=22 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_diversified_crops_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=23 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=24 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) increase_croparea_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=25 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) increase_farmerincome_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=26 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) farmer_benefitte_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(6,7) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) protective_irrigation_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=27 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.st_code=f.statecode order by statename
#allQuarterofYearData=select f.st_code, f.st_name, coalesce(r.areaof_degraded_land_achie, 0.0)-coalesce(f.areaof_degraded_land_achie, 0.0) as areaof_degraded_land_achie, coalesce(f.area_soilmoisture_activities_achie, 0.0) as area_soilmoisture_activities_achie, coalesce(f.area_afforestation_horticulture_achie, 0.0) as area_afforestation_horticulture_achie, coalesce(f.water_created_renovated_achie, 0.0) as water_created_renovated_achie, coalesce(f.area_diversified_crops_achie, 0.0)-coalesce(r.area_diversified_crops_achie, 0.0) as area_diversified_crops_achie, coalesce(f.area_nilsingto_doubmulcrop_achie, 0.0)-coalesce(r.area_nilsingto_doubmulcrop_achie, 0.0) as area_nilsingto_doubmulcrop_achie, coalesce(f.increase_croparea_achie, 0.0)- coalesce(r.increase_croparea_achie, 0.0) as increase_croparea_achie, coalesce(f.increase_farmerincome_achie, 0.0)-coalesce(r.increase_farmerincome_achie, 0.0) as increase_farmerincome_achie, coalesce(f.farmer_benefitte_achie, 0) as farmer_benefitte_achie, coalesce(f.protective_irrigation_achie, 0.0) as protective_irrigation_achie, coalesce(f.mandays_generated_achie,0.0) as mandays_generated_achie, st.* from (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter2) as f left join (select * from insert_ommf_querterwise where fin_yr_cd=:finyr and quarter=:quarter1) r on f.st_code=r.st_code LEFT JOIN (select d.st_code as statecode, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(20,21) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) areaof_degraded_land_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=3 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_soilmoisture_activities_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(1,2) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_afforestation_horticulture_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(4,5) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) water_created_renovated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=22 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_diversified_crops_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=23 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_nilsingto_doubmulcrop_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=24 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) increase_croparea_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=25 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) increase_farmerincome_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=26 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) farmer_benefitte_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(6,7) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) protective_irrigation_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=27 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) mandays_generated_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#statefinyrWiseExpenditure=select st_name as stname, st_code as stcode, COALESCE((select sum(project_cost) from  iwmp_district d, iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and status='C' ),0.00) as project_cost, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where financial_year=:finyr and p.st_code=s.st_code),0.0000) stateexpen, COALESCE((select sum(central_share) from pfms_treasuryreceipt_detaildata p where financial_year=:financialyr and p.state_lgd_code=s.st_code),0.0000) centralshare, COALESCE((select sum(state_share) from pfms_treasuryreceipt_detaildata p where financial_year=:financialyr and p.state_lgd_code=s.st_code),0.0000) stateshare from iwmp_state s where wdcpmksy=1 order by s.st_name
statefinyrWiseExpenditure=select st_name as stname, st_code as stcode, COALESCE((select sum(project_cost) from  iwmp_district d, iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and status='C' ),0.00) as project_cost, COALESCE(cast(((select sum(total_amount) from pfms_eatmisdata_detail p where financial_year=:finyr and p.st_code=s.st_code)/100000) as numeric(10,5)),0.0000) stateexpen, COALESCE(cast(((select sum(central_share) from pfms_treasuryreceipt_detaildata p where financial_year=:financialyr and p.state_lgd_code=s.st_code)/100000) as numeric(10,5)),0.0000) centralshare, COALESCE(cast(((select sum(state_share) from pfms_treasuryreceipt_detaildata p where financial_year=:financialyr and p.state_lgd_code=s.st_code)/100000) as numeric(10,5)),0.0000) stateshare from iwmp_state s where wdcpmksy=1 order by s.st_name

#firstQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as areaof_degraded_land_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#secondQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)), 0.00) as areaof_degraded_land_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q2status='C' and indicator_id=3 then second_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q2status='C' and indicator_id in(1,2) then second_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q2status='C' and indicator_id in(4,5) then second_quad else 0 end) water_created_renovated_tar, sum(case when q2status='C' and indicator_id=26 then second_quad else 0 end) farmer_benefitte_tar, sum(case when q2status='C' and indicator_id in(6,7) then second_quad else 0 end) protective_irrigation_tar, sum(case when q2status='C' and indicator_id=27 then second_quad else 0 end) mandays_generated_tar, sum(case when q2status='C' and indicator_id in(20,21) then second_quad else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#thirdQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad  where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)), 0.00) as areaof_degraded_land_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode,  sum(case when q3status='C' and indicator_id=3 then third_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q3status='C' and indicator_id in(1,2) then third_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q3status='C' and indicator_id in(4,5) then third_quad else 0 end) water_created_renovated_tar, sum(case when q3status='C' and indicator_id=26 then third_quad else 0 end) farmer_benefitte_tar, sum(case when q3status='C' and indicator_id in(6,7) then third_quad else 0 end) protective_irrigation_tar, sum(case when q3status='C' and indicator_id=27 then third_quad else 0 end) mandays_generated_tar, sum(case when q3status='C' and indicator_id in(20,21) then third_quad else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#fourQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)), 0.00) as areaof_degraded_land_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q4status='C' and indicator_id=3 then fourth_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q4status='C' and indicator_id in(1,2) then fourth_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q4status='C' and indicator_id in(4,5) then fourth_quad else 0 end) water_created_renovated_tar, sum(case when q4status='C' and indicator_id=26 then fourth_quad else 0 end) farmer_benefitte_tar, sum(case when q4status='C' and indicator_id in(6,7) then fourth_quad else 0 end) protective_irrigation_tar, sum(case when q4status='C' and indicator_id=27 then fourth_quad else 0 end) mandays_generated_tar, sum(case when q4status='C' and indicator_id in(20,21) then fourth_quad else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#allQuarterofYearData=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'), 0.00) as areaof_degraded_land_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=3 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_soilmoisture_activities_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(1,2) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_afforestation_horticulture_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(4,5) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) water_created_renovated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=26 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) farmer_benefitte_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(6,7) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) protective_irrigation_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=27 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) mandays_generated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(20,21) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name

#allQuarterofYearData=select * from (select s.st_code, s.st_name,COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'), 0.00) as areaof_degraded_land_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1 order by st_name) as f LEFT JOIN (select d.st_code as statecode, SUM(CASE WHEN q1status='C' AND indicator_id=3 THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id=3 THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id=3 THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id=3 THEN fourth_quad ELSE 0 END) as area_soilmoisture_activities_tar, SUM(CASE WHEN q1status='C' AND indicator_id in(1,2) THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id in(1,2) THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id in(1,2) THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id in(1,2) THEN fourth_quad ELSE 0 END) as area_afforestation_horticulture_tar, SUM(CASE WHEN q1status='C' AND indicator_id in(4,5) THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id in(4,5) THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id in(4,5) THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id in(4,5) THEN fourth_quad ELSE 0 END) as water_created_renovated_tar, SUM(CASE WHEN q1status='C' AND indicator_id=26 THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id=26 THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id=26 THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id=26 THEN fourth_quad ELSE 0 END) as farmer_benefitte_tar, SUM(CASE WHEN q1status='C' AND indicator_id in(6,7) THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id in(6,7) THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id in(6,7) THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id in(6,7) THEN fourth_quad ELSE 0 END) as protective_irrigation_tar, SUM(CASE WHEN q1status='C' AND indicator_id=27 THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id=27 THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id=27 THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id=27 THEN fourth_quad ELSE 0 END) as mandays_generated_tar, SUM(CASE WHEN q1status='C' AND indicator_id in(20,21) THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id in(20,21) THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id in(20,21) THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id in(20,21) THEN fourth_quad ELSE 0 END) as areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name

#firstQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar, sum(case when q1status='C' and indicator_id=22 then first_quad else 0 end) area_diversified_crops_tar, sum(case when q1status='C' and indicator_id=23 then first_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#secondQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)), 0.00) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2)-(select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q2status='C' and indicator_id=3 then second_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q2status='C' and indicator_id in(1,2) then second_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q2status='C' and indicator_id in(4,5) then second_quad else 0 end) water_created_renovated_tar, sum(case when q2status='C' and indicator_id=26 then second_quad else 0 end) farmer_benefitte_tar, sum(case when q2status='C' and indicator_id in(6,7) then second_quad else 0 end) protective_irrigation_tar, sum(case when q2status='C' and indicator_id=27 then second_quad else 0 end) mandays_generated_tar, sum(case when q2status='C' and indicator_id in(20,21) then second_quad else 0 end) areaof_degraded_land_tar, sum(case when q2status='C' and indicator_id=22 then second_quad else 0 end) area_diversified_crops_tar, sum(case when q2status='C' and indicator_id=23 then second_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#thirdQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)), 0.00) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2)-(select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode,  sum(case when q3status='C' and indicator_id=3 then third_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q3status='C' and indicator_id in(1,2) then third_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q3status='C' and indicator_id in(4,5) then third_quad else 0 end) water_created_renovated_tar, sum(case when q3status='C' and indicator_id=26 then third_quad else 0 end) farmer_benefitte_tar, sum(case when q3status='C' and indicator_id in(6,7) then third_quad else 0 end) protective_irrigation_tar, sum(case when q3status='C' and indicator_id=27 then third_quad else 0 end) mandays_generated_tar, sum(case when q3status='C' and indicator_id in(20,21) then third_quad else 0 end) areaof_degraded_land_tar, sum(case when q3status='C' and indicator_id=22 then third_quad else 0 end) area_diversified_crops_tar, sum(case when q3status='C' and indicator_id=23 then third_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#fourQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)), 0.00) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2)-(select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q4status='C' and indicator_id=3 then fourth_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q4status='C' and indicator_id in(1,2) then fourth_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q4status='C' and indicator_id in(4,5) then fourth_quad else 0 end) water_created_renovated_tar, sum(case when q4status='C' and indicator_id=26 then fourth_quad else 0 end) farmer_benefitte_tar, sum(case when q4status='C' and indicator_id in(6,7) then fourth_quad else 0 end) protective_irrigation_tar, sum(case when q4status='C' and indicator_id=27 then fourth_quad else 0 end) mandays_generated_tar, sum(case when q4status='C' and indicator_id in(20,21) then fourth_quad else 0 end) areaof_degraded_land_tar, sum(case when q4status='C' and indicator_id=22 then fourth_quad else 0 end) area_diversified_crops_tar, sum(case when q4status='C' and indicator_id=23 then fourth_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#allQuarterofYearData=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'), 0.00) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2)-(select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when (q1status='C' and q2status='C' and q3status='C' and q4status='C') and indicator_id=3 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_soilmoisture_activities_tar, sum(case when (q1status='C' and q2status='C' and q3status='C' and q4status='C') and indicator_id in(1,2) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_afforestation_horticulture_tar, sum(case when (q1status='C' and q2status='C' and q3status='C' and q4status='C') and indicator_id in(4,5) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) water_created_renovated_tar, sum(case when (q1status='C' and q2status='C' and q3status='C' and q4status='C') and indicator_id=26 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) farmer_benefitte_tar, sum(case when (q1status='C' and q2status='C' and q3status='C' and q4status='C') and indicator_id in(6,7) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) protective_irrigation_tar, sum(case when (q1status='C' and q2status='C' and q3status='C' and q4status='C') and indicator_id=27 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) mandays_generated_tar, sum(case when (q1status='C' and q2status='C' and q3status='C' and q4status='C') and indicator_id in(20,21) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) areaof_degraded_land_tar, sum(case when (q1status='C' and q2status='C' and q3status='C' and q4status='C') and indicator_id=22 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_diversified_crops_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=23 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name

#firstQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar, sum(case when q1status='C' and indicator_id=22 then first_quad else 0 end) area_diversified_crops_tar, sum(case when q1status='C' and indicator_id=23 then first_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#secondQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)), 0.00) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2)-(select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q2status='C' and indicator_id=3 then second_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q2status='C' and indicator_id in(1,2) then second_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q2status='C' and indicator_id in(4,5) then second_quad else 0 end) water_created_renovated_tar, sum(case when q2status='C' and indicator_id=26 then second_quad else 0 end) farmer_benefitte_tar, sum(case when q2status='C' and indicator_id in(6,7) then second_quad else 0 end) protective_irrigation_tar, sum(case when q2status='C' and indicator_id=27 then second_quad else 0 end) mandays_generated_tar, sum(case when q2status='C' and indicator_id in(20,21) then second_quad else 0 end) areaof_degraded_land_tar, sum(case when q2status='C' and indicator_id=22 then second_quad else 0 end) area_diversified_crops_tar, sum(case when q2status='C' and indicator_id=23 then second_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#thirdQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)), 0.00) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2)-(select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode,  sum(case when q3status='C' and indicator_id=3 then third_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q3status='C' and indicator_id in(1,2) then third_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q3status='C' and indicator_id in(4,5) then third_quad else 0 end) water_created_renovated_tar, sum(case when q3status='C' and indicator_id=26 then third_quad else 0 end) farmer_benefitte_tar, sum(case when q3status='C' and indicator_id in(6,7) then third_quad else 0 end) protective_irrigation_tar, sum(case when q3status='C' and indicator_id=27 then third_quad else 0 end) mandays_generated_tar, sum(case when q3status='C' and indicator_id in(20,21) then third_quad else 0 end) areaof_degraded_land_tar, sum(case when q3status='C' and indicator_id=22 then third_quad else 0 end) area_diversified_crops_tar, sum(case when q3status='C' and indicator_id=23 then third_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#fourQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)), 0.00) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2)-(select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q4status='C' and indicator_id=3 then fourth_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q4status='C' and indicator_id in(1,2) then fourth_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q4status='C' and indicator_id in(4,5) then fourth_quad else 0 end) water_created_renovated_tar, sum(case when q4status='C' and indicator_id=26 then fourth_quad else 0 end) farmer_benefitte_tar, sum(case when q4status='C' and indicator_id in(6,7) then fourth_quad else 0 end) protective_irrigation_tar, sum(case when q4status='C' and indicator_id=27 then fourth_quad else 0 end) mandays_generated_tar, sum(case when q4status='C' and indicator_id in(20,21) then fourth_quad else 0 end) areaof_degraded_land_tar, sum(case when q4status='C' and indicator_id=22 then fourth_quad else 0 end) area_diversified_crops_tar, sum(case when q4status='C' and indicator_id=23 then fourth_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#allQuarterofYearData=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'), 0.00) as areaof_degraded_land_achie, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2)-(select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=3 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_soilmoisture_activities_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(1,2) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_afforestation_horticulture_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(4,5) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) water_created_renovated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=26 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) farmer_benefitte_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(6,7) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) protective_irrigation_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=27 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) mandays_generated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(20,21) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) areaof_degraded_land_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=22 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_diversified_crops_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=23 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name

#firstQuarterStartingYear=select st_code, st_name, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(area_diversified_crops_achie, 0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 1 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end);
#secondQuarterStartingYear=select st_code, st_name, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(area_diversified_crops_achie, 0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 2 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end);
#thirdQuarterStartingYear=select st_code, st_name, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(area_diversified_crops_achie, 0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 3 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end);
#fourQuarterStartingYear=select st_code, st_name, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(area_diversified_crops_achie, 0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 4 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end);
#allQuarterofYearData=select st_code, st_name, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - COALESCE((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1),0) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(sum(area_diversified_crops_achie), 0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name

#allQuarterofYearData=select st_code, st_name, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - COALESCE((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1),0) ), 0.00) as area_nilsingto_doubmulcrop_achie,COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - COALESCE((select area_diversified_crops_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1),0), 0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name

allQuarterofYearData=select st_code, st_name, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - COALESCE((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1),0) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(sum(area_diversified_crops_achie), 0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name

#allQuarterofYearData=select st_code, st_name, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter2) - COALESCE((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop c where s.st_code=c.st_code and quarter=:quarter1),0) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(sum(area_diversified_crops_achie), 0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name


#firstQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as areaof_degraded_land_achie, COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter2 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))) - (select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter1 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))) ,0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(dc.crop_area) from bls_out_detail_crop dc, bls_out_detail d, bls_out_main m, iwmp_district di, bls_complete_project p, bls_out_main_achiev_archive a, bls_out_detail_achiev_archieve ad, bls_out_detail_crop_achiev_archive c where s.st_code=di.st_code and di.dcode=p.dcode and p.proj_id=m.proj_id and m.bls_out_main_id_pk=d.bls_out_main_id and d.bls_out_detail_id_pk=dc.bls_out_detail_id and dc.status='P' and a.bls_out_main_id_pk=ad.bls_out_main_id and ad.bls_out_detail_id_pk=c.bls_out_detail_id and a.proj_id=m.proj_id and a.vcode=m.vcode and a.plot_no=m.plot_no and a.archive_date=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar, sum(case when q1status='C' and indicator_id=22 then first_quad else 0 end) area_diversified_crops_tar, sum(case when q1status='C' and indicator_id=23 then first_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#secondQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code  and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)), 0.00) as areaof_degraded_land_achie, COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter2 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))),0.00) - COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter1 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))) ,0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(dc.crop_area) from bls_out_detail_crop dc, bls_out_detail d, bls_out_main m, iwmp_district di, bls_complete_project p, bls_out_main_achiev_archive a, bls_out_detail_achiev_archieve ad, bls_out_detail_crop_achiev_archive c where s.st_code=di.st_code and di.dcode=p.dcode and p.proj_id=m.proj_id and m.bls_out_main_id_pk=d.bls_out_main_id and d.bls_out_detail_id_pk=dc.bls_out_detail_id and dc.status='P' and a.bls_out_main_id_pk=ad.bls_out_main_id and ad.bls_out_detail_id_pk=c.bls_out_detail_id and a.proj_id=m.proj_id and a.vcode=m.vcode and a.plot_no=m.plot_no and a.archive_date=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q2status='C' and indicator_id=3 then second_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q2status='C' and indicator_id in(1,2) then second_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q2status='C' and indicator_id in(4,5) then second_quad else 0 end) water_created_renovated_tar, sum(case when q2status='C' and indicator_id=26 then second_quad else 0 end) farmer_benefitte_tar, sum(case when q2status='C' and indicator_id in(6,7) then second_quad else 0 end) protective_irrigation_tar, sum(case when q2status='C' and indicator_id=27 then second_quad else 0 end) mandays_generated_tar, sum(case when q2status='C' and indicator_id in(20,21) then second_quad else 0 end) areaof_degraded_land_tar, sum(case when q2status='C' and indicator_id=22 then second_quad else 0 end) area_diversified_crops_tar, sum(case when q2status='C' and indicator_id=23 then second_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#thirdQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad  where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)), 0.00) as areaof_degraded_land_achie, COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter2 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))),0.00) - COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter1 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))) ,0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(dc.crop_area) from bls_out_detail_crop dc, bls_out_detail d, bls_out_main m, iwmp_district di, bls_complete_project p, bls_out_main_achiev_archive a, bls_out_detail_achiev_archieve ad, bls_out_detail_crop_achiev_archive c where s.st_code=di.st_code and di.dcode=p.dcode and p.proj_id=m.proj_id and m.bls_out_main_id_pk=d.bls_out_main_id and d.bls_out_detail_id_pk=dc.bls_out_detail_id and dc.status='P' and a.bls_out_main_id_pk=ad.bls_out_main_id and ad.bls_out_detail_id_pk=c.bls_out_detail_id and a.proj_id=m.proj_id and a.vcode=m.vcode and a.plot_no=m.plot_no and a.archive_date=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode,  sum(case when q3status='C' and indicator_id=3 then third_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q3status='C' and indicator_id in(1,2) then third_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q3status='C' and indicator_id in(4,5) then third_quad else 0 end) water_created_renovated_tar, sum(case when q3status='C' and indicator_id=26 then third_quad else 0 end) farmer_benefitte_tar, sum(case when q3status='C' and indicator_id in(6,7) then third_quad else 0 end) protective_irrigation_tar, sum(case when q3status='C' and indicator_id=27 then third_quad else 0 end) mandays_generated_tar, sum(case when q3status='C' and indicator_id in(20,21) then third_quad else 0 end) areaof_degraded_land_tar, sum(case when q3status='C' and indicator_id=22 then third_quad else 0 end) area_diversified_crops_tar, sum(case when q3status='C' and indicator_id=23 then third_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#fourQuarterStartingYear=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)), 0.00) as areaof_degraded_land_achie, COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter2 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))),0.00) - COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter1 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))) ,0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(dc.crop_area) from bls_out_detail_crop dc, bls_out_detail d, bls_out_main m, iwmp_district di, bls_complete_project p, bls_out_main_achiev_archive a, bls_out_detail_achiev_archieve ad, bls_out_detail_crop_achiev_archive c where s.st_code=di.st_code and di.dcode=p.dcode and p.proj_id=m.proj_id and m.bls_out_main_id_pk=d.bls_out_main_id and d.bls_out_detail_id_pk=dc.bls_out_detail_id and dc.status='P' and a.bls_out_main_id_pk=ad.bls_out_main_id and ad.bls_out_detail_id_pk=c.bls_out_detail_id and a.proj_id=m.proj_id and a.vcode=m.vcode and a.plot_no=m.plot_no and a.archive_date=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when q4status='C' and indicator_id=3 then fourth_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q4status='C' and indicator_id in(1,2) then fourth_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q4status='C' and indicator_id in(4,5) then fourth_quad else 0 end) water_created_renovated_tar, sum(case when q4status='C' and indicator_id=26 then fourth_quad else 0 end) farmer_benefitte_tar, sum(case when q4status='C' and indicator_id in(6,7) then fourth_quad else 0 end) protective_irrigation_tar, sum(case when q4status='C' and indicator_id=27 then fourth_quad else 0 end) mandays_generated_tar, sum(case when q4status='C' and indicator_id in(20,21) then fourth_quad else 0 end) areaof_degraded_land_tar, sum(case when q4status='C' and indicator_id=22 then fourth_quad else 0 end) area_diversified_crops_tar, sum(case when q4status='C' and indicator_id=23 then fourth_quad else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name
#allQuarterofYearData=select * from (select s.st_code, s.st_name, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from  iwmp_district d, iwmp_m_project p, outcome_2_data t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'), 0.00) as areaof_degraded_land_achie, COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter2 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))),0.00) - COALESCE((select sum(area) from iwmp_district d, bls_complete_project p, bls_out_main_achiev_archive a where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=a.proj_id and a.status='C' and archive_date =:quarter1 and bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev_archieve oda, m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) in( 'Double Crop' ,'Multiple Crop') and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) in ('No Crop', 'Single Crop')))) ,0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(dc.crop_area) from bls_out_detail_crop dc, bls_out_detail d, bls_out_main m, iwmp_district di, bls_complete_project p, bls_out_main_achiev_archive a, bls_out_detail_achiev_archieve ad, bls_out_detail_crop_achiev_archive c where s.st_code=di.st_code and di.dcode=p.dcode and p.proj_id=m.proj_id and m.bls_out_main_id_pk=d.bls_out_main_id and d.bls_out_detail_id_pk=dc.bls_out_detail_id and dc.status='P' and a.bls_out_main_id_pk=ad.bls_out_main_id and ad.bls_out_detail_id_pk=c.bls_out_detail_id and a.proj_id=m.proj_id and a.vcode=m.vcode and a.plot_no=m.plot_no and a.archive_date=:quarter2), 0.00) as area_diversified_crops_achie from iwmp_state s WHERE s.st_code=(case when :stcd=0 then st_code else :stcd end) and wdcpmksy=1  order by st_name) as f LEFT JOIN (select d.st_code as statecode, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=3 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_soilmoisture_activities_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(1,2) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_afforestation_horticulture_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(4,5) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) water_created_renovated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=26 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) farmer_benefitte_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(6,7) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) protective_irrigation_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=27 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) mandays_generated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(20,21) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) areaof_degraded_land_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=22 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_diversified_crops_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=23 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_nilsingto_doubmulcrop_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  group by d.st_code) AS st on st.statecode=f.st_code order by st_name


#firstQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(4,5,6)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(4,5,6)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 1 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end)
#secondQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(7,8,9)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(7,8,9)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 2 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end)
#thirdQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(10,11,12)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(10,11,12)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 3 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end)
#fourQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(1,2,3)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(1,2,3)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 4 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end)
#allQuarterofYearData=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise'),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise'),0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name


#firstQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(4,5,6)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(4,5,6)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 1 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end)
#secondQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(7,8,9)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(7,8,9)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 2 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end)
#thirdQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(10,11,12)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(10,11,12)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 3 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end)
#fourQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(1,2,3)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(1,2,3)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 4 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end)
#allQuarterofYearData=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise'),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise'),0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name
#allQuarterAllYearData=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and achiev_type='Month-Wise'),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and achiev_type='Month-Wise'),0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop s where st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name

firstQuarterStartingYear=select st_code, st_name, 0.00 as area_nilsingto_doubmulcrop_achie, 0.00 as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(first_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q1status='C' and indicator_id=24 ),0.00) as increase_croparea_tar, cast(COALESCE((select sum(first_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q1status='C' and indicator_id=25 )/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q1status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, 0.00 as increase_croparea_achie, 0.00 as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 1 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end) order by st_name
secondQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(9)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(9)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie,0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(second_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q2status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(second_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q2status='C' and indicator_id=25)/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q2status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, 0.00 as increase_croparea_achie, 0.00 as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd=:finyr and quarter_cd=2 and quarter=:quarter2 and st_code=(case when 0=:stcd then st_code else :stcd end) order by st_name 
thirdQuarterStartingYear=select st_code, st_name, 0.00 as area_nilsingto_doubmulcrop_achie, 0.00 as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(third_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q3status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(third_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q3status='C' and indicator_id=25)/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q3status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, 0.00 as increase_croparea_achie, 0.00 as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd=3 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end) order by st_name
fourQuarterStartingYear=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(3)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(3)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(fourth_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q4status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(fourth_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q4status='C' and indicator_id=25)/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q4status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, COALESCE((select sum(change_corp) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise' ),0.00) as increase_croparea_achie, cast(COALESCE((select sum(farmer_income) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise' )/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise' ), 0.00) as numeric(20,5)) as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = :finyr and quarter_cd = 4 and quarter=:quarter2 and st_code =(case when 0=:stcd then st_code else :stcd end) order by st_name
allQuarterofYearData=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and month_id in(3,9)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and month_id in(3,9)),0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(first_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q1status='C' and indicator_id=24),0.00)+COALESCE((select sum(second_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q2status='C' and indicator_id=24),0.00)+COALESCE((select sum(third_quad) from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q3status='C' and indicator_id=24),0.00)+COALESCE((select sum(fourth_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q4status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(first_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q1status='C' and indicator_id=25)/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q1status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(second_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q2status='C' and indicator_id=25)/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q2status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(third_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q3status='C' and indicator_id=25)/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q3status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(fourth_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q4status='C' and indicator_id=25)/(select count(distinct t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q4status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, COALESCE((select sum(change_corp) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise' ),0.00) as increase_croparea_achie, cast(COALESCE((select sum(farmer_income) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise' )/(select count(t.proj_id) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise' ),0.00) as numeric(20,5)) as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop s where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name
allQuarterAllYearData=select st_code, st_name, COALESCE((select sum(chnagesingle) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and achiev_type='Month-Wise' and month_id in(3,9) ),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and achiev_type='Month-Wise' and month_id in(3,9) ),0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(first_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q1status='C' and indicator_id=24),0.00)+COALESCE((select sum(second_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q2status='C' and indicator_id=24),0.00)+COALESCE((select sum(third_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q3status='C' and indicator_id=24),0.00)+COALESCE((select sum(fourth_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q4status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(first_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q1status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q1status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(second_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q2status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q2status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(third_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q3status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q3status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(fourth_quad) from  iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q4status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.q4status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, COALESCE((select sum(change_corp) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and achiev_type='Year-Wise' ),0.00) as increase_croparea_achie, cast(COALESCE((select sum(farmer_income) from  iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and achiev_type='Year-Wise' )/(select count(distinct t.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id  and t.status='C' and achiev_type='Year-Wise' ),0.00) as numeric(20,5)) as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop s where st_code =(case when 0=:stcd then st_code else :stcd end) group by st_code, st_name order by st_name


statewisepfmscomponent=select st_name, st_code, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=1 and p.st_code = s.st_code), 0.0000) as afforestation1, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=2  and p.st_code = s.st_code), 0.0000) as agriculture1, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=5 and p.st_code = s.st_code), 0.0000) as others1, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=14 and p.st_code = s.st_code), 0.0000) as countourbunding3, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=17 and p.st_code = s.st_code), 0.0000) as others3,	COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=18 and p.st_code = s.st_code), 0.0000) as farmponds4, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=20 and p.st_code = s.st_code), 0.0000) as nallahbunds4, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=24 and p.st_code = s.st_code), 0.0000) as others4,	COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=26 and p.st_code = s.st_code), 0.0000) as checkdams5, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=31 and p.st_code = s.st_code), 0.0000) as others5, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=27 and p.st_code = s.st_code), 0.0000) as nallahbunding5, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p, pfms_m_component c where p.component_code=c.pfms_component_code and financial_year=:finyr and activity_code=32 and p.st_code = s.st_code), 0.0000) as farmponds6 from iwmp_state s where wdcpmksy=1 order by s.st_name
statewisepfmsNotcomponent=select st_name, st_code, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='A.1.2' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as horticulture, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='B' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as badmincost, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='B.1' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as bsalary, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='B.3' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as btransport, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='B.5' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as bother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='C.1' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as cmonitor, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='E.6' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as eother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='G.1' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as glivelihoodact, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='G.3' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as gother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='H.14' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as hother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='H.6' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as hdistributionirrig, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='I.4' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as ipromotion, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='I.6' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as iother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='J' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as jevaluation, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='K' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as kinstitutionalfund, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='K.1' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as ksalary, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='K.3' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as kofficeexpenses, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='L' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as lflexifund, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='P' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as neeranchalwater, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='R' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as rwdc2admin, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='R.1' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as rsalary, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='R.2' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as rexpenditure, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='R.3' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as rtransport, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='R.5' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as rother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='U.7' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as uother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='V.1' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as vprepardpr, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='W.1' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as wlivelihoodact, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='W.4' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as wother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='X.14' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as xother, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='X.8' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as xvermicompost, COALESCE((select sum(total_amount) from pfms_eatmisdata_detail p where p.component_code='Z.A' and financial_year=:finyr and p.st_code = s.st_code), 0.0000) as wdc2flexifund from iwmp_state s where wdcpmksy=1 order by s.st_name
getEPAWorkIdList=select e.proj_id, (select proj_name from iwmp_m_project where proj_id=e.proj_id) as projectname, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v where b.bcode = g.bcode and g.gcode = v.gcode and v.vcode=e.vcode) as blockname, (select gram_panchayat_name from iwmp_gram_panchayat g,iwmp_village v where g.gcode = v.gcode and v.vcode=e.vcode) as grampanchayatname, (select village_name from iwmp_village where vcode=e.vcode) as villagename, e.vcode, e.assetid, e.epa_activity_id, (select epa_desc from m_epa_coreactivity where epa_activity_id=e.epa_activity_id) as activity, e.nearby from  wdcpmksy_epa_workid e, iwmp_m_project p, iwmp_district d where d.st_code = :stcd and p.dcode=d.dcode and e.proj_id=p.proj_id and e.status='C' and d.dcode=(case when :dist=0 then d.dcode else :dist end)  and p.proj_id=(case when :proj=0 then p.proj_id else :proj end) order by projectname, blockname, grampanchayatname, villagename, activity
getLivelihoodWorkIdList=select e.proj_id, (select proj_name from iwmp_m_project where proj_id=e.proj_id) as projectname, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v where b.bcode = g.bcode and g.gcode = v.gcode and v.vcode=e.vcode) as blockname, (select gram_panchayat_name from iwmp_gram_panchayat g,iwmp_village v where g.gcode = v.gcode and v.vcode=e.vcode) as grampanchayatname, (select village_name from iwmp_village where vcode=e.vcode) as villagename, e.vcode, e.assetid, e.livelihood_coreactivity_id, (select livelihood_coreactivity_desc from m_livelihood_coreactivity where livelihood_coreactivity_id=e.livelihood_coreactivity_id) as activity, e.nearby from  wdcpmksy_livelihood_workid e, iwmp_m_project p, iwmp_district d where d.st_code = :stcd and p.dcode=d.dcode and e.proj_id=p.proj_id and e.status='C' and d.dcode=(case when :dist=0 then d.dcode else :dist end) and p.proj_id=(case when :proj=0 then p.proj_id else :proj end) order by projectname, blockname, grampanchayatname, villagename, activity
getPrdouctionWorkIdList=select e.proj_id, (select proj_name from iwmp_m_project where proj_id=e.proj_id) as projectname, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v where b.bcode = g.bcode and g.gcode = v.gcode and v.vcode=e.vcode) as blockname, (select gram_panchayat_name from iwmp_gram_panchayat g,iwmp_village v where g.gcode = v.gcode and v.vcode=e.vcode) as grampanchayatname, (select village_name from iwmp_village where vcode=e.vcode) as villagename, e.vcode, e.assetid, e.productivity_coreactivity_id, (select productivity_coreactivity_desc from m_productivity_coreactivity where productivity_coreactivity_id=e.productivity_coreactivity_id) as activity,e.nearby from  wdcpmksy_prdouction_workid e, iwmp_m_project p, iwmp_district d where d.st_code = :stcd and p.dcode=d.dcode and e.proj_id=p.proj_id and e.status='C' and d.dcode=(case when :dist=0 then d.dcode else :dist end) and p.proj_id=(case when :proj=0 then p.proj_id else :proj end) order by projectname, blockname, grampanchayatname, villagename, activity

#getStatewiseAreaDetail=select stcode, stname, project_area, plot_area, protective_irrigation, protective_irrigation_ach, assured_irrigation, assured_irrigation_ach, no_irrigation, no_irrigation_ach, private_owner, private_owner_ach, govt_owned, govt_owned_ach, community_owned, community_owned_ach, others_owned, others_owned_ach  from (select s.st_code as stcode,st_name as stname,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,a.* from (select st_code,sum(area) plot_area, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation, sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y join(select s.st_code as stcode1,st_name as stname1, a.* from (select st_code, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation_ach, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation_ach, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation_ach, sum(case ownership_id when 1 then area else 0 end ) private_owner_ach, sum(case ownership_id when 2 then area else 0 end ) govt_owned_ach, sum(case ownership_id when 3 then area else 0 end ) community_owned_ach, sum(case ownership_id when 4 then area else 0 end ) others_owned_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f on y.stcode = f.stcode1
getStatewiseAreaDetail=select stcode, stname, coalesce(project_area,0)as project_area, coalesce(plot_area,0)as plot_area, coalesce(protective_irrigation,0)as protective_irrigation, coalesce(protective_irrigation_ach,0) as protective_irrigation_ach, coalesce(assured_irrigation,0) as assured_irrigation, coalesce(assured_irrigation_ach,0) as assured_irrigation_ach, coalesce(no_irrigation,0) as no_irrigation, coalesce(no_irrigation_ach,0) as no_irrigation_ach, coalesce(private_owner,0)as private_owner, coalesce(private_owner_ach,0) as private_owner_ach, coalesce(govt_owned,0) as govt_owned, coalesce(govt_owned_ach,0) as govt_owned_ach, coalesce(community_owned,0) as community_owned, coalesce(community_owned_ach,0) as community_owned_ach, coalesce(others_owned,0) as others_owned, coalesce(others_owned_ach,0) as others_owned_ach from (select s.st_code as stcode,st_name as stname,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,a.* from (select st_code,sum(area) plot_area, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation, sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y join(select s.st_code as stcode1,st_name as stname1, a.* from (select st_code, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation_ach, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation_ach, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation_ach, sum(case ownership_id when 1 then area else 0 end ) private_owner_ach, sum(case ownership_id when 2 then area else 0 end ) govt_owned_ach, sum(case ownership_id when 3 then area else 0 end ) community_owned_ach, sum(case ownership_id when 4 then area else 0 end ) others_owned_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f on y.stcode = f.stcode1
getStateWiseAreaDetails=select stcode, stname, project_area,plot_area,cultivable_wasteland, cultivable_wasteland_ach,degraded, degraded_ach,rainfed, rainfed_ach, plantation, plantation_ach, no_plantation, no_plantation_ach, others_classification,others_classification_ach, no_crop, no_crop_ach, single_crop, single_crop_ach, double_crop, double_crop_ach, multiple_crop, multiple_crop_ach  from(select s.st_code as stcode,st_name as stname,(select sum(area_proposed)  from  iwmp_district d,iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C') as project_area,a.* from (select st_code,sum(area) plot_area, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland_ach,sum(case classification_land_id when 6 then area else 0 end) degraded_ach, sum(case classification_land_id when 7 then area else 0 end) rainfed_ach,sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation_ach, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation_ach, sum(case classification_land_id when 9 then area else 0 end) others_classification_ach, sum(case no_of_crop_id when 10 then area else 0 end ) no_crop_ach,sum(case no_of_crop_id when 11 then area else 0 end ) single_crop_ach, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop_ach, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as f join(select s.st_code as stcode1,st_name as stname1,a.* from (select st_code, sum(case classification_land_id when 5 then area else 0 end) cultivable_wasteland,sum(case classification_land_id when 6 then area else 0 end) degraded, sum(case classification_land_id when 7 then area else 0 end) rainfed,sum(case when forest_land_type_id=28  and classification_land_id=8 then area else 0 end) plantation, sum(case when forest_land_type_id=29  and classification_land_id=8 then area else 0 end) no_plantation, sum(case classification_land_id when 9 then area else 0 end) others_classification,  sum(case no_of_crop_id when 10 then area else 0 end ) no_crop,sum(case no_of_crop_id when 11 then area else 0 end ) single_crop, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code) as a right join iwmp_state s on s.st_code=a.st_code where  wdcpmksy=1 order by st_name) as y on f.stcode=y.stcode1
getDistWiseAreaDetails=With ProjectArea AS (select dcode, sum(area_proposed) as project_area from iwmp_m_project where status='C' group by dcode), LandData AS (select p.dcode, COALESCE(SUM(CASE WHEN classification_land_id = 5 THEN area ELSE 0 END), 0) AS cultivable_wasteland, COALESCE(SUM(CASE WHEN classification_land_id = 6 THEN area ELSE 0 END), 0) AS degraded_land, COALESCE(SUM(CASE WHEN classification_land_id = 7 THEN area ELSE 0 END), 0) AS rainfed, COALESCE(SUM(CASE WHEN classification_land_id = 9 THEN area ELSE 0 END), 0) AS others, COALESCE(SUM(CASE WHEN forest_land_type_id = 28 and classification_land_id = 8 THEN area ELSE 0 END), 0) AS plantation, COALESCE(SUM(CASE WHEN forest_land_type_id = 29 and classification_land_id = 8 THEN area ELSE 0 END), 0) AS no_plantation, COALESCE(SUM(CASE WHEN no_of_crop_id = 10 THEN area ELSE 0 END), 0) AS no_crop, COALESCE(SUM(CASE WHEN no_of_crop_id = 11 THEN area ELSE 0 END), 0) AS single_crop, COALESCE(SUM(CASE WHEN no_of_crop_id = 12 THEN area ELSE 0 END), 0) AS double_crop, COALESCE(SUM(CASE WHEN no_of_crop_id = 13 THEN area ELSE 0 END), 0) AS multiple_crop from iwmp_m_project p join bls_out_main m on m.proj_id = p.proj_id join bls_out_detail d on m.bls_out_main_id_pk = d.bls_out_main_id where m.status = 'C' group by p.dcode), AchievementData AS (select p.dcode, sum(area) AS plot_area, COALESCE(SUM(CASE WHEN classification_land_id = 5 THEN area ELSE 0 END), 0) AS cultivable_wasteland_achv, COALESCE(SUM(CASE WHEN classification_land_id = 6 THEN area ELSE 0 END), 0) AS degraded_land_achv, COALESCE(SUM(CASE WHEN classification_land_id = 7 THEN area ELSE 0 END), 0) AS rainfed_achv, COALESCE(SUM(CASE WHEN classification_land_id = 9 THEN area ELSE 0 END), 0) AS others_achv, COALESCE(SUM(CASE WHEN forest_land_type_id = 28 and classification_land_id = 8 THEN area ELSE 0 END), 0) AS plantation_achv, COALESCE(SUM(CASE WHEN forest_land_type_id = 29 and classification_land_id = 8 THEN area ELSE 0 END), 0) AS no_plantation_achv, COALESCE(SUM(CASE WHEN no_of_crop_id = 10 THEN area ELSE 0 END), 0) AS no_crop_achv, COALESCE(SUM(CASE WHEN no_of_crop_id = 11 THEN area ELSE 0 END), 0) AS single_crop_achv, COALESCE(SUM(CASE WHEN no_of_crop_id = 12 THEN area ELSE 0 END), 0) AS double_crop_achv, COALESCE(SUM(CASE WHEN no_of_crop_id = 13 THEN area ELSE 0 END), 0) AS multiple_crop_achv from iwmp_m_project p join bls_out_main_achiev m on m.proj_id = p.proj_id join bls_out_detail_achiev d ON m.bls_out_main_id_pk = d.bls_out_main_id where m.status = 'C' group by p.dcode) Select d.dist_name, d.dcode as dcode2, COALESCE(p.project_area, 0) AS project_area, COALESCE(a.plot_area, 0) AS plot_area, COALESCE(l.cultivable_wasteland, 0) AS cultivable_wasteland, COALESCE(a.cultivable_wasteland_achv, 0) AS cultivable_wasteland_ach, COALESCE(l.degraded_land, 0) AS degraded, COALESCE(a.degraded_land_achv, 0) AS degraded_ach, COALESCE(l.rainfed, 0) AS rainfed, COALESCE(a.rainfed_achv, 0) AS rainfed_ach, COALESCE(l.plantation, 0) AS plantation, COALESCE(a.plantation_achv, 0) AS plantation_ach, COALESCE(l.no_plantation, 0) AS no_plantation, COALESCE(a.no_plantation_achv, 0) AS no_plantation_ach, COALESCE(l.others, 0) AS others_classification, COALESCE(a.others_achv, 0) AS others_classification_ach, COALESCE(l.no_crop, 0) AS no_crop, COALESCE(a.no_crop_achv, 0) AS no_crop_ach, COALESCE(l.single_crop, 0) AS single_crop, COALESCE(a.single_crop_achv, 0) AS single_crop_ach, COALESCE(l.double_crop, 0) AS double_crop, COALESCE(a.double_crop_achv, 0) AS double_crop_ach, COALESCE(l.multiple_crop, 0) AS multiple_crop, COALESCE(a.multiple_crop_achv, 0) AS multiple_crop_ach FROM iwmp_district d LEFT JOIN ProjectArea p on p.dcode = d.dcode LEFT JOIN LandData l on l.dcode = d.dcode LEFT JOIN AchievementData a on a.dcode = d.dcode WHERE dist_proj = true AND st_code=:stcd GROUP BY d.dist_name, d.dcode, p.project_area, a.plot_area, l.cultivable_wasteland, l.degraded_land, l.rainfed, l.others, l.plantation, l.no_plantation, l.no_crop, l.single_crop, l.double_crop, l.multiple_crop, a.cultivable_wasteland_achv, a.degraded_land_achv, a.rainfed_achv, a.others_achv, a.plantation_achv, a.no_plantation_achv, a.no_crop_achv, a.single_crop_achv, a.double_crop_achv, a.multiple_crop_achv ORDER BY d.dist_name

getdistwiseAreaDetailO5=select distcode, distname, coalesce(project_area,0)as project_area, coalesce(plot_area,0)as plot_area, coalesce(protective_irrigation,0)as protective_irrigation, coalesce(protective_irrigation_ach,0) as protective_irrigation_ach, coalesce(assured_irrigation,0) as assured_irrigation, coalesce(assured_irrigation_ach,0) as assured_irrigation_ach, coalesce(no_irrigation,0) as no_irrigation, coalesce(no_irrigation_ach,0) as no_irrigation_ach, coalesce(private_owner,0)as private_owner, coalesce(private_owner_ach,0) as private_owner_ach, coalesce(govt_owned,0) as govt_owned, coalesce(govt_owned_ach,0) as govt_owned_ach, coalesce(community_owned,0) as community_owned, coalesce(community_owned_ach,0) as community_owned_ach, coalesce(others_owned,0) as others_owned, coalesce(others_owned_ach,0) as others_owned_ach from (select d.dcode as distcode, dist_name as distname, (select sum(area_proposed) from iwmp_m_project p where d.dcode=p.dcode and p.status='C') as project_area, a.* from (select dcode, sum(area) plot_area, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation, sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned from iwmp_m_project p, bls_out_main bm, bls_out_detail boutdet where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where  dist_proj=true and d.st_code=:stcode order by dist_name) as y join(select d.dcode as dcode1, dist_name as distname1, a.* from (select dcode, sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation_ach, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation_ach, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation_ach, sum(case ownership_id when 1 then area else 0 end ) private_owner_ach, sum(case ownership_id when 2 then area else 0 end ) govt_owned_ach, sum(case ownership_id when 3 then area else 0 end ) community_owned_ach, sum(case ownership_id when 4 then area else 0 end ) others_owned_ach from iwmp_m_project p, bls_out_main_achiev bm, bls_out_detail_achiev boutdet where p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by dcode) as a right join iwmp_district d on d.dcode=a.dcode where  dist_proj=true and d.st_code=:stcode order by dist_name) as f on y.distcode = f.dcode1


getStatewiseEpndtr = select st_name as stname, st_code as stcode, COALESCE((select sum(project_cost) from  iwmp_district d, iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and status='C' ),0.00) as project_cost, COALESCE(cast(((select sum(total_amount) from pfms_eatmisdata_detail p where p.st_code=s.st_code)/100000) as numeric(10,5)),0.0000) stateexpen, COALESCE(cast(((select sum(central_share) from pfms_treasuryreceipt_detaildata p where p.state_lgd_code=s.st_code)/100000) as numeric(10,5)),0.0000) centralshare, COALESCE(cast(((select sum(state_share) from pfms_treasuryreceipt_detaildata p where p.state_lgd_code=s.st_code)/100000) as numeric(10,5)),0.0000) stateshare from iwmp_state s where wdcpmksy=1 order by s.st_name
getDistwiseEpndtr = select dist_name as distname, dcode, COALESCE((select sum(project_cost) from iwmp_m_project p where d.dcode=p.dcode and status='C' ),0.00) as project_cost, COALESCE(cast(((select sum(total_amount) from pfms_eatmisdata_detail p where p.dcode=d.dcode)/100000) as numeric(10,5)),0.0000) distexpen from iwmp_district d where d.st_code = :stCode and d.dist_proj=true order by dist_name
getProjwiseEpndtr = select project_name as projname, pe.proj_id as projid, COALESCE((select sum(project_cost) from iwmp_m_project p where p.proj_id = pe.proj_id),0.00) as project_cost, COALESCE(cast(((select sum(total_amount) )/100000) as numeric(10,5)),0.0000) projexpen from pfms_eatmisdata_detail pe where pe.dcode =:dcode and (pe.status ='C' or pe.status is null) and pe.proj_id is not null group by project_name, pe.proj_id order by project_name

getPfmsWorkIdBlkLvl = from PfmsEatmisdataDetail pd where agencyUniqueCode in (select uniqueAgencyCode from PfmsMAgency pa where upper(pa.hierarchyLevel) = :Level) and pd.iwmpBlock.bcode in (select b.bcode  from IwmpBlock b, IwmpDistrict d, IwmpMProject p where b.iwmpDistrict.dcode = d.dcode and d.dcode = p.iwmpDistrict.dcode) and status = 'C' order by date desc
getWorkIdDtl=select cast(t.assetid as int), cast(t.assetid as int)||' # '||a.activity_desc||' , '|| v.village_name ||' , '|| b.block_name as workdtl from iwmp_m_phy_activity a, iwmp_village v,  iwmp_block b, iwmp_project_physical_asset t where v.block_code = b.block_code and v.vcode = t.vcode and t.phy_activity_code = a.activity_code and t.proj_id  = :projId
getPfmsWorkIdGpLvl = from PfmsEatmisdataDetail pd where agencyUniqueCode in (select uniqueAgencyCode from PfmsMAgency pa where upper(pa.hierarchyLevel) = :Level) and pd.iwmpGramPanchayat.gcode in (select g.gcode from IwmpGramPanchayat g, IwmpBlock b, IwmpDistrict d, IwmpMProject p where g.iwmpBlock.bcode = b.bcode and b.iwmpDistrict.dcode = d.dcode and d.dcode = p.iwmpDistrict.dcode) and status = 'C' order by date desc
getPfmsTransactionWorkIdDistLvl = from PfmsEatmisdataDetail pd where agencyUniqueCode in (select uniqueAgencyCode from PfmsMAgency pa where upper(pa.hierarchyLevel) = :Level) and pd.iwmpDistrict.dcode in (select d.dcode  from IwmpDistrict d, IwmpMProject p where d.dcode = p.iwmpDistrict.dcode) and status = 'C' order by date desc
getWorkIddraftDtl = select cast(t.assetid as int), cast(t.assetid as int)||'#'||a.activity_desc||' , '|| v.village_name ||' , '|| b.block_name as workdtl from iwmp_m_phy_activity a, iwmp_village v,  iwmp_block b, iwmp_project_physical_asset t where v.block_code = b.block_code and v.vcode = t.vcode and t.phy_activity_code = a.activity_code and t.assetid  = :wicode
#getPfmsTransactionWorkPiaLvl = from PfmsEatmisdataDetail pd where pd.iwmpMProject.projectId in (select up.iwmpMProject.projectId  from IwmpUserProjectMap up, IwmpMProject p where p.projectId = up.iwmpMProject.projectId and up.userReg.regId = :regId) and pd.iwmpMProject.projectId=CASE :projId WHEN 0 THEN pd.iwmpMProject.projectId ELSE :projId END and pd.iwmpMProject.projectId is not null and pd.status<>'D' and pd.financialYear = :finyear order by date desc
getPfmsTransactionWorkPiaLvl = from PfmsEatmisdataDetail pd where pd.iwmpMProject.projectId in (select up.iwmpMProject.projectId  from IwmpUserProjectMap up, IwmpMProject p where p.projectId = up.iwmpMProject.projectId and up.userReg.regId = :regId) and pd.iwmpMProject.projectId=CASE :projId WHEN 0 THEN pd.iwmpMProject.projectId ELSE :projId END and pd.iwmpMProject.projectId is not null and pd.status!='D' and pd.financialYear = :finyear order by date desc

getworkexpdetail=select d.wicode as wicode, d.expenditure as expenditure from pfms_eatmisexpdata_detail d, pfms_eatmisdata_detail c where  c.eatmisdata_id = d.eatmisdata_id and c.eatmisdata_id=:id

topTenBlsCmpltdList = select * from (select s.st_name as stname, s.st_code as stateCode, coalesce(cast(( sum(area))*100 / (select sum(area_proposed) from iwmp_district d,iwmp_m_project p where d.st_code=s.st_code and p.dcode=d.dcode and status='C') as numeric(10,2)),0) as prcntge_area from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and wdcpmksy=1 group by s.st_name, s.st_code order by prcntge_area desc) as fin where prcntge_area>=100
blsCmpltdList = select s.st_name as stname, s.st_code as stateCode, coalesce(cast(( sum(area))*100 / (select sum(area_proposed) from iwmp_district d,iwmp_m_project p where d.st_code=s.st_code and p.dcode=d.dcode and status='C') as numeric(10,2)),0) as prcntge_area from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and wdcpmksy=1 group by s.st_name, s.st_code order by prcntge_area desc 
topTenProjLocCmpltnPrcntgList = select s.st_name as stname, s.st_code as stateCode,cast(((select count(distinct p.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_location bm where s.st_code=d.st_code and d.dcode=p.dcode  and p.proj_id=bm.proj_id and bm.status=true) *100)/count(distinct proj_id) as numeric(10,2)) as proj_loc_prcntge from iwmp_state s inner join iwmp_district d on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode where status='C' and wdcpmksy=1 group by s.st_name, s.st_code order by proj_loc_prcntge desc limit 10
topTenStLandClassPrcntgList = select s.st_name as stname, s.st_code as statecode, cast(sum(case classification_land_id when 5 then area else 0 end)*100/sum(area)as numeric(10,2)) as cultivable_land_prcntg, cast(sum(case classification_land_id when 6 then area else 0 end)*100/sum(area)as numeric(10,2)) as degraded_land_prcntg, cast(sum(case classification_land_id when 7 then area else 0 end)*100/sum(area)as numeric(10,2)) as rainfed_land_prcntg, cast(sum(case classification_land_id when 8 then area else 0 end)*100/sum(area)as numeric(10,2)) as forest_land_prcntg, cast(sum(case classification_land_id when 9 then area else 0 end)*100/sum(area)as numeric(10,2)) as other_land_prcntg from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where s.st_code= d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' and wdcpmksy=1 group by s.st_code , s.st_name order by s.st_name
compLandClassAchDetails = select s.st_name as stname, s.st_code as statecode, cast(sum(case classification_land_id when 5 then area else 0 end)*100/sum(area)as numeric(10,2)) as cultivable_land_prcntg_ach, cast(sum(case classification_land_id when 6 then area else 0 end)*100/sum(area)as numeric(10,2)) as degraded_land_prcntg_ach, cast(sum(case classification_land_id when 7 then area else 0 end)*100/sum(area)as numeric(10,2)) as rainfed_land_prcntg_ach, cast(sum(case classification_land_id when 8 then area else 0 end)*100/sum(area)as numeric(10,2)) as forest_land_prcntg_ach, cast(sum(case classification_land_id when 9 then area else 0 end)*100/sum(area)as numeric(10,2)) as other_land_prcntg_ach from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where s.st_code= d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' and wdcpmksy=1 group by s.st_code , s.st_name order by s.st_name
compIrriStatusDetails = select s.st_name as stname, s.st_code as statecode, cast(sum(case irrigation_status_id when 22 then area else 0 end)*100/sum(area)as numeric(10,2)) as protective_irrigation_prcntg, cast(sum(case irrigation_status_id when 23 then area else 0 end)*100/sum(area)as numeric(10,2)) as assured_irrigation_prcntg, cast(sum(case irrigation_status_id when 24 then area else 0 end)*100/sum(area)as numeric(10,2)) as no_irrigation_prcntg from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main bm where s.st_code= d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and wdcpmksy=1 group by s.st_code , s.st_name order by s.st_name
compIrriStatusAchDetails = select s.st_name as stname, s.st_code as statecode, cast(sum(case irrigation_status_id when 22 then area else 0 end)*100/sum(area)as numeric(10,2)) as protective_irrigation_prcntg, cast(sum(case irrigation_status_id when 23 then area else 0 end)*100/sum(area)as numeric(10,2)) as assured_irrigation_prcntg, cast(sum(case irrigation_status_id when 24 then area else 0 end)*100/sum(area)as numeric(10,2)) as no_irrigation_prcntg from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm where s.st_code= d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and wdcpmksy=1 group by s.st_code , s.st_name order by s.st_name
compNoOfCropDetails = select s.st_name as stname, s.st_code as statecode, cast(sum(case no_of_crop_id when 10 then area else 0 end)*100/sum(area)as numeric(10,2)) as no_crop, cast(sum(case no_of_crop_id when 11 then area else 0 end)*100/sum(area)as numeric(10,2)) as single_crop, cast(sum(case no_of_crop_id when 12 then area else 0 end)*100/sum(area)as numeric(10,2)) as double_crop, cast(sum(case no_of_crop_id when 13 then area else 0 end)*100/sum(area)as numeric(10,2)) as multiple_crop from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main bm, bls_out_detail bodt where s.st_code= d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk = bodt.bls_out_main_id and bm.status='C' and wdcpmksy=1 group by s.st_code , s.st_name order by s.st_name
compNoOfCropAchDetails = select s.st_name as stname, s.st_code as statecode, cast(sum(case no_of_crop_id when 10 then area else 0 end)*100/sum(area)as numeric(10,2)) as no_crop_ach, cast(sum(case no_of_crop_id when 11 then area else 0 end)*100/sum(area) as numeric(10,2)) as single_crop_ach, cast(sum(case no_of_crop_id when 12 then area else 0 end)*100/sum(area)as numeric(10,2)) as double_crop_ach, cast(sum(case no_of_crop_id when 13 then area else 0 end)*100/sum(area)as numeric(10,2)) as multiple_crop_ach from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm, bls_out_detail_achiev bodt where s.st_code= d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk = bodt.bls_out_main_id and bm.status='C' and wdcpmksy=1 group by s.st_code , s.st_name order by s.st_name
stwiseTotalExpndtrPrcntg = select st_name as stname, s.st_code as statecode, COALESCE(cast(((select sum(total_amount) from pfms_eatmisdata_detail p where p.st_code=s.st_code)/100000)*100/sum(project_cost) as numeric(10,2)),0.0000) as total_expen_prcnt, COALESCE(cast(((select sum(treasury_Receipt) from pfms_treasuryreceipt_detaildata pt where s.st_code = pt.state_lgd_code)/100000)*100/sum(project_cost)as numeric(10,2)),0.0000) as treasury_receipt_prcnt from iwmp_state s, iwmp_district d, iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C' and wdcpmksy=1  group by s.st_name, s.st_code order by s.st_name
topTenNonCompStArea = select * from (select s.st_name as stname, s.st_code as stateCode, coalesce(cast(( sum(area))*100 / (select sum(area_proposed) from iwmp_district d,iwmp_m_project p where d.st_code=s.st_code and p.dcode=d.dcode and status='C') as numeric(10,2)),0) as prcntge_area from iwmp_state s, iwmp_district d,iwmp_m_project p,bls_out_main bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and wdcpmksy=1 group by s.st_name, s.st_code order by prcntge_area desc) as fin where prcntge_area<100 limit 10
stwiseSancExpndtr = select s.st_name as stname, s.st_code as statecode,sum(project_cost) as sanctioned_amt, COALESCE(cast(((select sum(total_amount) from pfms_eatmisdata_detail p where p.st_code=s.st_code)/100000) as numeric(10,2)),0.00) as total_expen, COALESCE(cast(((select sum(treasury_Receipt) from pfms_treasuryreceipt_detaildata pt where s.st_code = pt.state_lgd_code)/100000)as numeric(10,2)),0.00) as treasury_receipt from iwmp_state s, iwmp_district d, iwmp_m_project p where s.st_code=d.st_code and d.dcode=p.dcode and p.status='C' and wdcpmksy=1  group by s.st_name, s.st_code order by s.st_name

totalareabase=Select coalesce(sum(area),0) from BlsOutMain where iwmpMProject.projectId =:proj

getListOfAssetUserWiseEpa=from WdcpmksyEpaWorkid where iwmpUserRegBySentTo.regId=:regId and status='D' and (actionForward='F' or actionForward='R') and currentLevel='D'
getPendngAssetAtWCDCProjectWiseEpa=from WdcpmksyEpaWorkid where iwmpUserRegBySentTo.regId=:regId and status='D' and (actionForward='F' or actionForward='R') and currentLevel='D' and iwmpMProject.projectId=:projId
getListOfAssetUserWiseLivelihood=from WdcpmksyLivelihoodWorkid where iwmpUserRegBySentTo.regId=:regId and status='D' and (actionForward='F' or actionForward='R') and currentLevel='D'
getPendngAssetAtWCDCProjectWiseLivelihood=from WdcpmksyLivelihoodWorkid where iwmpUserRegBySentTo.regId=:regId and status='D' and (actionForward='F' or actionForward='R') and currentLevel='D' and iwmpMProject.projectId=:projId
getListOfAssetUserWiseProduction=from WdcpmksyPrdouctionWorkid where iwmpUserRegBySentTo.regId=:regId and status='D' and (actionForward='F' or actionForward='R') and currentLevel='D'
getPendngAssetAtWCDCProjectWiseProduction=from WdcpmksyPrdouctionWorkid where iwmpUserRegBySentTo.regId=:regId and status='D' and (actionForward='F' or actionForward='R') and currentLevel='D' and iwmpMProject.projectId=:projId
getGoiReleaseToStateTreasury = from GetGoiReleaseToStateTreasury g where iwmpMFinYear.finYrCd=(case when :finyr=0 then iwmpMFinYear.finYrCd else :finyr end) order by g.iwmpStateByStCode.stName, g.iwmpMFinYear.finYrCd asc 

wcdcCompleteEPA=UPDATE public.wdcpmksy_epa_workid SET  updatedby=:updatedby, updatedon=:updatedon, sent_from=:sentfrom, sent_to=:sentto, action_forward='C', current_level='D', status='C' WHERE assetid in (:assetId);
wcdcCompleteLivelihoodAsset=UPDATE public.wdcpmksy_livelihood_workid SET  updatedby=:updatedby, updatedon=:updatedon, sent_from=:sentfrom, sent_to=:sentto, action_forward='C', current_level='D', status='C' WHERE assetid in (:assetId);
wcdcCompleteProductionAsset=UPDATE public.wdcpmksy_prdouction_workid SET  updatedby=:updatedby, updatedon=:updatedon, sent_from=:sentfrom, sent_to=:sentto, action_forward='C', current_level='D', status='C' WHERE assetid in (:assetId);

getCompletedAssetListEPAdp=from WdcpmksyEpaWorkid where iwmpUserRegBySentTo.regId=:regId and status='C' order by assetid
getCompletedAssetListEPA=from WdcpmksyEpaWorkid where iwmpMProject.projectId=:projId and status='C' order by assetid
getCompletedAssetListLivelihooddp=from WdcpmksyLivelihoodWorkid where iwmpUserRegBySentTo.regId=:regId and status='C' order by assetid
getCompletedAssetListLivelihood=from WdcpmksyLivelihoodWorkid where iwmpMProject.projectId=:projId and status='C' order by assetid
getCompletedAssetListPrdouctiondp=from WdcpmksyPrdouctionWorkid where iwmpUserRegBySentTo.regId=:regId and status='C' order by assetid
getCompletedAssetListPrdouction=from WdcpmksyPrdouctionWorkid where iwmpMProject.projectId=:projId and status='C' order by assetid

getforwardedAssetPIAEPA=from WdcpmksyEpaWorkid where iwmpUserRegBySentFrom.regId=:regId  and (actionForward='F' or actionForward='R') and status='D' and currentLevel='D' and iwmpMProject.projectId=:projId
getforwardedAssetPIALivelihood=from WdcpmksyLivelihoodWorkid where iwmpUserRegBySentFrom.regId=:regId  and (actionForward='F' or actionForward='R') and status='D' and currentLevel='D' and iwmpMProject.projectId=:projId
getforwardedAssetPIAPrdouction=from WdcpmksyPrdouctionWorkid where iwmpUserRegBySentFrom.regId=:regId  and (actionForward='F' or actionForward='R') and status='D' and currentLevel='D' and iwmpMProject.projectId=:projId
getUserToForwardEPA=select dist.dist_name  as distname, reg.user_id as userid, reg.reg_id as regid from iwmp_state st,iwmp_district dist,iwmp_user_reg reg, iwmp_user_map map where st.st_code=map.st_code and map.dcode=dist.dcode and reg.reg_id=map.reg_id and map.dcode=(select dcode from iwmp_user_map map where  map.reg_id=:regId) and UPPER(reg.status) =upper('Active') and user_type='DI' order by regid
#getdashboardtarData=select (select st_name from iwmp_state where st_code in (select st_code from iwmp_district where dcode in (select dcode from iwmp_m_project where proj_id = ach.proj_id))) as state, sum(achievement) as dashboardtardec, h.head_desc as headdesc from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Water Harvesting Structure (New created)') and achievement > 0.00 group by state, h.head_desc
#getdashboardwhsrenovate=select (select st_name from iwmp_state where st_code in (select st_code from iwmp_district where dcode in (select dcode from iwmp_m_project where proj_id = ach.proj_id))) as state, sum(achievement) as dashboardtardec, h.head_desc as headdesc from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Water Harvesting Structure (Renovated)') and achievement > 0.00 group by state, h.head_desc
#getdashboardafforestation=select (select st_name from iwmp_state where st_code in (select st_code from iwmp_district where dcode in (select dcode from iwmp_m_project where proj_id = ach.proj_id))) as state, sum(achievement) as dashboardtardec, CASE WHEN h.head_desc = 'Area brought under Afforestation / Agriculture / Pasture etc.' THEN 'Area brought under Afforestation / Agriculture / Pasture etc. (in ha)' ELSE h.head_desc END as headdesc from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Area brought under Afforestation / Agriculture / Pasture etc.') and achievement > 0.00 group by state, h.head_desc
#gethorticulture=select (select st_name from iwmp_state where st_code in (select st_code from iwmp_district where dcode in (select dcode from iwmp_m_project where proj_id = ach.proj_id))) as state, sum(achievement) as dashboardtardec, CASE WHEN h.head_desc = 'Area brought under Horticulture' THEN 'Area brought under Horticulture (in ha)' ELSE h.head_desc END as headdesc from wdcpmksy_project_phy_achievement ach,wdcpmksy_project_phy_ach_details det,iwmp_m_phy_activity act,iwmp_m_phy_heads h where ach.achievement_id=det.achievement_id and det.activity_code=act.activity_code and ach.status='C' and act.head_code =h.head_code and UPPER(h.head_desc)=UPPER('Area brought under Horticulture') and achievement > 0.00 group by state, h.head_desc
#getdegradedland=select l.st_code as stateCode, l.state, CASE WHEN l.headdesc = 'Degraded Land' THEN 'Area of Degrade Land Treated (in ha)' ELSE l.headdesc END , deg_bl - degraded_ason dashboardtardec  from ( select st_code, (select st_name from iwmp_state where st_code = d.st_code) as state, mbout.description as headdesc, sum(bm.area) deg_bl from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, m_bls_outcome mbout  where d.dcode=p.dcode and p.proj_id=bm.proj_id  and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='DEGRADED LAND' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'   group by st_code, headdesc) as b join ( select st_code, (select st_name from iwmp_state where st_code = d.st_code) as state, mbout.description as headdesc, sum(bm.area) degraded_ason from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet ,m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id  and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='DEGRADED LAND' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' group by st_code, headdesc) as l on b.st_code=l.st_code  where deg_bl - degraded_ason != 0.0000
#getrainfed=select l.st_code as stateCode, l.state, CASE WHEN l.headdesc = 'Rainfed' THEN 'Area of Rainfed Area Developed (in ha)' ELSE l.headdesc END, deg_bl - degraded_ason as dashboardtardec  from (select st_code, (select st_name from iwmp_state where st_code = d.st_code) as state, mbout.description as headdesc, sum(bm.area) deg_bl from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet, m_bls_outcome mbout  where d.dcode=p.dcode and p.proj_id=bm.proj_id and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='RAINFED' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'  group by st_code, headdesc ) as b join (select st_code, (select st_name from iwmp_state where st_code = d.st_code) as state, mbout.description as headdesc, sum(bm.area) degraded_ason from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet, m_bls_outcome mbout where d.dcode=p.dcode and p.proj_id=bm.proj_id  and  mbout.m_bls_out_id_pk=boutdet.classification_land_id and UPPER(mbout.description)='RAINFED' and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'  group by st_code, headdesc) as l on b.st_code=l.st_code   where deg_bl - degraded_ason != 0.0000
#getnilsingledata=select (select st_name from iwmp_state where st_code in (select st_code from iwmp_district where dcode in (select dcode from iwmp_m_project  where x.proj_id = proj_id))) as state, case when (select description from m_bls_outcome where m_bls_out_id_pk  = 10) = 'No Crop' then 'Area brought from Nil/Single crop to double or more crop(in ha)' else 'no name' end as headdesc, sum(area) as dashboardtardec from bls_out_main_achiev x where bls_out_main_id_pk in (select oda.bls_out_main_id from bls_out_detail_achiev oda,m_bls_outcome mo where mo.m_bls_out_id_pk=oda.no_of_crop_id and trim(mo.description) != 'No Crop' and bls_out_detail_id_pk in (select od.bls_out_detail_id_pk from bls_out_detail od,m_bls_outcome mo where mo.m_bls_out_id_pk=od.no_of_crop_id and trim(mo.description) = 'No Crop')) group by state

#statewisecurrentstatusofplanachieve=select s.st_code, s.st_name, cast(count(distinct proj_id) as Integer) as total_project, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_physical_plan bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_plan2022, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_achievement2022, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_physical_plan bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_plan2023, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_achievement2023 from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 group by s.st_name, s.st_code  order by s.st_name
statewisecurrentstatusofplanachieve=select s.st_code, s.st_name,cast(count(distinct proj_id) as Integer) as total_project, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_physical_plan bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_plan2022, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_achievement2022, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_physical_plan bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_plan2023, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_achievement2023,cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, iwmp_project_physical_plan bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=24) as Integer) as total_project_plan2024, cast((select count(distinct bm.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_project_phy_achievement bm where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=24) as Integer) as total_project_achievement2024 from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 group by s.st_name, s.st_code  order by s.st_name
#activtiyWiseUptoPlanAchievWork=select distinct h.head_code, head_desc, h.seq_no, a.activity_code, activity_desc, a.seq_no as aseq_no, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, COALESCE((select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:stcd))), 0.00) as uptoplan, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:stcd))), 0.00) as uptoachieve, cast(COALESCE((select count(assetid) from iwmp_project_physical_asset p where p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:stcd))), 0) as integer) as uptototwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='O' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:stcd))), 0) as integer) as uptoongoingwork,	cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:stcd))), 0) as integer) as uptocompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='F' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=:stcd))), 0) as integer) as uptoforclosework from iwmp_m_phy_heads h, iwmp_m_phy_activity a where h.head_code=a.head_code  group by h.head_code, a.activity_code order by h.seq_no, a.seq_no
activtiyWiseUptoPlanAchievWork=select distinct h.head_code, head_desc, h.seq_no, a.activity_code, activity_desc, a.seq_no as aseq_no, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, COALESCE((select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0.00) as uptoplan, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in(select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end)))*100)/(select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0.00) as numeric(10,2)) as achievpercent, cast(COALESCE((select count(assetid) from iwmp_project_physical_asset p where p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as uptototwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='O' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as uptoongoingwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as uptocompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as yearcompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='F' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as uptoforclosework from iwmp_m_phy_heads h, iwmp_m_phy_activity a where h.head_code=a.head_code  group by h.head_code, a.activity_code order by h.seq_no, a.seq_no
#activtiyWiseUptoPlanAchievWorkDist=select distinct h.head_code, head_desc, h.seq_no, a.activity_code, activity_desc, a.seq_no as aseq_no, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, COALESCE((select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0.00) as uptoplan, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0.00) as uptoachieve, cast(COALESCE((select count(assetid) from iwmp_project_physical_asset p where p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as uptototwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='O' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as uptoongoingwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as uptocompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='F' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as uptoforclosework from iwmp_m_phy_heads h, iwmp_m_phy_activity a where h.head_code=a.head_code  group by h.head_code, a.activity_code order by h.seq_no, a.seq_no
activtiyWiseUptoPlanAchievWorkDist=select distinct h.head_code, head_desc, h.seq_no, a.activity_code, activity_desc, a.seq_no as aseq_no, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, COALESCE((select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in(select proj_id from iwmp_m_project where dcode=:distcd)), 0.00) as uptoplan, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in(select proj_id from iwmp_m_project where dcode=:distcd))*100)/(select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in(select proj_id from iwmp_m_project where dcode=:distcd)), 0.00) as numeric(10,2)) as achievpercent, cast(COALESCE((select count(assetid) from iwmp_project_physical_asset p where p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as uptototwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='O' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as uptoongoingwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as uptocompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as yearcompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='F' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as uptoforclosework from iwmp_m_phy_heads h, iwmp_m_phy_activity a where h.head_code=a.head_code  group by h.head_code, a.activity_code order by h.seq_no, a.seq_no
#activtiyWiseUptoPlanAchievWorkProj=select distinct h.head_code, head_desc, h.seq_no, a.activity_code, activity_desc, a.seq_no as aseq_no, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, COALESCE((select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id=:projid), 0.00) as uptoplan, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id=:projid), 0.00) as uptoachieve, cast(COALESCE((select count(assetid) from iwmp_project_physical_asset p where p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id=:projid), 0) as integer) as uptototwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='O' and p.proj_id=:projid), 0) as integer) as uptoongoingwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='C' and p.proj_id=:projid), 0) as integer) as uptocompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='F' and p.proj_id=:projid), 0) as integer) as uptoforclosework from iwmp_m_phy_heads h, iwmp_m_phy_activity a where h.head_code=a.head_code  group by h.head_code, a.activity_code order by h.seq_no, a.seq_no
activtiyWiseUptoPlanAchievWorkProj=select distinct h.head_code, head_desc, h.seq_no, a.activity_code, activity_desc, a.seq_no as aseq_no, (select unit_desc from iwmp_m_unit where unit_code=a.unit_code) as unitname, COALESCE((select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id=:projid), 0.00) as uptoplan, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id=:projid), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id=:projid)*100)/(select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p where p.planid = d.planid and d.phy_activity_code = a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id=:projid), 0.00) as numeric(10,2)) as achievpercent, cast(COALESCE((select count(assetid) from iwmp_project_physical_asset p where p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id=:projid), 0) as integer) as uptototwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='O' and p.proj_id=:projid), 0) as integer) as uptoongoingwork, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='C' and p.proj_id=:projid), 0) as integer) as uptocompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id=:projid), 0) as integer) as yearcompletework, cast(COALESCE((select count(s.assetid) from iwmp_project_physical_asset p, iwmp_project_asset_status s where p.assetid=s.assetid and p.phy_activity_code=a.activity_code and p.status='C' and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and s.status='F' and p.proj_id=:projid), 0) as integer) as uptoforclosework from iwmp_m_phy_heads h, iwmp_m_phy_activity a where h.head_code=a.head_code  group by h.head_code, a.activity_code order by h.seq_no, a.seq_no

completeEpa_detail=update epa_detail SET  status='C' WHERE epa_detail_id in (:assetId);
completeLivelihood_detail=update livelihood_detail SET  status='C' WHERE livelihood_detail_id in (:assetId);
completeProduction_detail=update production_detail SET  status='C' WHERE production_detail_id in (:assetId);
findlivepostdata=select liv.livelihood_coreactivity_desc, cast(ld.post_avg_income as Integer) from m_livelihood_coreactivity liv, livelihood_detail ld where ld.livelihood_coreactivity_id = liv.livelihood_coreactivity_id and livelihood_detail_id = :id
updatepostdata = update livelihood_detail set updated_on = :lastupdateddate, post_avg_income = :livepost, post_status = 'C' where livelihood_detail_id = :id
findproductdata=select pro.productivity_coreactivity_desc, cast(ld.post_avg_income as Integer) from m_productivity_coreactivity pro, production_detail ld where ld.livelihood_coreactivity_id = pro.productivity_coreactivity_id and production_detail_id = :id
updateProductionpostdata = update production_detail set updated_on = :lastupdateddate, post_avg_income = :prodpost, post_status = 'C' where production_detail_id = :id


#Micro Irrigation Queries
getplotsnoOfProject=select bls_out_main_id_pk, plot_no from Bls_Out_Main where vcode = :villageId and irrigation_status_id!=24
#getplotsnoOfProject=select bls_out_main_id_pk, plot_no from Bls_Out_Main where vcode = :villageId
getplotirrdata=select b.area, m.description as description, b.micro_irrigation, b.micro_status from Bls_Out_Main b, m_bls_outcome m where m.m_bls_out_id_pk = b.irrigation_status_id and b.bls_out_main_id_pk = :plotnoId
checkmicroIstatus=select count(bls_out_main_id_pk) from Bls_Out_Main where micro_status = 'C' and bls_out_main_id_pk = :plotnoId

getbaselinedraftdat = from BlsOutDetailCrop where blsOutDetailTranxIdPk = :id
#districtWiseCurrentStatusPlan = select d.dist_name, d.dcode, cast(count(distinct proj_id) as Integer) as total_project, cast((select count(distinct bm.proj_id) from  iwmp_m_project p, iwmp_project_physical_plan bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_plan2022,cast((select count(distinct bm.proj_id) from  iwmp_m_project p, wdcpmksy_project_phy_achievement bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_achievement2022, cast((select count(distinct bm.proj_id) from iwmp_m_project p, iwmp_project_physical_plan bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_plan2023, cast((select count(distinct bm.proj_id) from  iwmp_m_project p, wdcpmksy_project_phy_achievement bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_achievement2023 from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 and s.st_code = :stCode group by d.dist_name, d.dcode
#districtWiseCurrentStatusPlan=select distinct d.dist_name, d.dcode, cast(count(distinct proj_id) as Integer) as total_project, cast((select count(distinct bm.proj_id) from  iwmp_m_project p, iwmp_project_physical_plan bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_plan2022,cast((select count(distinct bm.proj_id) from  iwmp_m_project p, wdcpmksy_project_phy_achievement bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_achievement2022, cast((select count(distinct bm.proj_id) from iwmp_m_project p, iwmp_project_physical_plan bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_plan2023, cast((select count(distinct bm.proj_id) from  iwmp_m_project p, wdcpmksy_project_phy_achievement bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_achievement2023 from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 and s.st_code = :stCode and d.dist_proj=true group by d.dist_name, d.dcode
districtWiseCurrentStatusPlan=select distinct d.dist_name, d.dcode, cast(count(distinct proj_id) as Integer) as total_project, cast((select count(distinct bm.proj_id) from iwmp_m_project p, iwmp_project_physical_plan bm where  d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_plan2022,cast((select count(distinct bm.proj_id) from  iwmp_m_project p, wdcpmksy_project_phy_achievement bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=22) as Integer) as total_project_achievement2022, cast((select count(distinct bm.proj_id) from iwmp_m_project p, iwmp_project_physical_plan bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_plan2023, cast((select count(distinct bm.proj_id) from  iwmp_m_project p, wdcpmksy_project_phy_achievement bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=23) as Integer) as total_project_achievement2023,cast((select count(distinct bm.proj_id) from iwmp_m_project p, iwmp_project_physical_plan bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=24) as Integer) as total_project_plan2024, cast((select count(distinct bm.proj_id) from  iwmp_m_project p, wdcpmksy_project_phy_achievement bm where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd=24) as Integer) as total_project_achievement2024 from iwmp_district d inner join iwmp_state s on d.st_code=s.st_code left join iwmp_m_project p on p.dcode=d.dcode WHERE wdcpmksy=1 and s.st_code = :stCode and d.dist_proj=true group by d.dist_name, d.dcode
getAllStatesMnthWiseMndyReport = SELECT M.Month_NAME, M.fin_month_id as month_id, CAST((SELECT COALESCE(SUM(MAN_DAY_GEN),0)) AS Integer) AS MAN_DAY, CAST((SELECT COALESCE(SUM(FARMER_SC),0)) AS Integer) AS SC, CAST((SELECT COALESCE(SUM(FARMER_ST),0)) AS Integer) AS ST, CAST((SELECT COALESCE(SUM(OTHERS),0)) AS Integer) AS OTHER,	CAST((SELECT COALESCE(SUM(FARMER_SC + FARMER_ST + OTHERS),0)) AS Integer) AS TOTAL,	CAST((SELECT COALESCE(SUM(FARMER_FEMALE),0)) AS Integer) AS FEMALE, CAST((SELECT COALESCE(SUM(FARMER_SMALL),0)) AS Integer) AS SMALL, CAST((SELECT COALESCE(SUM(FARMER_MIRGINAL),0)) AS Integer) AS MIRGINAL, CAST((SELECT COALESCE(SUM(FARMER_LANDLESS),0)) AS Integer)  AS LANDLESS, CAST((SELECT COALESCE(SUM(FARMER_BPL),0)) AS Integer)  AS BPL FROM IWMP_STATE S,IWMP_DISTRICT D,	IWMP_M_PROJECT P, iwmp_m_month M, OUTCOME_2_DATA BM	WHERE S.ST_CODE = D.ST_CODE	AND D.DCODE = P.DCODE AND P.PROJ_ID = BM.PROJ_ID AND BM.MONTH_ID = M.MONTH_ID AND BM.fin_yr_cd = :fromYear AND BM.STATUS = 'C' AND  WDCPMKSY = 1 GROUP BY M.fin_month_id, M.Month_NAME ORDER BY M.fin_month_id
getAllDistrictMnthWiseMndyReport = SELECT M.Month_NAME, M.fin_month_id as month_id, CAST((SELECT COALESCE(SUM(MAN_DAY_GEN),0)) AS Integer) AS MAN_DAY,CAST((SELECT COALESCE(SUM(FARMER_SC),0)) AS Integer) AS SC, CAST((SELECT COALESCE(SUM(FARMER_ST),0)) AS Integer) AS ST, CAST((SELECT COALESCE(SUM(OTHERS),0)) AS Integer) AS OTHER,	CAST((SELECT COALESCE(SUM(FARMER_SC + FARMER_ST + OTHERS),0)) AS Integer) AS TOTAL,	CAST((SELECT COALESCE(SUM(FARMER_FEMALE),0)) AS Integer) AS FEMALE, CAST((SELECT COALESCE(SUM(FARMER_SMALL),0)) AS Integer) AS SMALL, CAST((SELECT COALESCE(SUM(FARMER_MIRGINAL),0)) AS Integer) AS MIRGINAL, CAST((SELECT COALESCE(SUM(FARMER_LANDLESS),0)) AS Integer)  AS LANDLESS, CAST((SELECT COALESCE(SUM(FARMER_BPL),0)) AS Integer)  AS BPL FROM IWMP_DISTRICT D, IWMP_M_PROJECT P, iwmp_m_month M, OUTCOME_2_DATA BM WHERE D.st_code = :stcode AND D.DCODE = P.DCODE AND P.PROJ_ID = BM.PROJ_ID AND BM.MONTH_ID = M.MONTH_ID AND BM.fin_yr_cd = :fromYear AND BM.STATUS = 'C' GROUP BY M.fin_month_id, M.Month_NAME ORDER BY M.fin_month_id
getAllProjectMnthWiseMndyReport = SELECT M.Month_NAME, M.fin_month_id as month_id, CAST((SELECT COALESCE(SUM(MAN_DAY_GEN),0)) AS Integer) AS MAN_DAY, CAST((SELECT COALESCE(SUM(FARMER_SC),0)) AS Integer) AS SC, CAST((SELECT COALESCE(SUM(FARMER_ST),0)) AS Integer) AS ST, CAST((SELECT COALESCE(SUM(OTHERS),0)) AS Integer) AS OTHER,	CAST((SELECT COALESCE(SUM(FARMER_SC + FARMER_ST + OTHERS),0)) AS Integer) AS TOTAL,	CAST((SELECT COALESCE(SUM(FARMER_FEMALE),0)) AS Integer) AS FEMALE, CAST((SELECT COALESCE(SUM(FARMER_SMALL),0)) AS Integer) AS SMALL, CAST((SELECT COALESCE(SUM(FARMER_MIRGINAL),0)) AS Integer) AS MIRGINAL, CAST((SELECT COALESCE(SUM(FARMER_LANDLESS),0)) AS Integer)  AS LANDLESS, CAST((SELECT COALESCE(SUM(FARMER_BPL),0)) AS Integer) AS BPL FROM IWMP_M_PROJECT P, iwmp_m_month M, OUTCOME_2_DATA BM WHERE P.DCODE = :dcode	AND P.PROJ_ID = BM.PROJ_ID AND BM.MONTH_ID = M.MONTH_ID AND BM.fin_yr_cd = :fromYear AND BM.STATUS = 'C' GROUP BY M.fin_month_id, M.Month_NAME ORDER BY M.fin_month_id
getProjectMnthWiseMndyReport = SELECT M.Month_NAME, M.fin_month_id as month_id, CAST((SELECT COALESCE(SUM(MAN_DAY_GEN),0)) AS Integer) AS MAN_DAY, CAST((SELECT COALESCE(SUM(FARMER_SC),0)) AS Integer) AS SC, CAST((SELECT COALESCE(SUM(FARMER_ST),0)) AS Integer) AS ST, CAST((SELECT COALESCE(SUM(OTHERS),0)) AS Integer) AS OTHER,	CAST((SELECT COALESCE(SUM(FARMER_SC + FARMER_ST + OTHERS),0)) AS Integer) AS TOTAL,	CAST((SELECT COALESCE(SUM(FARMER_FEMALE),0)) AS Integer) AS FEMALE, CAST((SELECT COALESCE(SUM(FARMER_SMALL),0)) AS Integer) AS SMALL, CAST((SELECT COALESCE(SUM(FARMER_MIRGINAL),0)) AS Integer) AS MIRGINAL, CAST((SELECT COALESCE(SUM(FARMER_LANDLESS),0)) AS Integer)  AS LANDLESS, CAST((SELECT COALESCE(SUM(FARMER_BPL),0)) AS Integer) AS BPL FROM iwmp_m_month M, OUTCOME_2_DATA BM WHERE BM.PROJ_ID = :projId AND BM.MONTH_ID = M.MONTH_ID AND BM.fin_yr_cd = :fromYear AND BM.STATUS = 'C' GROUP BY M.fin_month_id, M.Month_NAME ORDER BY M.fin_month_id

getstatemonthachdata = SELECT st_code,(SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS st_name, sum(area_soilmoisture_activities_achie) area_soilmoisture_activities_achie, sum(area_afforestation_horticulture_achie) area_afforestation_horticulture_achie, sum(water_created_renovated_achie) water_created_renovated_achie, sum(protective_irrigation_achie) protective_irrigation_achie, (SELECT COALESCE(SUM(coalesce(t.farmer_sc,0) + coalesce(t.farmer_st,0) + coalesce(t.others,0)), 0) farmer_benefitted_achie FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode and dt.st_code = d.st_code AND t.fin_yr_cd = CASE :finCode WHEN 0 THEN t.fin_yr_cd ELSE :finCode END  and month_id=CASE :month WHEN 0 THEN month_id ELSE :month END and t.status='C' ) farmer_benefitted_achie, (SELECT SUM(coalesce(t.man_day_gen,0)) FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode and dt.st_code = d.st_code AND t.fin_yr_cd = CASE :finCode WHEN 0 THEN t.fin_yr_cd ELSE :finCode END  and month_id=CASE :month WHEN 0 THEN month_id ELSE :month END and t.status='C' ) man_days_gen, (SELECT SUM(coalesce(t.degraded_rainfed,0)) FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt WHERE t.proj_id = m.proj_id  and m.dcode=dt.dcode and dt.st_code = d.st_code AND t.fin_yr_cd = CASE :finCode WHEN 0 THEN t.fin_yr_cd ELSE :finCode END  and month_id=CASE :month WHEN 0 THEN month_id ELSE :month END and t.status='C' ) degraded_rainfed from iwmp_district d left join (SELECT dcode distcode,pa.head_code,sum(case when pa.head_code =3 then ad.achievement else 0 end) area_soilmoisture_activities_achie, case when pa.head_code =1 then SUM(ad.achievement)   when pa.head_code =2 then SUM(ad.achievement) else 0 end area_afforestation_horticulture_achie, sum(case when pa.head_code= 4 then ad.achievement when pa.head_code= 5 then ad.achievement else 0  end) water_created_renovated_achie, case when pa.head_code=6 then SUM(ad.achievement)   when pa.head_code=7 then SUM(ad.achievement)else 0  end protective_irrigation_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE :finCode WHEN 0 THEN a.fin_yr_cd ELSE :finCode END and month_id=CASE :month WHEN 0 THEN month_id ELSE :month END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project)  and d.st_code = CASE :stcode WHEN 0 THEN d.st_code ELSE :stcode end group by st_code order by st_name
getstatemonthachdatapa=SELECT st_code,(SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS st_name, sum(area_soilmoisture_activities_achie) area_soilmoisture_activities_achie, sum(area_afforestation_horticulture_achie) area_afforestation_horticulture_achie, sum(water_created_renovated_achie) water_created_renovated_achie, sum(protective_irrigation_achie) protective_irrigation_achie, (SELECT COALESCE(SUM(coalesce(t.farmer_sc,0) + coalesce(t.farmer_st,0) + coalesce(t.others,0)), 0) farmer_benefitted_achie FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode and dt.st_code = d.st_code AND t.fin_yr_cd <=:finCode and t.status='C' ) farmer_benefitted_achie, (SELECT SUM(coalesce(t.man_day_gen,0)) FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode and dt.st_code = d.st_code AND t.fin_yr_cd<=:finCode and t.status='C' ) man_days_gen, (SELECT SUM(coalesce(t.degraded_rainfed,0)) FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt WHERE t.proj_id = m.proj_id  and m.dcode=dt.dcode and dt.st_code = d.st_code AND t.fin_yr_cd <=:finCode and t.status='C' ) degraded_rainfed from iwmp_district d left join (SELECT dcode distcode, pa.head_code, sum(case when pa.head_code =3 then ad.achievement else 0 end) area_soilmoisture_activities_achie, case when pa.head_code =1 then SUM(ad.achievement)   when pa.head_code =2 then SUM(ad.achievement) else 0 end area_afforestation_horticulture_achie, sum(case when pa.head_code= 4 then ad.achievement when pa.head_code= 5 then ad.achievement else 0  end) water_created_renovated_achie, case when pa.head_code=6 then SUM(ad.achievement)   when pa.head_code=7 then SUM(ad.achievement)else 0  end protective_irrigation_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd <=:finCode AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) and d.st_code = CASE :stcode WHEN 0 THEN d.st_code ELSE :stcode end group by st_code order by st_name


getdistmonthachdata = SELECT st_code,(SELECT st_name FROM iwmp_state WHERE st_code = one.st_code) AS st_name, one.dcode, dist_name, area_soilmoisture_activities_achie, area_afforestation_horticulture_achie, water_created_renovated_achie,protective_irrigation_achie,man_days_gen, farmer_benefitted_achie,degraded_rainfed from (select st_code,dist_name, dcode,sum(area_soilmoisture_activities_achie) area_soilmoisture_activities_achie,sum(area_afforestation_horticulture_achie) area_afforestation_horticulture_achie, sum(water_created_renovated_achie) water_created_renovated_achie, sum(protective_irrigation_achie) protective_irrigation_achie, (SELECT COALESCE(SUM(coalesce(t.farmer_sc,0) + coalesce(t.farmer_st,0) + coalesce(t.others,0)), 0) farmer_benefitted_achie FROM iwmp_m_project m, outcome_2_data t WHERE t.proj_id = m.proj_id and dcode=d.dcode  AND t.fin_yr_cd = CASE :finCode WHEN 0 THEN t.fin_yr_cd ELSE :finCode END  and month_id=CASE :month WHEN 0 THEN month_id ELSE :month END and t.status='C' ) farmer_benefitted_achie, (SELECT SUM(coalesce(t.man_day_gen,0)) FROM iwmp_m_project m, outcome_2_data t WHERE t.proj_id = m.proj_id and dcode=d.dcode  AND t.fin_yr_cd = CASE :finCode WHEN 0 THEN t.fin_yr_cd ELSE :finCode END  and month_id=CASE :month WHEN 0 THEN month_id ELSE :month END and t.status='C' ) man_days_gen, (SELECT SUM(coalesce(t.degraded_rainfed,0)) FROM iwmp_m_project m, outcome_2_data t WHERE t.proj_id = m.proj_id and dcode=d.dcode  AND t.fin_yr_cd = CASE :finCode WHEN 0 THEN t.fin_yr_cd ELSE :finCode END  and month_id=CASE :month WHEN 0 THEN month_id ELSE :month END and t.status='C' ) degraded_rainfed from iwmp_district d left join (SELECT dcode distcode,pa.head_code,sum(case when pa.head_code =3 then ad.achievement else 0 end) area_soilmoisture_activities_achie, case when pa.head_code =1 then SUM(ad.achievement)   when pa.head_code =2 then SUM(ad.achievement) else 0 end area_afforestation_horticulture_achie, sum(case when pa.head_code= 4 then ad.achievement when pa.head_code= 5 then ad.achievement else 0  end) water_created_renovated_achie, case when pa.head_code=6 then SUM(ad.achievement)   when pa.head_code=7 then SUM(ad.achievement)else 0  end protective_irrigation_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pA On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE :finCode WHEN 0 THEN a.fin_yr_cd ELSE :finCode END  and month_id=CASE :month WHEN 0 THEN month_id ELSE :month END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project)  and d.st_code = :stCode and d.dist_proj is true group by st_code,dcode, dist_name)as one order by st_name, dist_name;
getsoilmoistureData = SELECT st_code,(SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS stname, coalesce(sum(area_soilmoisture_activities_achie),0) headerdesc, 'Area Covered with Soil and Moisture conservation activities (in ha.)' as headdesc from iwmp_district d left join (SELECT dcode distcode,pa.head_code,sum(case when pa.head_code =3 then ad.achievement else 0 end) area_soilmoisture_activities_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE 0 WHEN 0 THEN a.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) group by st_code, headdesc order by stname  
getafforestations = SELECT st_code,(SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS stname, coalesce(sum(area_afforestation_horticulture_achie),0) headerdesc,  'Area brought under Plantation (Horticulture and Afforestation) (in ha.)' as headdesc from iwmp_district d left join (SELECT dcode distcode,pa.head_code,case when pa.head_code =1 then SUM(ad.achievement)   when pa.head_code =2 then SUM(ad.achievement) else 0 end area_afforestation_horticulture_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE 0 WHEN 0 THEN a.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) group by st_code, headdesc order by stname
getwaterrenovation = SELECT st_code,(SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS stname, coalesce(sum(water_created_renovated_achie),0) headerdesc, 'Water Harvesting Structure newly created and rejuvenated (in no.)' as headdesc from iwmp_district d left join (SELECT dcode distcode,pa.head_code,sum(case when pa.head_code= 4 then ad.achievement when pa.head_code= 5 then ad.achievement else 0  end) water_created_renovated_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE 0 WHEN 0 THEN a.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) group by st_code, headdesc order by stname
getprotectiveirrigation = SELECT st_code,(SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS stname, coalesce(sum(protective_irrigation_achie),0) headerdesc, 'Additional Area brought under Protective Irrigation (in ha.)' as headdesc from iwmp_district d left join (SELECT dcode distcode,pa.head_code,case when pa.head_code=6 then SUM(ad.achievement)   when pa.head_code=7 then SUM(ad.achievement)else 0  end protective_irrigation_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE 0 WHEN 0 THEN a.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) group by st_code, headdesc order by stname
getmanday = SELECT s.st_code,(SELECT st_name FROM iwmp_state WHERE st_code = dt.st_code) AS stname,SUM(coalesce(t.man_day_gen,0)) headerdesc, 'Employment Generated (in mandays)' as headdesc FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt, iwmp_state s WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode  and s.st_code = dt.st_code AND t.fin_yr_cd = CASE 0 WHEN 0 THEN t.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END and t.status='C' group by s.st_code, dt.st_code order by stname
getfarmerbenefited = SELECT s.st_code,(SELECT st_name FROM iwmp_state WHERE st_code = dt.st_code) AS stname,COALESCE(SUM(coalesce(t.farmer_sc,0) + coalesce(t.farmer_st,0) + coalesce(t.others,0)), 0) headerdesc, 'Farmers Benefitted (in No.)' as headdesc FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt, iwmp_state s WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode  and s.st_code = dt.st_code AND t.fin_yr_cd = CASE 0 WHEN 0 THEN t.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END and t.status='C' group by s.st_code, dt.st_code order by stname
getdegradedrainfed = SELECT s.st_code,(SELECT st_name FROM iwmp_state WHERE st_code = dt.st_code) AS stname,SUM(coalesce(t.degraded_rainfed,0)) headerdesc, 'Area of Degraded Land covered and Rainfed area developed (in ha.)' as headdesc FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt, iwmp_state s WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode  and s.st_code = dt.st_code AND t.fin_yr_cd = CASE 0 WHEN 0 THEN t.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END and t.status='C' group by s.st_code, dt.st_code order by stname
getsoilmoistureDistrictData = SELECT (SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS stname, d.dist_name, coalesce(sum(area_soilmoisture_activities_achie),0) headerdesc, 'Area Covered with Soil and Moisture conservation activities (in ha.)' as headdesc from iwmp_district d left join (SELECT dcode distcode,pa.head_code,sum(case when pa.head_code =3 then ad.achievement else 0 end) area_soilmoisture_activities_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE 0 WHEN 0 THEN a.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) and st_code = :id group by d.st_code, d.dist_name order by d.dist_name
getDistrictafforestationData = SELECT (SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS stname, d.dist_name, coalesce(sum(area_afforestation_horticulture_achie),0) headerdesc,  'Area brought under Plantation (Horticulture and Afforestation) (in ha.)' as headdesc from iwmp_district d left join (SELECT dcode distcode,pa.head_code,case when pa.head_code =1 then SUM(ad.achievement)   when pa.head_code =2 then SUM(ad.achievement) else 0 end area_afforestation_horticulture_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE 0 WHEN 0 THEN a.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) and st_code = :id group by d.st_code, d.dist_name order by d.dist_name
getDistrictwaterrenoData = SELECT (SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS stname, d.dist_name, coalesce(sum(water_created_renovated_achie),0) headerdesc, 'Water Harvesting Structure newly created and rejuvenated (in no.)' as headdesc from iwmp_district d left join (SELECT dcode distcode,pa.head_code,sum(case when pa.head_code= 4 then ad.achievement when pa.head_code= 5 then ad.achievement else 0  end) water_created_renovated_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE 0 WHEN 0 THEN a.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) and st_code = :id group by st_code, d.dist_name order by d.dist_name
getDistrictprotectiveirrData = SELECT st_code,(SELECT st_name FROM iwmp_state WHERE st_code = d.st_code) AS stname, d.dist_name, coalesce(sum(protective_irrigation_achie),0) headerdesc, 'Additional Area brought under Protective Irrigation (in ha.)' as headdesc from iwmp_district d left join (SELECT dcode distcode,pa.head_code,case when pa.head_code=6 then SUM(ad.achievement)   when pa.head_code=7 then SUM(ad.achievement)else 0  end protective_irrigation_achie FROM iwmp_m_project p INNER JOIN wdcpmksy_project_phy_achievement a ON p.proj_id = a.proj_id INNER JOIN wdcpmksy_project_phy_ach_details ad ON a.achievement_id = ad.achievement_id inner join iwmp_m_phy_activity pa On ad.activity_code=pa.activity_code inner join iwmp_m_phy_heads h on pa.head_code=h.head_code WHERE a.fin_yr_cd = CASE 0 WHEN 0 THEN a.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END AND a.status = 'C' group by dcode,pa.head_code ) as w on dcode=distcode where dcode in(select dcode from iwmp_m_project) and st_code = :id group by st_code, d.dist_name order by d.dist_name
getDistrictmandaysData = SELECT (SELECT st_name FROM iwmp_state WHERE st_code = dt.st_code) AS stname, dt.dist_name, SUM(coalesce(t.man_day_gen,0)) headerdesc, 'Employment Generated (in mandays)' as headdesc FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt, iwmp_state s WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode  and s.st_code = dt.st_code AND t.fin_yr_cd = CASE 0 WHEN 0 THEN t.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END and s.st_code = :id and t.status='C' group by dt.dist_name, dt.st_code order by dt.dist_name
getDistrictfarmerbenefData = SELECT (SELECT st_name FROM iwmp_state WHERE st_code = dt.st_code) AS stname, dt.dist_name, COALESCE(SUM(coalesce(t.farmer_sc,0) + coalesce(t.farmer_st,0) + coalesce(t.others,0)), 0) headerdesc, 'Farmers Benefitted (in No.)' as headdesc FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt, iwmp_state s WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode  and s.st_code = dt.st_code AND t.fin_yr_cd = CASE 0 WHEN 0 THEN t.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END and t.status='C' and s.st_code = :id group by dt.dist_name, dt.st_code order by dt.dist_name
getDistrictdegradedrData = SELECT (SELECT st_name FROM iwmp_state WHERE st_code = dt.st_code) AS stname, dt.dist_name, SUM(coalesce(t.degraded_rainfed,0)) headerdesc, 'Area of Degraded Land covered and Rainfed area developed (in ha.)' as headdesc FROM iwmp_m_project m, outcome_2_data t, iwmp_district dt, iwmp_state s WHERE t.proj_id = m.proj_id and m.dcode=dt.dcode  and s.st_code = dt.st_code AND t.fin_yr_cd = CASE 0 WHEN 0 THEN t.fin_yr_cd ELSE 0 END  and month_id=CASE 0 WHEN 0 THEN month_id ELSE 0 END and t.status='C' and s.st_code = :id group by dt.dist_name, dt.st_code order by dt.dist_name


#firstQuarterDistWiseStartingYear = select dcode, distname, area_soilmoisture_activities_achie, area_afforestation_horticulture_achie, water_created_renovated_achie, farmer_benefitte_achie, protective_irrigation_achie, mandays_generated_achie, areaof_degraded_land_achie, area_soilmoisture_activities_tar,  area_afforestation_horticulture_tar, water_created_renovated_tar, farmer_benefitte_tar, protective_irrigation_tar, mandays_generated_tar, areaof_degraded_land_tar from (select d.dcode, d.dist_name as distname, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from  iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(4,5,6) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(4,5,6)),0) as areaof_degraded_land_achie from iwmp_district d WHERE d.st_code = :stcd and d.dist_proj is true order by d.dist_name) as f LEFT JOIN (select d.dcode as dcode1, sum(case when q1status='C' and indicator_id=3 then first_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q1status='C' and indicator_id in(1,2) then first_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q1status='C' and indicator_id in(4,5) then first_quad else 0 end) water_created_renovated_tar, sum(case when q1status='C' and indicator_id=26 then first_quad else 0 end) farmer_benefitte_tar, sum(case when q1status='C' and indicator_id in(6,7) then first_quad else 0 end) protective_irrigation_tar, sum(case when q1status='C' and indicator_id=27 then first_quad else 0 end) mandays_generated_tar, sum(case when q1status='C' and indicator_id in(20,21) then first_quad else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and d.dist_proj is true group by d.dcode) AS st on st.dcode1=f.dcode order by distname
#secondQuarterDistWiseStartingYear = select dcode, distname, area_soilmoisture_activities_achie, area_afforestation_horticulture_achie, water_created_renovated_achie, farmer_benefitte_achie, protective_irrigation_achie, mandays_generated_achie, areaof_degraded_land_achie, area_soilmoisture_activities_tar,  area_afforestation_horticulture_tar, water_created_renovated_tar, farmer_benefitte_tar, protective_irrigation_tar, mandays_generated_tar, areaof_degraded_land_tar from (select d.dcode, d.dist_name as distname, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(7,8,9) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(7,8,9)), 0.00) as areaof_degraded_land_achie from iwmp_district d WHERE d.st_code= :stcd and d.dist_proj is true order by dist_name) as f LEFT JOIN (select d.dcode as dcode1, sum(case when q2status='C' and indicator_id=3 then second_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q2status='C' and indicator_id in(1,2) then second_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q2status='C' and indicator_id in(4,5) then second_quad else 0 end) water_created_renovated_tar, sum(case when q2status='C' and indicator_id=26 then second_quad else 0 end) farmer_benefitte_tar, sum(case when q2status='C' and indicator_id in(6,7) then second_quad else 0 end) protective_irrigation_tar, sum(case when q2status='C' and indicator_id=27 then second_quad else 0 end) mandays_generated_tar, sum(case when q2status='C' and indicator_id in(20,21) then second_quad else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and d.dist_proj is true group by d.dcode) AS st on st.dcode1=f.dcode order by distname
#thirdQuarterDistWiseStartingYear = select dcode, distname, area_soilmoisture_activities_achie, area_afforestation_horticulture_achie, water_created_renovated_achie, farmer_benefitte_achie, protective_irrigation_achie, mandays_generated_achie, areaof_degraded_land_achie, area_soilmoisture_activities_tar,  area_afforestation_horticulture_tar, water_created_renovated_tar, farmer_benefitte_tar, protective_irrigation_tar, mandays_generated_tar, areaof_degraded_land_tar from (select d.dcode, d.dist_name as distname, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad  where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(10,11,12) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(10,11,12)), 0.00) as areaof_degraded_land_achie from iwmp_district d WHERE d.st_code=:stcd and d.dist_proj is true order by dist_name) as f LEFT JOIN (select d.dcode as dcode1,  sum(case when q3status='C' and indicator_id=3 then third_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q3status='C' and indicator_id in(1,2) then third_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q3status='C' and indicator_id in(4,5) then third_quad else 0 end) water_created_renovated_tar, sum(case when q3status='C' and indicator_id=26 then third_quad else 0 end) farmer_benefitte_tar, sum(case when q3status='C' and indicator_id in(6,7) then third_quad else 0 end) protective_irrigation_tar, sum(case when q3status='C' and indicator_id=27 then third_quad else 0 end) mandays_generated_tar, sum(case when q3status='C' and indicator_id in(20,21) then third_quad else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and d.dist_proj is true group by d.dcode) AS st on st.dcode1=f.dcode order by distname
#fourQuarterDistWiseStartingYear = select dcode, distname, area_soilmoisture_activities_achie, area_afforestation_horticulture_achie, water_created_renovated_achie, farmer_benefitte_achie, protective_irrigation_achie, mandays_generated_achie, areaof_degraded_land_achie, area_soilmoisture_activities_tar,  area_afforestation_horticulture_tar, water_created_renovated_tar, farmer_benefitte_tar, protective_irrigation_tar, mandays_generated_tar, areaof_degraded_land_tar from (select d.dcode, d.dist_name as distname, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.month_id in(1,2,3) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and t.month_id in(1,2,3)), 0.00) as areaof_degraded_land_achie from iwmp_district d WHERE d.st_code=:stcd and d.dist_proj is true order by dist_name) as f LEFT JOIN (select d.dcode as dcode1, sum(case when q4status='C' and indicator_id=3 then fourth_quad else 0 end) area_soilmoisture_activities_tar, sum(case when q4status='C' and indicator_id in(1,2) then fourth_quad else 0 end) area_afforestation_horticulture_tar, sum(case when q4status='C' and indicator_id in(4,5) then fourth_quad else 0 end) water_created_renovated_tar, sum(case when q4status='C' and indicator_id=26 then fourth_quad else 0 end) farmer_benefitte_tar, sum(case when q4status='C' and indicator_id in(6,7) then fourth_quad else 0 end) protective_irrigation_tar, sum(case when q4status='C' and indicator_id=27 then fourth_quad else 0 end) mandays_generated_tar, sum(case when q4status='C' and indicator_id in(20,21) then fourth_quad else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and d.dist_proj is true group by d.dcode) AS st on st.dcode1=f.dcode order by distname
#allQuarterDistWiseYearData =  select dcode, distname, area_soilmoisture_activities_achie, area_afforestation_horticulture_achie, water_created_renovated_achie, farmer_benefitte_achie, protective_irrigation_achie, mandays_generated_achie, areaof_degraded_land_achie, area_soilmoisture_activities_tar,  area_afforestation_horticulture_tar, water_created_renovated_tar, farmer_benefitte_tar, protective_irrigation_tar, mandays_generated_tar, areaof_degraded_land_tar from (select d.dcode, d.dist_name as distname, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=:finyr and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from iwmp_m_project p, outcome_2_data t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C'), 0.00) as areaof_degraded_land_achie from iwmp_district d WHERE d.st_code=:stcd and d.dist_proj is true order by dist_name) as f LEFT JOIN (select d.dcode as dcode1, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=3 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_soilmoisture_activities_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(1,2) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) area_afforestation_horticulture_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(4,5) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) water_created_renovated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=26 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) farmer_benefitte_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(6,7) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) protective_irrigation_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id=27 then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) mandays_generated_tar, sum(case when (q1status='C' or q2status='C' or q3status='C' or q4status='C') and indicator_id in(20,21) then (first_quad+second_quad+third_quad+fourth_quad) else 0 end) areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and d.dist_proj is true group by d.dcode) AS st on st.dcode1=f.dcode order by distname
#allQuarterDistWiseYearData = select dcode, distname, area_soilmoisture_activities_achie, area_afforestation_horticulture_achie, water_created_renovated_achie, farmer_benefitte_achie, protective_irrigation_achie, mandays_generated_achie, areaof_degraded_land_achie, area_soilmoisture_activities_tar,  area_afforestation_horticulture_tar, water_created_renovated_tar, farmer_benefitte_tar, protective_irrigation_tar, mandays_generated_tar, areaof_degraded_land_tar from (select d.dcode, d.dist_name as distname, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=(case when 0=:finyr then a.fin_yr_cd else :finyr end) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(13,14,15,16,17)), 0.00) as area_soilmoisture_activities_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=(case when 0=:finyr then a.fin_yr_cd else :finyr end) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(1,2,3,4,5,6,7,10,11,12)), 0.00) as area_afforestation_horticulture_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=(case when 0=:finyr then a.fin_yr_cd else :finyr end) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(18,19,20,21,22,23,24,25,26,27,28,29,30,31,48,49)), 0) as water_created_renovated_achie, COALESCE((select sum(farmer_sc+farmer_st+others) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and  p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C'),0) as farmer_benefitte_achie, COALESCE((select sum(achievement) from iwmp_m_project p, wdcpmksy_project_phy_achievement a, wdcpmksy_project_phy_ach_details ad where d.dcode=p.dcode and p.proj_id=a.proj_id and a.fin_yr_cd=(case when 0=:finyr then a.fin_yr_cd else :finyr end) and a.status='C' and a.achievement_id=ad.achievement_id and ad.activity_code in(32,33,34,35,36,37,38,40)), 0.00) as protective_irrigation_achie, COALESCE((select sum(man_day_gen) from iwmp_m_project p, outcome_2_data t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C'),0) as mandays_generated_achie, COALESCE((select sum(degraded_rainfed) from iwmp_m_project p, outcome_2_data t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C'), 0.00) as areaof_degraded_land_achie from iwmp_district d WHERE d.st_code=:stcd and d.dist_proj is true order by dist_name) as f LEFT JOIN (select d.dcode as dcode1, SUM(CASE WHEN q1status='C' AND indicator_id=3 THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id=3 THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id=3 THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id=3 THEN fourth_quad ELSE 0 END) as area_soilmoisture_activities_tar, SUM(CASE WHEN q1status='C' AND indicator_id in(1,2) THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id in(1,2) THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id in(1,2) THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id in(1,2) THEN fourth_quad ELSE 0 END) as area_afforestation_horticulture_tar, SUM(CASE WHEN q1status='C' AND indicator_id in(4,5) THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id in(4,5) THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id in(4,5) THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id in(4,5) THEN fourth_quad ELSE 0 END) as water_created_renovated_tar, SUM(CASE WHEN q1status='C' AND indicator_id=26 THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id=26 THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id=26 THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id=26 THEN fourth_quad ELSE 0 END) as farmer_benefitte_tar, SUM(CASE WHEN q1status='C' AND indicator_id in(6,7) THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id in(6,7) THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id in(6,7) THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id in(6,7) THEN fourth_quad ELSE 0 END) as protective_irrigation_tar, SUM(CASE WHEN q1status='C' AND indicator_id=27 THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id=27 THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id=27 THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id=27 THEN fourth_quad ELSE 0 END) as mandays_generated_tar, SUM(CASE WHEN q1status='C' AND indicator_id in(20,21) THEN first_quad ELSE 0 END) + SUM(CASE WHEN q2status='C' AND indicator_id in(20,21) THEN second_quad ELSE 0 END) + SUM(CASE WHEN q3status='C' AND indicator_id in(20,21) THEN third_quad ELSE 0 END) + SUM(CASE WHEN q4status='C' AND indicator_id in(20,21) THEN fourth_quad ELSE 0 END) as areaof_degraded_land_tar from iwmp_district d, iwmp_m_project p, wdcpmksy_quad_target t where  d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and d.dist_proj is true group by d.dcode) AS st on st.dcode1=f.dcode order by distname 

#firstQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(area_diversified_crops_achie, 0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 1 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true;
#secondQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(area_diversified_crops_achie, 0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 2 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true;
#thirdQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(area_diversified_crops_achie, 0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 3 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true;
#fourQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter2) - (select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter1) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(area_diversified_crops_achie, 0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 4 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true;
#allQuarterDistWiseYearData=select dcode, dist_name as distname, COALESCE(((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter2) - COALESCE((select area_nilsingto_doubmulcrop_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district c where d.dcode=c.dcode and quarter=:quarter1),0) ), 0.00) as area_nilsingto_doubmulcrop_achie, COALESCE(sum(area_diversified_crops_achie), 0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =:stcd and d.dist_proj is true group by dcode, dist_name order by dist_name;

#firstQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE((select sum(chnagesingle) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(4,5,6)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(4,5,6)),0.00) as area_diversified_crops_achie,	COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie,0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 1 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true
#secondQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE((select sum(chnagesingle) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(7,8,9)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(7,8,9)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 2 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true
#thirdQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE((select sum(chnagesingle) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(10,11,12)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(10,11,12)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 3 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true
#fourQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE((select sum(chnagesingle) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(1,2,3)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(1,2,3)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 4 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true
#allQuarterDistWiseYearData=select dcode, dist_name as distname, COALESCE((select sum(chnagesingle) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd =(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C' and achiev_type='Month-Wise' ),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd = (case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C' and achiev_type='Month-Wise'),0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =:stcd and d.dist_proj is true group by dcode, dist_name order by dist_name

firstQuarterDistWiseStartingYear=select dcode, dist_name as distname, 0.00 as area_nilsingto_doubmulcrop_achie, 0.00 as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie,0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(first_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q1status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(first_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q1status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q1status='C' and indicator_id=25 ) ,0.00) as numeric(20,5)) as increase_farmerincome_tar, 0.00 as increase_croparea_achie, 0.00 as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 1 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true
secondQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE((select sum(chnagesingle) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(9)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(9)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(second_quad) from   iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q2status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(second_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q2status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q2status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, 0.00 as increase_croparea_achie, 0.00 as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 2 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true
thirdQuarterDistWiseStartingYear=select dcode, dist_name as distname, 0.00 as area_nilsingto_doubmulcrop_achie, 0.00 as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(third_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q3status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(third_quad) from   iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q3status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr  and t.q3status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, 0.00 as increase_croparea_achie, 0.00 as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 3 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true
fourQuarterDistWiseStartingYear=select dcode, dist_name as distname, COALESCE((select sum(chnagesingle) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(3)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Month-Wise' and t.month_id in(3)),0.00) as area_diversified_crops_achie, COALESCE(area_soilmoisture_activities_achie, 0.00) as area_soilmoisture_activities_achie, COALESCE(area_afforestation_horticulture_achie, 0.00) as area_afforestation_horticulture_achie, COALESCE(water_created_renovated_achie, 0.00) as water_created_renovated_achie, COALESCE(farmer_benefitte_achie, 0.00) as farmer_benefitte_achie, COALESCE(protective_irrigation_achie, 0.00) as protective_irrigation_achie, COALESCE(mandays_generated_achie, 0.00) as mandays_generated_achie, COALESCE(areaof_degraded_land_achie, 0.00) as areaof_degraded_land_achie, COALESCE(area_soilmoisture_activities_tar, 0.00) as area_soilmoisture_activities_tar, COALESCE(area_afforestation_horticulture_tar, 0.00) as area_afforestation_horticulture_tar, COALESCE(water_created_renovated_tar, 0.00) as water_created_renovated_tar, COALESCE(farmer_benefitte_tar, 0.00) as farmer_benefitte_tar, COALESCE(protective_irrigation_tar, 0.00) as protective_irrigation_tar, COALESCE(mandays_generated_tar, 0.00) as mandays_generated_tar, COALESCE(areaof_degraded_land_tar, 0.00) as areaof_degraded_land_tar, COALESCE(area_diversified_crops_tar, 0.00) as area_diversified_crops_tar, COALESCE(area_nilsingto_doubmulcrop_tar, 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(fourth_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q4status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(fourth_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q4status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.q4status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, COALESCE((select sum(change_corp) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise' ),0.00) as increase_croparea_achie, cast(COALESCE((select sum(farmer_income) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise' )/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=:finyr and t.status='C' and achiev_type='Year-Wise'),0.00) as numeric(20,5)) as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = :finyr and quarter_cd = 4 and quarter=:quarter2 and st_code =:stcd and d.dist_proj is true
allQuarterDistWiseYearData=select dcode, dist_name as distname, COALESCE((select sum(chnagesingle) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C' and achiev_type='Month-Wise' and month_id in(3, 9)),0.00) as area_nilsingto_doubmulcrop_achie, COALESCE((select sum(diversified) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C' and achiev_type='Month-Wise' and month_id in(3, 9)),0.00) as area_diversified_crops_achie, COALESCE(sum(area_soilmoisture_activities_achie), 0.00) as area_soilmoisture_activities_achie, COALESCE(sum(area_afforestation_horticulture_achie), 0.00) as area_afforestation_horticulture_achie, COALESCE(sum(water_created_renovated_achie), 0.00) as water_created_renovated_achie, COALESCE(sum(farmer_benefitte_achie), 0.00) as farmer_benefitte_achie, COALESCE(sum(protective_irrigation_achie), 0.00) as protective_irrigation_achie, COALESCE(sum(mandays_generated_achie), 0.00) as mandays_generated_achie, COALESCE(sum(areaof_degraded_land_achie), 0.00) as areaof_degraded_land_achie, COALESCE(sum(area_soilmoisture_activities_tar), 0.00) as area_soilmoisture_activities_tar, COALESCE(sum(area_afforestation_horticulture_tar), 0.00) as area_afforestation_horticulture_tar, COALESCE(sum(water_created_renovated_tar), 0.00) as water_created_renovated_tar, COALESCE(sum(farmer_benefitte_tar), 0.00) as farmer_benefitte_tar, COALESCE(sum(protective_irrigation_tar), 0.00) as protective_irrigation_tar, COALESCE(sum(mandays_generated_tar),0.00) as mandays_generated_tar, COALESCE(sum(areaof_degraded_land_tar), 0.00) as areaof_degraded_land_tar, COALESCE(sum(area_diversified_crops_tar), 0.00) as area_diversified_crops_tar, COALESCE(sum(area_nilsingto_doubmulcrop_tar), 0.00) as area_nilsingto_doubmulcrop_tar, COALESCE((select sum(first_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q1status='C' and indicator_id=24),0.00)+COALESCE((select sum(second_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q2status='C' and indicator_id=24),0.00)+COALESCE((select sum(third_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q3status='C' and indicator_id=24),0.00)+COALESCE((select sum(fourth_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q4status='C' and indicator_id=24),0.00) as increase_croparea_tar, cast(COALESCE((select sum(first_quad) from  iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q1status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end)  and t.q1status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(second_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q2status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end)  and t.q2status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(third_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q3status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end)  and t.q3status='C' and indicator_id=25 ),0.00)+COALESCE((select sum(fourth_quad) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q4status='C' and indicator_id=25)/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_quad_target t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.q4status='C' and indicator_id=25 ),0.00) as numeric(20,5)) as increase_farmerincome_tar, COALESCE((select sum(change_corp) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C' and achiev_type='Year-Wise' ),0.00) as increase_croparea_achie, cast(COALESCE((select sum(farmer_income) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C' and achiev_type='Year-Wise')/(select count(distinct t.proj_id) from iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and t.status='C' and achiev_type='Year-Wise' ),0.00) as numeric(20,5)) as increase_farmerincome_achie from insert_ommf_diversified_nilsingto_doubmulcrop_district d where fin_yr_cd = (case when 0=:finyr then fin_yr_cd else :finyr end) and st_code =:stcd and d.dist_proj is true group by dcode, dist_name order by dist_name

getSLNACoordinatorsDetails = select s.st_code as stcode, s.st_name as stname, coordinator_name as name, email, mobile from slna_coordinators sc, iwmp_state s where sc.st_code = s.st_code order by s.st_name
updateSLNACoordinatorsDetails = update slna_coordinators set coordinator_name = :name, email = :email, mobile = :mobile where st_code = :stCode 

getUnfreezeWorkStatusData=select distinct cast(s.statusid as integer) as statusid, cast(s.assetid as integer) as assetid, s.projid, (select proj_name from iwmp_m_project where proj_id=s.projid ) as proj_name, (select head_desc from iwmp_m_phy_heads h, iwmp_m_phy_activity ac where h.head_code=ac.head_code and ac.activity_code=a.phy_activity_code) as head_desc, (select activity_desc from iwmp_m_phy_activity ac where ac.activity_code=a.phy_activity_code) as activity_desc, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v where b.bcode=g.bcode and g.gcode=v.gcode and v.vcode=a.vcode) as block, (select village_name from iwmp_village where vcode=a.vcode) as villagename, to_char(s.startdate,'dd/mm/yyyy') as startdate, to_char(s.completiondate,'dd/mm/yyyy') as completiondate, (case s.convergence when 'Y' then 'Yes' else 'No' end) as convergence, (case s.status when 'C' then 'Completed' when 'O' then 'Ongoing' else 'forClosed' end) as status from iwmp_project_physical_asset a, iwmp_project_asset_status s where a.assetid=s.assetid and a.proj_id=s.projid and s.projid=:proj and fin_yr_cd=:finyr and a.assetid not in(select distinct asset_id from wdcpmksy_project_phy_asset_achievement  where achievement>0 and status='C') and s.status<>'O'
getUnfreezeWorkStatusDataAllYr=select distinct cast(s.statusid as integer) as statusid, cast(s.assetid as integer) as assetid, s.projid, (select proj_name from iwmp_m_project where proj_id=s.projid ) as proj_name, (select head_desc from iwmp_m_phy_heads h, iwmp_m_phy_activity ac where h.head_code=ac.head_code and ac.activity_code=a.phy_activity_code) as head_desc, (select activity_desc from iwmp_m_phy_activity ac where ac.activity_code=a.phy_activity_code) as activity_desc, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v where b.bcode=g.bcode and g.gcode=v.gcode and v.vcode=a.vcode) as block, (select village_name from iwmp_village where vcode=a.vcode) as villagename, to_char(s.startdate,'dd/mm/yyyy') as startdate, to_char(s.completiondate,'dd/mm/yyyy') as completiondate, (case s.convergence when 'Y' then 'Yes' else 'No' end) as convergence, (case s.status when 'C' then 'Completed' when 'O' then 'Ongoing' else 'forClosed' end) as status from iwmp_project_physical_asset a, iwmp_project_asset_status s where a.assetid=s.assetid and a.proj_id=s.projid and s.projid=:proj and a.assetid not in(select distinct asset_id from wdcpmksy_project_phy_asset_achievement  where achievement>0 and status='C') and s.status<>'O'
getUnfreezeWorkStatusDataAllproject=select distinct cast(s.statusid as integer) as statusid, cast(s.assetid as integer) as assetid, s.projid, (select proj_name from iwmp_m_project where proj_id=s.projid ) as proj_name, (select head_desc from iwmp_m_phy_heads h, iwmp_m_phy_activity ac where h.head_code=ac.head_code and ac.activity_code=a.phy_activity_code) as head_desc, (select activity_desc from iwmp_m_phy_activity ac where ac.activity_code=a.phy_activity_code) as activity_desc, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v where b.bcode=g.bcode and g.gcode=v.gcode and v.vcode=a.vcode) as block, (select village_name from iwmp_village where vcode=a.vcode) as villagename, to_char(s.startdate,'dd/mm/yyyy') as startdate, to_char(s.completiondate,'dd/mm/yyyy') as completiondate, (case s.convergence when 'Y' then 'Yes' else 'No' end) as convergence, (case s.status when 'C' then 'Completed' when 'O' then 'Ongoing' else 'forClosed' end) as status from iwmp_project_physical_asset a, iwmp_project_asset_status s where a.assetid=s.assetid and a.proj_id=s.projid and s.projid in(select proj_id from iwmp_m_project where dcode=:distcode) and a.assetid not in(select distinct asset_id from wdcpmksy_project_phy_asset_achievement  where achievement>0 and status='C') and s.status<>'O' order by proj_name


getVibrantVillageDetails=select * from village_data where st_code = (case when 0=:stcd then st_code else :stcd end) and status = (case when true=:status then true else status end) order by st_name, district, block, village;
#getNRSCWorks=With STARTED as(select d.st_code, count(assetid) as STARTED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where a.status='C' group by d.st_code), ONGOING as(select d.st_code, count(a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join iwmp_project_asset_status s on a.assetid=s.assetid where s.status='O' group by d.st_code), COMPLETED as(select d.st_code, count(a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join iwmp_project_asset_status s on a.assetid=s.assetid where s.status='C' group by d.st_code), EPA as(select d.st_code, count(assetid) as EPA from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where e.status='C' group by d.st_code), LIVELIHOOD as(select d.st_code, count(assetid) as LIVELIHOOD from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where l.status='C' group by d.st_code), PRODUCTION as(select d.st_code, count(assetid) as PRODUCTION from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where pd.status='C' group by d.st_code) Select s.st_name, s.st_code, cast(COALESCE(st.STARTED,0) as Integer) as STARTED, cast(COALESCE(o.ONGOING,0) as Integer) as ONGOING, cast(COALESCE(c.COMPLETED,0) as Integer) as COMPLETED, cast(COALESCE(e.EPA,0) as Integer) as EPA, cast(COALESCE(l.LIVELIHOOD,0) as Integer) as LIVELIHOOD, cast(COALESCE(pd.PRODUCTION,0) as Integer) as PRODUCTION FROM EPA e RIGHT join iwmp_state s on e.st_code = s.st_code LEFT join STARTED st on st.st_code = s.st_code LEFT join ONGOING o on o.st_code = s.st_code LEFT join COMPLETED c on c.st_code = s.st_code LEFT join LIVELIHOOD l on l.st_code = s.st_code LEFT join PRODUCTION pd on pd.st_code = s.st_code WHERE wdcpmksy=1 GROUP BY st_name, s.st_code, st.STARTED, o.ONGOING, c.COMPLETED, e.EPA, l.LIVELIHOOD, pd.PRODUCTION ORDER BY st_name
#getNRSCDistWorks=With STARTED as(select p.dcode, count(assetid) as STARTED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id where a.status='C' group by p.dcode), ONGOING as(select p.dcode, count(a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_project_asset_status s on a.assetid=s.assetid where s.status='O' group by p.dcode), COMPLETED as(select p.dcode, count(a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_project_asset_status s on a.assetid=s.assetid where s.status='C' group by p.dcode), EPA as(select p.dcode, count(assetid) as EPA from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.dcode),  LIVELIHOOD as(select p.dcode, count(assetid) as LIVELIHOOD from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.dcode), PRODUCTION as(select p.dcode, count(assetid) as PRODUCTION from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.dcode) SELECT dist_name, d.dcode, cast(COALESCE(s.STARTED,0) as Integer) as STARTED, cast(COALESCE(o.ONGOING,0) as Integer) as ONGOING, cast(COALESCE(c.COMPLETED,0) as Integer) as COMPLETED, cast(COALESCE(e.EPA,0) as Integer) as EPA, cast(COALESCE(l.LIVELIHOOD,0) as Integer) as LIVELIHOOD, cast(COALESCE(pd.PRODUCTION,0) as Integer) as PRODUCTION FROM iwmp_district d LEFT JOIN STARTED s on s.dcode = d.dcode LEFT JOIN ONGOING o on o.dcode = d.dcode LEFT JOIN COMPLETED c on c.dcode = d.dcode LEFT JOIN EPA e on e.dcode = d.dcode LEFT JOIN LIVELIHOOD l on l.dcode = d.dcode LEFT JOIN PRODUCTION pd on pd.dcode = d.dcode WHERE st_code = :stcd GROUP BY d.dcode, dist_name, s.STARTED, o.ONGOING, c.COMPLETED, e.EPA, l.LIVELIHOOD, pd.PRODUCTION ORDER BY dist_name
#getNRSCProjWorks=With STARTED as(select proj_id, count(assetid) as STARTED from iwmp_project_physical_asset where status='C' group by proj_id), ONGOING as(select proj_id, count(a.assetid) as ONGOING from iwmp_project_physical_asset a, iwmp_project_asset_status s where s.status='O' and a.assetid=s.assetid group by proj_id), COMPLETED as(select proj_id, count(a.assetid) as COMPLETED from iwmp_project_physical_asset a, iwmp_project_asset_status s where s.status='C' and a.assetid=s.assetid group by proj_id), EPA as(select proj_id, count(assetid) as EPA from wdcpmksy_epa_workid where status='C' group by proj_id), LIVELIHOOD as(select proj_id, count(assetid) as LIVELIHOOD from wdcpmksy_livelihood_workid where status='C' group by proj_id), PRODUCTION as(select proj_id, count(assetid) as PRODUCTION from wdcpmksy_prdouction_workid where status='C' group by proj_id) SELECT proj_name, p.proj_id, cast(COALESCE(s.STARTED,0) as Integer) as STARTED, cast(COALESCE(o.ONGOING,0) as Integer) as ONGOING, cast(COALESCE(c.COMPLETED,0) as Integer) as COMPLETED, cast(COALESCE(e.EPA,0) as Integer) as EPA, cast(COALESCE(l.LIVELIHOOD,0) as Integer) as LIVELIHOOD, cast(COALESCE(pd.PRODUCTION,0) as Integer) as PRODUCTION FROM iwmp_m_project p LEFT JOIN STARTED s on s.proj_id = p.proj_id LEFT JOIN ONGOING o on o.proj_id = p.proj_id LEFT JOIN COMPLETED c on c.proj_id = p.proj_id LEFT JOIN EPA e on e.proj_id = p.proj_id LEFT JOIN LIVELIHOOD l on l.proj_id = p.proj_id LEFT JOIN PRODUCTION pd on pd.proj_id = p.proj_id WHERE dcode = :dcode GROUP BY p.proj_id, proj_name, s.STARTED, o.ONGOING, c.COMPLETED, e.EPA, l.LIVELIHOOD, pd.PRODUCTION ORDER BY proj_name
getProjectSanctioned=select s.st_name, s.st_code, cast(count(distinct(d.dcode)) as int) as district, cast(count(p.proj_id) as int) as project, sum(area_proposed) as area, sum(project_cost) as cost, sum(central_share_amt) as central, sum(state_share_amt) as state from iwmp_m_project as p,iwmp_district d, iwmp_state s where p.dcode = d.dcode and d.st_code = s.st_code and p.status='C' and s.st_code = case 0 when 0 then s.st_code else 0 end and project_sanction_yr = case :finyear when 0 then project_sanction_yr else :finyear end GROUP BY s.st_name, s.st_code order by s.st_name

#getNRSCWorks=SELECT st_name, a.st_code, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED FROM (With PROJECTS as(select d.st_code, count(proj_id) as PROJECTS from iwmp_m_project p inner join iwmp_district d on p.dcode = d.dcode group by d.st_code), NRMCREATED as(select d.st_code, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode group by d.st_code), NRMUNSTARTED as(select d.st_code, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.assetid IS NULL group by d.st_code), NRMONGOING as(select d.st_code, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='O' group by d.st_code), NRMCOMPLETED as(select d.st_code, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='C' group by d.st_code), NRMFORCLOSED as(select d.st_code, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='F' group by d.st_code), EPACREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where e.status='C' group by d.st_code), EPAUNSTARTED as(select d.st_code, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by d.st_code), EPAONGOING as(select d.st_code, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by d.st_code), EPACOMPLETED as(select d.st_code, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by d.st_code), EPAFORCLOSED as(select d.st_code, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by d.st_code), LIVELIHOODCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where l.status='C' group by d.st_code), LIVELIHOODUNSTARTED as(select d.st_code, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by d.st_code), LIVELIHOODONGOING as(select d.st_code, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by d.st_code), LIVELIHOODCOMPLETED as(select d.st_code, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by d.st_code), LIVELIHOODFORCLOSED as(select d.st_code, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by d.st_code), PRODUCTIONCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where pd.status='C' group by d.st_code), PRODUCTIONUNSTARTED as(select d.st_code, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by d.st_code), PRODUCTIONONGOING as(select d.st_code, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by d.st_code), PRODUCTIONCOMPLETED as(select d.st_code, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by d.st_code), PRODUCTIONFORCLOSED as(select d.st_code, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by d.st_code) Select s.st_name, s.st_code, cast(COALESCE(p.PROJECTS,0) as Integer) as PROJECTS, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED FROM PROJECTS p RIGHT join iwmp_state s on p.st_code = s.st_code LEFT join NRMCREATED ncr on ncr.st_code = s.st_code LEFT join NRMUNSTARTED nus on nus.st_code = s.st_code LEFT join NRMONGOING no on no.st_code = s.st_code LEFT join NRMCOMPLETED nc on nc.st_code = s.st_code LEFT join NRMFORCLOSED nf on nf.st_code = s.st_code LEFT join EPACREATED ecr on ecr.st_code = s.st_code LEFT join EPAUNSTARTED eus on eus.st_code = s.st_code LEFT join EPAONGOING eo on eo.st_code = s.st_code LEFT join EPACOMPLETED ec on ec.st_code = s.st_code LEFT join EPAFORCLOSED ef on ef.st_code = s.st_code LEFT join LIVELIHOODCREATED lcr on lcr.st_code = s.st_code LEFT join LIVELIHOODUNSTARTED lus on lus.st_code = s.st_code LEFT join LIVELIHOODONGOING lo on lo.st_code = s.st_code LEFT join LIVELIHOODCOMPLETED lc on lc.st_code = s.st_code LEFT join LIVELIHOODFORCLOSED lf on lf.st_code = s.st_code LEFT join PRODUCTIONCREATED pcr on pcr.st_code = s.st_code LEFT join PRODUCTIONUNSTARTED pus on pus.st_code = s.st_code LEFT join PRODUCTIONONGOING po on po.st_code = s.st_code LEFT join PRODUCTIONCOMPLETED pc on pc.st_code = s.st_code LEFT join PRODUCTIONFORCLOSED pf on pf.st_code = s.st_code WHERE wdcpmksy=1 GROUP BY st_name, s.st_code, p.PROJECTS, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED ORDER BY st_name) as a GROUP BY a.st_name, a.st_code, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED ORDER BY st_name
getNRSCWorks=SELECT st_name, a.st_code, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED FROM (With PROJECTS as(select d.st_code, count(proj_id) as PROJECTS from iwmp_m_project p inner join iwmp_district d on p.dcode = d.dcode group by d.st_code), NRMCREATED as(select d.st_code, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by d.st_code), NRMUNSTARTED as(select d.st_code, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.assetid IS NULL group by d.st_code), NRMONGOING as(select d.st_code, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='O' group by d.st_code), NRMCOMPLETED as(select d.st_code, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='C' and a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork)group by d.st_code), NRMFORCLOSED as(select d.st_code, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='F' group by d.st_code), EPACREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where e.status='C' group by d.st_code), EPAUNSTARTED as(select d.st_code, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by d.st_code), EPAONGOING as(select d.st_code, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by d.st_code), EPACOMPLETED as(select d.st_code, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by d.st_code), EPAFORCLOSED as(select d.st_code, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by d.st_code), LIVELIHOODCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where l.status='C' group by d.st_code), LIVELIHOODUNSTARTED as(select d.st_code, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by d.st_code), LIVELIHOODONGOING as(select d.st_code, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by d.st_code), LIVELIHOODCOMPLETED as(select d.st_code, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by d.st_code), LIVELIHOODFORCLOSED as(select d.st_code, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by d.st_code), PRODUCTIONCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where pd.status='C' group by d.st_code), PRODUCTIONUNSTARTED as(select d.st_code, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by d.st_code), PRODUCTIONONGOING as(select d.st_code, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by d.st_code), PRODUCTIONCOMPLETED as(select d.st_code, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by d.st_code), PRODUCTIONFORCLOSED as(select d.st_code, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by d.st_code) Select s.st_name, s.st_code, cast(COALESCE(p.PROJECTS,0) as Integer) as PROJECTS, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED FROM PROJECTS p RIGHT join iwmp_state s on p.st_code = s.st_code LEFT join NRMCREATED ncr on ncr.st_code = s.st_code LEFT join NRMUNSTARTED nus on nus.st_code = s.st_code LEFT join NRMONGOING no on no.st_code = s.st_code LEFT join NRMCOMPLETED nc on nc.st_code = s.st_code LEFT join NRMFORCLOSED nf on nf.st_code = s.st_code LEFT join EPACREATED ecr on ecr.st_code = s.st_code LEFT join EPAUNSTARTED eus on eus.st_code = s.st_code LEFT join EPAONGOING eo on eo.st_code = s.st_code LEFT join EPACOMPLETED ec on ec.st_code = s.st_code LEFT join EPAFORCLOSED ef on ef.st_code = s.st_code LEFT join LIVELIHOODCREATED lcr on lcr.st_code = s.st_code LEFT join LIVELIHOODUNSTARTED lus on lus.st_code = s.st_code LEFT join LIVELIHOODONGOING lo on lo.st_code = s.st_code LEFT join LIVELIHOODCOMPLETED lc on lc.st_code = s.st_code LEFT join LIVELIHOODFORCLOSED lf on lf.st_code = s.st_code LEFT join PRODUCTIONCREATED pcr on pcr.st_code = s.st_code LEFT join PRODUCTIONUNSTARTED pus on pus.st_code = s.st_code LEFT join PRODUCTIONONGOING po on po.st_code = s.st_code LEFT join PRODUCTIONCOMPLETED pc on pc.st_code = s.st_code LEFT join PRODUCTIONFORCLOSED pf on pf.st_code = s.st_code WHERE wdcpmksy=1 GROUP BY st_name, s.st_code, p.PROJECTS, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED ORDER BY st_name) as a GROUP BY a.st_name, a.st_code, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED ORDER BY st_name
#getNRSCDistWorks=SELECT dist_name, a.dcode, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED FROM (With PROJECTS as(select dcode, count(proj_id) as PROJECTS from iwmp_m_project p group by dcode), NRMCREATED as(select p.dcode, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id group by p.dcode), NRMUNSTARTED as(select p.dcode, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.dcode), NRMONGOING as(select p.dcode, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.dcode), NRMCOMPLETED as(select p.dcode, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' group by p.dcode), NRMFORCLOSED as(select p.dcode, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.dcode), EPACREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.dcode), EPAUNSTARTED as(select p.dcode, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.dcode), EPAONGOING as(select p.dcode, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.dcode), EPACOMPLETED as(select p.dcode, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.dcode), EPAFORCLOSED as(select p.dcode, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.dcode), LIVELIHOODCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.dcode), LIVELIHOODUNSTARTED as(select p.dcode, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.dcode), LIVELIHOODONGOING as(select p.dcode, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.dcode), LIVELIHOODCOMPLETED as(select p.dcode, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.dcode), LIVELIHOODFORCLOSED as(select p.dcode, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.dcode), PRODUCTIONCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.dcode), PRODUCTIONUNSTARTED as(select p.dcode, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.dcode), PRODUCTIONONGOING as(select p.dcode, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.dcode), PRODUCTIONCOMPLETED as(select p.dcode, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.dcode), PRODUCTIONFORCLOSED as(select p.dcode, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.dcode) SELECT dist_name, d.dcode, cast(COALESCE(p.PROJECTS,0) as Integer) as PROJECTS, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED FROM iwmp_district d join PROJECTS p on p.dcode = d.dcode LEFT join NRMCREATED ncr on ncr.dcode = d.dcode LEFT join NRMUNSTARTED nus on nus.dcode = d.dcode LEFT join NRMONGOING no on no.dcode = d.dcode LEFT join NRMCOMPLETED nc on nc.dcode = d.dcode LEFT join NRMFORCLOSED nf on nf.dcode = d.dcode LEFT join EPACREATED ecr on ecr.dcode = d.dcode LEFT join EPAUNSTARTED eus on eus.dcode = d.dcode LEFT join EPAONGOING eo on eo.dcode = d.dcode LEFT join EPACOMPLETED ec on ec.dcode = d.dcode LEFT join EPAFORCLOSED ef on ef.dcode = d.dcode LEFT join LIVELIHOODCREATED lcr on lcr.dcode = d.dcode LEFT join LIVELIHOODUNSTARTED lus on lus.dcode = d.dcode LEFT join LIVELIHOODONGOING lo on lo.dcode = d.dcode LEFT join LIVELIHOODCOMPLETED lc on lc.dcode = d.dcode LEFT join LIVELIHOODFORCLOSED lf on lf.dcode = d.dcode LEFT join PRODUCTIONCREATED pcr on pcr.dcode = d.dcode LEFT join PRODUCTIONUNSTARTED pus on pus.dcode = d.dcode LEFT join PRODUCTIONONGOING po on po.dcode = d.dcode LEFT join PRODUCTIONCOMPLETED pc on pc.dcode = d.dcode LEFT join PRODUCTIONFORCLOSED pf on pf.dcode = d.dcode WHERE st_code = :stcd GROUP BY d.dcode, dist_name, p.PROJECTS, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED ORDER BY dist_name) as a GROUP BY dist_name, a.dcode, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED ORDER BY dist_name
getNRSCDistWorks=SELECT dist_name, a.dcode, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED FROM (With PROJECTS as(select dcode, count(proj_id) as PROJECTS from iwmp_m_project p group by dcode), NRMCREATED as(select p.dcode, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id where a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by p.dcode), NRMUNSTARTED as(select p.dcode, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.dcode), NRMONGOING as(select p.dcode, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.dcode), NRMCOMPLETED as(select p.dcode, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' and a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by p.dcode), NRMFORCLOSED as(select p.dcode, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.dcode), EPACREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.dcode), EPAUNSTARTED as(select p.dcode, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.dcode), EPAONGOING as(select p.dcode, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.dcode), EPACOMPLETED as(select p.dcode, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.dcode), EPAFORCLOSED as(select p.dcode, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.dcode), LIVELIHOODCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.dcode), LIVELIHOODUNSTARTED as(select p.dcode, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.dcode), LIVELIHOODONGOING as(select p.dcode, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.dcode), LIVELIHOODCOMPLETED as(select p.dcode, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.dcode), LIVELIHOODFORCLOSED as(select p.dcode, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.dcode), PRODUCTIONCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.dcode), PRODUCTIONUNSTARTED as(select p.dcode, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.dcode), PRODUCTIONONGOING as(select p.dcode, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.dcode), PRODUCTIONCOMPLETED as(select p.dcode, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.dcode), PRODUCTIONFORCLOSED as(select p.dcode, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.dcode) SELECT dist_name, d.dcode, cast(COALESCE(p.PROJECTS,0) as Integer) as PROJECTS, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED FROM iwmp_district d join PROJECTS p on p.dcode = d.dcode LEFT join NRMCREATED ncr on ncr.dcode = d.dcode LEFT join NRMUNSTARTED nus on nus.dcode = d.dcode LEFT join NRMONGOING no on no.dcode = d.dcode LEFT join NRMCOMPLETED nc on nc.dcode = d.dcode LEFT join NRMFORCLOSED nf on nf.dcode = d.dcode LEFT join EPACREATED ecr on ecr.dcode = d.dcode LEFT join EPAUNSTARTED eus on eus.dcode = d.dcode LEFT join EPAONGOING eo on eo.dcode = d.dcode LEFT join EPACOMPLETED ec on ec.dcode = d.dcode LEFT join EPAFORCLOSED ef on ef.dcode = d.dcode LEFT join LIVELIHOODCREATED lcr on lcr.dcode = d.dcode LEFT join LIVELIHOODUNSTARTED lus on lus.dcode = d.dcode LEFT join LIVELIHOODONGOING lo on lo.dcode = d.dcode LEFT join LIVELIHOODCOMPLETED lc on lc.dcode = d.dcode LEFT join LIVELIHOODFORCLOSED lf on lf.dcode = d.dcode LEFT join PRODUCTIONCREATED pcr on pcr.dcode = d.dcode LEFT join PRODUCTIONUNSTARTED pus on pus.dcode = d.dcode LEFT join PRODUCTIONONGOING po on po.dcode = d.dcode LEFT join PRODUCTIONCOMPLETED pc on pc.dcode = d.dcode LEFT join PRODUCTIONFORCLOSED pf on pf.dcode = d.dcode WHERE st_code = :stcd GROUP BY d.dcode, dist_name, p.PROJECTS, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED ORDER BY dist_name) as a GROUP BY dist_name, a.dcode, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED ORDER BY dist_name
#getNRSCProjWorks=SELECT proj_name, a.proj_id, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED FROM (With NRMCREATED as(select p.proj_id, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id group by p.proj_id), NRMUNSTARTED as(select p.proj_id, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.proj_id), NRMONGOING as(select p.proj_id, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.proj_id), NRMCOMPLETED as(select p.proj_id, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' group by p.proj_id), NRMFORCLOSED as(select p.proj_id, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.proj_id), EPACREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.proj_id), EPAUNSTARTED as(select p.proj_id, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.proj_id), EPAONGOING as(select p.proj_id, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.proj_id), EPACOMPLETED as(select p.proj_id, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.proj_id), EPAFORCLOSED as(select p.proj_id, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.proj_id), LIVELIHOODCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.proj_id), LIVELIHOODUNSTARTED as(select p.proj_id, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.proj_id), LIVELIHOODONGOING as(select p.proj_id, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.proj_id), LIVELIHOODCOMPLETED as(select p.proj_id, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.proj_id), LIVELIHOODFORCLOSED as(select p.proj_id, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.proj_id), PRODUCTIONCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.proj_id), PRODUCTIONUNSTARTED as(select p.proj_id, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.proj_id), PRODUCTIONONGOING as(select p.proj_id, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.proj_id), PRODUCTIONCOMPLETED as(select p.proj_id, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.proj_id), PRODUCTIONFORCLOSED as(select p.proj_id, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.proj_id) SELECT proj_name, p.proj_id, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED FROM iwmp_m_project p LEFT join NRMCREATED ncr on ncr.proj_id = p.proj_id LEFT join NRMUNSTARTED nus on nus.proj_id = p.proj_id LEFT join NRMONGOING no on no.proj_id = p.proj_id LEFT join NRMCOMPLETED nc on nc.proj_id = p.proj_id LEFT join NRMFORCLOSED nf on nf.proj_id = p.proj_id LEFT join EPACREATED ecr on ecr.proj_id = p.proj_id LEFT join EPAUNSTARTED eus on eus.proj_id = p.proj_id LEFT join EPAONGOING eo on eo.proj_id = p.proj_id LEFT join EPACOMPLETED ec on ec.proj_id = p.proj_id LEFT join EPAFORCLOSED ef on ef.proj_id = p.proj_id LEFT join LIVELIHOODCREATED lcr on lcr.proj_id = p.proj_id LEFT join LIVELIHOODUNSTARTED lus on lus.proj_id = p.proj_id LEFT join LIVELIHOODONGOING lo on lo.proj_id = p.proj_id LEFT join LIVELIHOODCOMPLETED lc on lc.proj_id = p.proj_id LEFT join LIVELIHOODFORCLOSED lf on lf.proj_id = p.proj_id LEFT join PRODUCTIONCREATED pcr on pcr.proj_id = p.proj_id LEFT join PRODUCTIONUNSTARTED pus on pus.proj_id = p.proj_id LEFT join PRODUCTIONONGOING po on po.proj_id = p.proj_id LEFT join PRODUCTIONCOMPLETED pc on pc.proj_id = p.proj_id LEFT join PRODUCTIONFORCLOSED pf on pf.proj_id = p.proj_id WHERE dcode = :dcode GROUP BY p.proj_id, proj_name, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED ORDER BY proj_name) as a GROUP BY proj_name, a.proj_id, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED ORDER BY proj_name
getNRSCProjWorks=SELECT proj_name, a.proj_id, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED FROM (With NRMCREATED as(select p.proj_id, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id where a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork)	group by p.proj_id), NRMUNSTARTED as(select p.proj_id, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.proj_id), NRMONGOING as(select p.proj_id, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.proj_id), NRMCOMPLETED as(select p.proj_id, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' and a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by p.proj_id), NRMFORCLOSED as(select p.proj_id, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.proj_id), EPACREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.proj_id), EPAUNSTARTED as(select p.proj_id, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.proj_id), EPAONGOING as(select p.proj_id, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.proj_id), EPACOMPLETED as(select p.proj_id, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.proj_id), EPAFORCLOSED as(select p.proj_id, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.proj_id), LIVELIHOODCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.proj_id), LIVELIHOODUNSTARTED as(select p.proj_id, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.proj_id), LIVELIHOODONGOING as(select p.proj_id, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.proj_id), LIVELIHOODCOMPLETED as(select p.proj_id, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.proj_id), LIVELIHOODFORCLOSED as(select p.proj_id, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.proj_id), PRODUCTIONCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.proj_id), PRODUCTIONUNSTARTED as(select p.proj_id, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.proj_id), PRODUCTIONONGOING as(select p.proj_id, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.proj_id), PRODUCTIONCOMPLETED as(select p.proj_id, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.proj_id), PRODUCTIONFORCLOSED as(select p.proj_id, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.proj_id) SELECT proj_name, p.proj_id, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED FROM iwmp_m_project p LEFT join NRMCREATED ncr on ncr.proj_id = p.proj_id LEFT join NRMUNSTARTED nus on nus.proj_id = p.proj_id LEFT join NRMONGOING no on no.proj_id = p.proj_id LEFT join NRMCOMPLETED nc on nc.proj_id = p.proj_id LEFT join NRMFORCLOSED nf on nf.proj_id = p.proj_id LEFT join EPACREATED ecr on ecr.proj_id = p.proj_id LEFT join EPAUNSTARTED eus on eus.proj_id = p.proj_id LEFT join EPAONGOING eo on eo.proj_id = p.proj_id LEFT join EPACOMPLETED ec on ec.proj_id = p.proj_id LEFT join EPAFORCLOSED ef on ef.proj_id = p.proj_id LEFT join LIVELIHOODCREATED lcr on lcr.proj_id = p.proj_id LEFT join LIVELIHOODUNSTARTED lus on lus.proj_id = p.proj_id LEFT join LIVELIHOODONGOING lo on lo.proj_id = p.proj_id LEFT join LIVELIHOODCOMPLETED lc on lc.proj_id = p.proj_id LEFT join LIVELIHOODFORCLOSED lf on lf.proj_id = p.proj_id LEFT join PRODUCTIONCREATED pcr on pcr.proj_id = p.proj_id LEFT join PRODUCTIONUNSTARTED pus on pus.proj_id = p.proj_id LEFT join PRODUCTIONONGOING po on po.proj_id = p.proj_id LEFT join PRODUCTIONCOMPLETED pc on pc.proj_id = p.proj_id LEFT join PRODUCTIONFORCLOSED pf on pf.proj_id = p.proj_id WHERE dcode = :dcode GROUP BY p.proj_id, proj_name, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED ORDER BY proj_name) as a GROUP BY proj_name, a.proj_id, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED ORDER BY proj_name

#getConvergenceWorks=SELECT h.head_code, h.head_desc, cast(COALESCE(totalWorks,0) as Integer) as totalWorks, cast(COALESCE(convergedWorks, 0) as Integer) as convergedWorks FROM iwmp_m_phy_heads h LEFT JOIN (select h.head_code, h.head_desc, COUNT(DISTINCT(pa.assetid)) AS totalWorks from iwmp_m_phy_activity ab join iwmp_m_phy_heads h ON ab.head_code = h.head_code left join iwmp_project_physical_asset pa ON ab.activity_code = pa.phy_activity_code join iwmp_m_project p On p.proj_id=pa.proj_id join iwmp_district d On d.dcode=p.dcode where p.proj_id=case when 0=:projid then p.proj_id else :projid end and d.dcode=case when 0=:dcode then d.dcode else :dcode end and st_code=case when 0=:stcd then st_code else :stcd end GROUP BY h.head_code, h.head_desc ORDER BY h.head_code, h.head_desc) as tw on tw.head_code=h.head_code LEFT JOIN (select h.head_code, h.head_desc, COUNT(DISTINCT(CASE WHEN s.convergence = 'Y' THEN s.assetid END)) AS convergedWorks from iwmp_m_phy_activity ab join iwmp_m_phy_heads h ON ab.head_code = h.head_code left join iwmp_project_physical_asset pa ON ab.activity_code = pa.phy_activity_code left join iwmp_project_asset_status s ON pa.assetid = s.assetid join iwmp_m_project p On p.proj_id=pa.proj_id join iwmp_district d On d.dcode=p.dcode where p.proj_id=case when 0=:projid then p.proj_id else :projid end and d.dcode=case when 0=:dcode then d.dcode else :dcode end and st_code=case when 0=:stcd then st_code else :stcd end GROUP BY h.head_code, h.head_desc ORDER BY h.head_code, h.head_desc) as cw on cw.head_code=h.head_code where h.head_code not in(6,7)
getConvergenceWorks=SELECT h.head_code, h.head_desc, cast(COALESCE(totalWorks,0) as Integer) as totalWorks, cast(COALESCE(convergedWorks, 0) as Integer) as convergedWorks, COALESCE(expndtr_wdc2,0) as expndtr_wdc2, COALESCE(expndtr_cnvrgd_scheme,0) as expndtr_cnvrgd_scheme FROM iwmp_m_phy_heads h LEFT JOIN (select h.head_code, h.head_desc, COUNT(DISTINCT(pa.assetid)) AS totalWorks from iwmp_m_phy_activity ab join iwmp_m_phy_heads h ON ab.head_code = h.head_code left join iwmp_project_physical_asset pa ON ab.activity_code = pa.phy_activity_code join iwmp_m_project p On p.proj_id=pa.proj_id join iwmp_district d On d.dcode=p.dcode where p.proj_id=case when 0=:projid then p.proj_id else :projid end and d.dcode=case when 0=:dcode then d.dcode else :dcode end and st_code=case when 0=:stcd then st_code else :stcd end GROUP BY h.head_code, h.head_desc ORDER BY h.head_code, h.head_desc) as tw on tw.head_code=h.head_code LEFT JOIN (select h.head_code, h.head_desc, COUNT(DISTINCT(CASE WHEN s.convergence = 'Y' THEN s.assetid END)) AS convergedWorks from iwmp_m_phy_activity ab join iwmp_m_phy_heads h ON ab.head_code = h.head_code left join iwmp_project_physical_asset pa ON ab.activity_code = pa.phy_activity_code left join iwmp_project_asset_status s ON pa.assetid = s.assetid join iwmp_m_project p On p.proj_id=pa.proj_id join iwmp_district d On d.dcode=p.dcode where p.proj_id=case when 0=:projid then p.proj_id else :projid end and d.dcode=case when 0=:dcode then d.dcode else :dcode end and st_code=case when 0=:stcd then st_code else :stcd end GROUP BY h.head_code, h.head_desc ORDER BY h.head_code, h.head_desc) as cw on cw.head_code=h.head_code LEFT JOIN (select h.head_code, h.head_desc, sum(expndtr_wdc2) as expndtr_wdc2,sum(expndtr_cnvrgd_scheme) as expndtr_cnvrgd_scheme from iwmp_m_phy_activity ab join iwmp_m_phy_heads h ON ab.head_code = h.head_code left join iwmp_project_physical_asset pa ON ab.activity_code = pa.phy_activity_code join convergence_work_detail wd ON wd.assetid = pa.assetid join iwmp_m_project p On p.proj_id=pa.proj_id join iwmp_district d On d.dcode=p.dcode where p.proj_id=case when 0=:projid then p.proj_id else :projid end and d.dcode=case when 0=:dcode then d.dcode else :dcode end and st_code=case when 0=:stcd then st_code else :stcd end and wd.status='C' GROUP BY h.head_code, h.head_desc ORDER BY h.head_code, h.head_desc) as ex on ex.head_code=h.head_code where h.head_code not in(6,7)
getConvergedWorks=WITH TotalWorks as (select st_code, COUNT(DISTINCT pa.assetid) AS totwrks, COUNT(DISTINCT CASE WHEN a.head_code=1 THEN pa.assetid END) AS afforestation, COUNT(DISTINCT CASE WHEN a.head_code=2 THEN pa.assetid END) AS horticulture, COUNT(DISTINCT CASE WHEN a.head_code=3 THEN pa.assetid END) AS soil_moisture, COUNT(DISTINCT CASE WHEN a.head_code=4 THEN pa.assetid END) AS water_harvesting_new, COUNT(DISTINCT CASE WHEN a.head_code=5 THEN pa.assetid END) AS water_harvesting_renovated, COUNT(DISTINCT CASE WHEN a.head_code=8 THEN pa.assetid END) AS vegetative_structure, COUNT(DISTINCT CASE WHEN a.head_code=9 THEN pa.assetid END) AS springsheds from iwmp_district d left join iwmp_m_project p ON d.dcode = p.dcode left join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id left join iwmp_m_phy_activity a ON pa.phy_activity_code = a.activity_code group by st_code), ConveredWorks as (select st_code, COUNT(DISTINCT pa.assetid) AS conwrks, COUNT(DISTINCT CASE WHEN a.head_code=1 THEN pa.assetid END) AS afforestation_conv, COUNT(DISTINCT CASE WHEN a.head_code=2 THEN pa.assetid END) AS horticulture_conv, COUNT(DISTINCT CASE WHEN a.head_code=3 THEN pa.assetid END) AS soil_moisture_conv, COUNT(DISTINCT CASE WHEN a.head_code=4 THEN pa.assetid END) AS water_harvesting_new_conv, COUNT(DISTINCT CASE WHEN a.head_code=5 THEN pa.assetid END) AS water_harvesting_renovated_conv, COUNT(DISTINCT CASE WHEN a.head_code=8 THEN pa.assetid END) AS vegetative_structure_conv, COUNT(DISTINCT CASE WHEN a.head_code=9 THEN pa.assetid END) AS springsheds_conv from iwmp_district d left join iwmp_m_project p ON d.dcode = p.dcode left join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id left join iwmp_m_phy_activity a ON pa.phy_activity_code = a.activity_code left join iwmp_project_asset_status sa ON pa.assetid = sa.assetid where sa.convergence = 'Y' group by st_code) SELECT st_name, s.st_code, cast(COALESCE(tw.totwrks,0)as Integer) as totalworks, cast(COALESCE(cw.conwrks,0)as Integer) as convergedworks, cast(COALESCE(tw.afforestation,0)as Integer) as afforestation, cast(COALESCE(cw.afforestation_conv,0)as Integer) as afforestation_conv, cast(COALESCE(tw.horticulture,0)as Integer) as horticulture, cast(COALESCE(cw.horticulture_conv,0)as Integer) as horticulture_conv, cast(COALESCE(tw.soil_moisture,0)as Integer) as soil_moisture, cast(COALESCE(cw.soil_moisture_conv,0)as Integer) as soil_moisture_conv, cast(COALESCE(tw.water_harvesting_new,0)as Integer) as water_harvesting_new, cast(COALESCE(cw.water_harvesting_new_conv,0)as Integer) as water_harvesting_new_conv, cast(COALESCE(tw.water_harvesting_renovated,0)as Integer) as water_harvesting_renovated, cast(COALESCE(cw.water_harvesting_renovated_conv,0)as Integer) as water_harvesting_renovated_conv, cast(COALESCE(tw.vegetative_structure,0)as Integer) as vegetative_structure, cast(COALESCE(cw.vegetative_structure_conv,0)as Integer) as vegetative_structure_conv, cast(COALESCE(tw.springsheds,0)as Integer) as springsheds, cast(COALESCE(cw.springsheds_conv,0)as Integer) as springsheds_conv FROM iwmp_state s LEFT JOIN TotalWorks tw on tw.st_code=s.st_code LEFT JOIN ConveredWorks cw on cw.st_code=s.st_code WHERE wdcpmksy = 1 GROUP BY s.st_code, st_name, tw.totwrks, cw.conwrks, tw.afforestation, cw.afforestation_conv, tw.horticulture, cw.horticulture_conv, tw.soil_moisture, cw.soil_moisture_conv, tw.water_harvesting_new, cw.water_harvesting_new_conv, tw.water_harvesting_renovated, cw.water_harvesting_renovated_conv, tw.vegetative_structure, cw.vegetative_structure_conv, tw.springsheds, cw.springsheds_conv ORDER BY st_name
getConvergedDistWorks=WITH TotalWorks as (select dcode, COUNT(DISTINCT pa.assetid) AS totwrks, COUNT(DISTINCT CASE WHEN a.head_code=1 THEN pa.assetid END) AS afforestation, COUNT(DISTINCT CASE WHEN a.head_code=2 THEN pa.assetid END) AS horticulture, COUNT(DISTINCT CASE WHEN a.head_code=3 THEN pa.assetid END) AS soil_moisture, COUNT(DISTINCT CASE WHEN a.head_code=4 THEN pa.assetid END) AS water_harvesting_new, COUNT(DISTINCT CASE WHEN a.head_code=5 THEN pa.assetid END) AS water_harvesting_renovated, COUNT(DISTINCT CASE WHEN a.head_code=8 THEN pa.assetid END) AS vegetative_structure, COUNT(DISTINCT CASE WHEN a.head_code=9 THEN pa.assetid END) AS springsheds from iwmp_m_project p left join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id left join iwmp_m_phy_activity a ON pa.phy_activity_code = a.activity_code group by dcode), ConveredWorks as (select dcode, COUNT(DISTINCT pa.assetid) AS conwrks, COUNT(DISTINCT CASE WHEN a.head_code=1 THEN pa.assetid END) AS afforestation_conv, COUNT(DISTINCT CASE WHEN a.head_code=2 THEN pa.assetid END) AS horticulture_conv, COUNT(DISTINCT CASE WHEN a.head_code=3 THEN pa.assetid END) AS soil_moisture_conv, COUNT(DISTINCT CASE WHEN a.head_code=4 THEN pa.assetid END) AS water_harvesting_new_conv, COUNT(DISTINCT CASE WHEN a.head_code=5 THEN pa.assetid END) AS water_harvesting_renovated_conv, COUNT(DISTINCT CASE WHEN a.head_code=8 THEN pa.assetid END) AS vegetative_structure_conv, COUNT(DISTINCT CASE WHEN a.head_code=9 THEN pa.assetid END) AS springsheds_conv from iwmp_m_project p left join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id left join iwmp_m_phy_activity a ON pa.phy_activity_code = a.activity_code left join iwmp_project_asset_status sa ON pa.assetid = sa.assetid where sa.convergence = 'Y' group by dcode) SELECT dist_name, d.dcode, cast(COALESCE(tw.totwrks,0)as Integer) as totalworks, cast(COALESCE(cw.conwrks,0)as Integer) as convergedworks, cast(COALESCE(tw.afforestation,0)as Integer) as afforestation, cast(COALESCE(cw.afforestation_conv,0)as Integer) as afforestation_conv, cast(COALESCE(tw.horticulture,0)as Integer) as horticulture, cast(COALESCE(cw.horticulture_conv,0)as Integer) as horticulture_conv, cast(COALESCE(tw.soil_moisture,0)as Integer) as soil_moisture, cast(COALESCE(cw.soil_moisture_conv,0)as Integer) as soil_moisture_conv, cast(COALESCE(tw.water_harvesting_new,0)as Integer) as water_harvesting_new, cast(COALESCE(cw.water_harvesting_new_conv,0)as Integer) as water_harvesting_new_conv, cast(COALESCE(tw.water_harvesting_renovated,0)as Integer) as water_harvesting_renovated, cast(COALESCE(cw.water_harvesting_renovated_conv,0)as Integer) as water_harvesting_renovated_conv, cast(COALESCE(tw.vegetative_structure,0)as Integer) as vegetative_structure, cast(COALESCE(cw.vegetative_structure_conv,0)as Integer) as vegetative_structure_conv, cast(COALESCE(tw.springsheds,0)as Integer) as springsheds, cast(COALESCE(cw.springsheds_conv,0)as Integer) as springsheds_conv FROM iwmp_district d LEFT JOIN TotalWorks tw on tw.dcode=d.dcode LEFT JOIN ConveredWorks cw on cw.dcode=d.dcode WHERE dist_proj = true and st_code=:stcd GROUP BY d.dcode, dist_name, tw.totwrks, cw.conwrks, tw.afforestation, cw.afforestation_conv, tw.horticulture, cw.horticulture_conv, tw.soil_moisture, cw.soil_moisture_conv, tw.water_harvesting_new, cw.water_harvesting_new_conv, tw.water_harvesting_renovated, cw.water_harvesting_renovated_conv, tw.vegetative_structure, cw.vegetative_structure_conv, tw.springsheds, cw.springsheds_conv ORDER BY dist_name
getConvergedProjWorks=WITH TotalWorks as (select proj_id, COUNT(DISTINCT pa.assetid) AS totwrks, COUNT(DISTINCT CASE WHEN a.head_code=1 THEN pa.assetid END) AS afforestation, COUNT(DISTINCT CASE WHEN a.head_code=2 THEN pa.assetid END) AS horticulture, COUNT(DISTINCT CASE WHEN a.head_code=3 THEN pa.assetid END) AS soil_moisture, COUNT(DISTINCT CASE WHEN a.head_code=4 THEN pa.assetid END) AS water_harvesting_new, COUNT(DISTINCT CASE WHEN a.head_code=5 THEN pa.assetid END) AS water_harvesting_renovated, COUNT(DISTINCT CASE WHEN a.head_code=8 THEN pa.assetid END) AS vegetative_structure, COUNT(DISTINCT CASE WHEN a.head_code=9 THEN pa.assetid END) AS springsheds from iwmp_project_physical_asset pa left join iwmp_m_phy_activity a ON pa.phy_activity_code = a.activity_code group by proj_id), ConveredWorks as (select proj_id, COUNT(DISTINCT pa.assetid) AS conwrks, COUNT(DISTINCT CASE WHEN a.head_code=1 THEN pa.assetid END) AS afforestation_conv, COUNT(DISTINCT CASE WHEN a.head_code=2 THEN pa.assetid END) AS horticulture_conv, COUNT(DISTINCT CASE WHEN a.head_code=3 THEN pa.assetid END) AS soil_moisture_conv, COUNT(DISTINCT CASE WHEN a.head_code=4 THEN pa.assetid END) AS water_harvesting_new_conv, COUNT(DISTINCT CASE WHEN a.head_code=5 THEN pa.assetid END) AS water_harvesting_renovated_conv, COUNT(DISTINCT CASE WHEN a.head_code=8 THEN pa.assetid END) AS vegetative_structure_conv, COUNT(DISTINCT CASE WHEN a.head_code=9 THEN pa.assetid END) AS springsheds_conv from iwmp_project_physical_asset pa left join iwmp_m_phy_activity a ON pa.phy_activity_code = a.activity_code left join iwmp_project_asset_status sa ON pa.assetid = sa.assetid where sa.convergence = 'Y' group by proj_id) SELECT proj_name, p.proj_id, cast(COALESCE(tw.totwrks,0)as Integer) as totalworks, cast(COALESCE(cw.conwrks,0)as Integer) as convergedworks, cast(COALESCE(tw.afforestation,0)as Integer) as afforestation, cast(COALESCE(cw.afforestation_conv,0)as Integer) as afforestation_conv, cast(COALESCE(tw.horticulture,0)as Integer) as horticulture, cast(COALESCE(cw.horticulture_conv,0)as Integer) as horticulture_conv, cast(COALESCE(tw.soil_moisture,0)as Integer) as soil_moisture, cast(COALESCE(cw.soil_moisture_conv,0)as Integer) as soil_moisture_conv, cast(COALESCE(tw.water_harvesting_new,0)as Integer) as water_harvesting_new, cast(COALESCE(cw.water_harvesting_new_conv,0)as Integer) as water_harvesting_new_conv, cast(COALESCE(tw.water_harvesting_renovated,0)as Integer) as water_harvesting_renovated, cast(COALESCE(cw.water_harvesting_renovated_conv,0)as Integer) as water_harvesting_renovated_conv, cast(COALESCE(tw.vegetative_structure,0)as Integer) as vegetative_structure, cast(COALESCE(cw.vegetative_structure_conv,0)as Integer) as vegetative_structure_conv, cast(COALESCE(tw.springsheds,0)as Integer) as springsheds, cast(COALESCE(cw.springsheds_conv,0)as Integer) as springsheds_conv FROM iwmp_m_project p LEFT JOIN TotalWorks tw on tw.proj_id=p.proj_id LEFT JOIN ConveredWorks cw on cw.proj_id=p.proj_id WHERE dcode=:dcode GROUP BY  p.proj_id, proj_name, tw.totwrks, cw.conwrks, tw.afforestation, cw.afforestation_conv, tw.horticulture, cw.horticulture_conv, tw.soil_moisture, cw.soil_moisture_conv, tw.water_harvesting_new, cw.water_harvesting_new_conv, tw.water_harvesting_renovated, cw.water_harvesting_renovated_conv, tw.vegetative_structure, cw.vegetative_structure_conv, tw.springsheds, cw.springsheds_conv ORDER BY proj_name
#getConvergedProjDetailWorks=select p.proj_name, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v where b.bcode = g.bcode and g.gcode = v.gcode and v.vcode=pa.vcode) AS blockname, (select gram_panchayat_name from iwmp_gram_panchayat g, iwmp_village v where g.gcode = v.gcode and v.vcode=pa.vcode) AS grampanchayatname, (select village_name from iwmp_village where vcode=pa.vcode) AS villagename, cast(pa.assetid as BigInt) AS workcode, (select head_desc from iwmp_m_phy_activity a, iwmp_m_phy_heads h where a.head_code=h.head_code and a.activity_code=pa.phy_activity_code) AS headname, (select activity_desc from iwmp_m_phy_activity a where a.activity_code=pa.phy_activity_code) AS actname FROM iwmp_m_project p, iwmp_project_physical_asset pa, iwmp_project_asset_status s WHERE pa.proj_id=p.proj_id and pa.assetid=s.assetid and convergence='Y' and pa.proj_id=:projid ORDER BY p.proj_name, headname, actname, blockname, grampanchayatname, villagename
getConvergedProjDetailWorks=select p.proj_name, b.block_name as blockname, g.gram_panchayat_name as grampanchayatname, v.village_name as villagename, cast(pa.assetid as BigInt) as workcode, h.head_desc as headname, a.activity_desc as actname, r.collection_sno, r.stage, r.status from iwmp_m_project p join iwmp_project_physical_asset pa on pa.proj_id=p.proj_id join iwmp_project_asset_status s on pa.assetid=s.assetid join iwmp_village v on v.vcode=pa.vcode join iwmp_gram_panchayat g on g.gcode = v.gcode join iwmp_block b on b.bcode = g.bcode join iwmp_m_phy_activity a on a.activity_code=pa.phy_activity_code join iwmp_m_phy_heads h on a.head_code=h.head_code left join asset_geo_reference r on r.work_type=cast(cast(pa.assetid as integer) as character varying) where convergence='Y' and pa.proj_id=:projid order by p.proj_name, b.block_name, g.gram_panchayat_name, v.village_name, h.head_desc, a.activity_desc, pa.assetid
#getConvergedProjDetailWorks=WITH condetail AS (select p.proj_name, b.block_name, g.gram_panchayat_name, v.village_name, pa.assetid, h.head_desc, a.activity_desc from iwmp_m_project p join iwmp_project_physical_asset pa on pa.proj_id=p.proj_id join iwmp_project_asset_status s on pa.assetid=s.assetid join iwmp_village v on v.vcode=pa.vcode join iwmp_gram_panchayat g on g.gcode=v.gcode join iwmp_block b on b.bcode=g.bcode join iwmp_m_phy_activity a on a.activity_code=pa.phy_activity_code join iwmp_m_phy_heads h on a.head_code=h.head_code where convergence='Y' and pa.proj_id=:projid), colldetail AS (select pa.assetid,r.collection_sno, r.stage, r.status from iwmp_project_physical_asset pa left join asset_geo_reference r on r.work_type=cast(cast(pa.assetid as integer) as character varying) where pa.proj_id=:projid) SELECT c.proj_name, c.block_name as blockname, c.gram_panchayat_name as grampanchayatname, c.village_name as villagename, cast(c.assetid as BigInt) as workcode, c.head_desc as headname, c.activity_desc as actname, d.collection_sno, d.stage, d.status FROM condetail c JOIN colldetail d ON d.assetid=c.assetid ORDER BY c.proj_name, c.block_name, c.gram_panchayat_name, c.village_name, c.head_desc, c.activity_desc, c.assetid

getAllSchemesList=select * from iwmp_m_convergence_scheme
#getConvergedExpndtr=SELECT c.head_code, c.head_desc, c.hseq_no, c.activity_code, c.activity_desc as actname, c.aseq_no, COALESCE(d.achievement, 0.00) AS achievement, c.unitname, cast(COALESCE(e.convergedWorks, 0) as integer) AS convergedWorks, cast(COALESCE(e.Ongoing, 0) as integer) AS Ongoing, cast(COALESCE(e.Completed, 0) as integer) AS Completed, cast(COALESCE(e.Foreclosed, 0) as integer) AS Foreclosed, COALESCE(f.expndtr_wdc2, 0) as expndtr_wdc2, COALESCE(f.expndtr_cnvrgd_scheme, 0) as expndtr_cnvrgd_scheme FROM (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc, act.seq_no as aseq_no, unit_desc as unitname from iwmp_m_phy_activity act join iwmp_m_phy_heads h on h.head_code = act.head_code join iwmp_m_unit u on act.unit_code = u.unit_code) c LEFT JOIN (select det.activity_code, COALESCE(SUM(achievement), 0.00) as achievement from wdcpmksy_project_phy_ach_details det join wdcpmksy_project_phy_achievement ach ON det.achievement_id = ach.achievement_id join iwmp_m_project p ON p.proj_id = ach.proj_id join iwmp_district d ON d.dcode = p.dcode where p.proj_id=(case when 0=:projid then p.proj_id else :projid end) and d.dcode=(case when 0=:dcode then d.dcode else :dcode end) and st_code=(case when 0=:stcd then st_code else :stcd end) and ach.fin_yr_cd =(case when 0=:finyr then ach.fin_yr_cd else :finyr end) and UPPER(ach.status) = 'C' group by det.activity_code) d ON c.activity_code = d.activity_code LEFT JOIN (select ab.activity_code, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' THEN s.assetid END) as convergedWorks, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'O' THEN s.assetid END) as Ongoing, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'C' THEN s.assetid END) as Completed, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'F' THEN s.assetid END) as Foreclosed from iwmp_m_phy_activity ab join iwmp_project_physical_asset pa on ab.activity_code = pa.phy_activity_code join iwmp_project_asset_status s on pa.assetid = s.assetid join iwmp_m_project p on p.proj_id = pa.proj_id join iwmp_district d on d.dcode = p.dcode where p.proj_id=case when 0=:projid then p.proj_id else :projid end and d.dcode=(case when 0=:dcode then d.dcode else :dcode end) and st_code=(case when 0=:stcd then st_code else :stcd end) and pa.fin_yr_cd =(case when 0=:finyr then pa.fin_yr_cd else :finyr end) and UPPER(pa.status) = 'C' group by ab.activity_code) e ON c.activity_code = e.activity_code LEFT JOIN (select act.activity_code, sum(cd.expndtr_wdc2) as expndtr_wdc2, sum(cd.expndtr_cnvrgd_scheme) as expndtr_cnvrgd_scheme from iwmp_project_physical_asset pa join convergence_work_detail cd on pa.assetid = cd.assetid join iwmp_m_phy_activity act on act.activity_code = pa.phy_activity_code join iwmp_m_project p on p.proj_id = pa.proj_id join iwmp_district d on d.dcode = p.dcode where p.proj_id=(case when 0=:projid then p.proj_id else :projid end) and d.dcode=(case when 0=:dcode then d.dcode else :dcode end) and st_code=(case when 0=:stcd then st_code else :stcd end) and pa.fin_yr_cd =(case when 0=:finyr then pa.fin_yr_cd else :finyr end) and UPPER(cd.status) = 'C' and scheme_id=(case when 0=:sid then scheme_id else :sid end) group by act.activity_code) f ON c.activity_code = f.activity_code GROUP BY c.head_code, c.head_desc, c.hseq_no, c.activity_code, c.activity_desc, c.aseq_no, d.achievement, c.unitname, e.convergedWorks, e.Ongoing, e.Completed, e.Foreclosed, f.expndtr_wdc2, f.expndtr_cnvrgd_scheme ORDER BY c.hseq_no, c.aseq_no
getConvergedExpndtr=SELECT c.head_code, c.head_desc, c.hseq_no, c.activity_code, c.activity_desc as actname, c.aseq_no, COALESCE(d.achievement, 0.00) AS achievement, c.unitname, cast(COALESCE(e.convergedWorks, 0) as integer) AS convergedWorks, cast(COALESCE(e.Ongoing, 0) as integer) AS Ongoing, cast(COALESCE(e.Completed, 0) as integer) AS Completed, cast(COALESCE(e.Foreclosed, 0) as integer) AS Foreclosed, COALESCE(f.expndtr_wdc2, 0) as expndtr_wdc2, COALESCE(f.expndtr_cnvrgd_scheme, 0) as expndtr_cnvrgd_scheme FROM (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc, act.seq_no as aseq_no, unit_desc as unitname from iwmp_m_phy_activity act join iwmp_m_phy_heads h on h.head_code = act.head_code join iwmp_m_unit u on act.unit_code = u.unit_code) c LEFT JOIN (select sum(b.achievement) achievement, b.phy_activity_code as activity_code from (select distinct a.phy_activity_code, a.proj_id, aa.asset_id, aa.fin_yr_cd, aa.month_id, aa.achievement from wdcpmksy_project_phy_asset_achievement aa, iwmp_project_physical_asset a, convergence_work_detail cd, iwmp_m_project p, iwmp_district d where p.proj_id = a.proj_id  and d.dcode = p.dcode and  a.assetid = cd.assetid and a.assetid = aa.asset_id and aa.status='C' and UPPER(cd.status) = 'C' and a.proj_id=(case when 0=:projid then a.proj_id else :projid end) and aa.fin_yr_cd=(case when 0=:finyr then aa.fin_yr_cd else :finyr end) and cd.scheme_id=(case when 0=:sid then cd.scheme_id else :sid end) and d.dcode=(case when 0=:dcode then d.dcode else :dcode end) and d.st_code=(case when 0=:stcd then d.st_code else :stcd end)) as b group by b.phy_activity_code) d ON c.activity_code = d.activity_code LEFT JOIN (select ab.activity_code, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' THEN s.assetid END) as convergedWorks, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'O' THEN s.assetid END) as Ongoing, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'C' THEN s.assetid END) as Completed, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'F' THEN s.assetid END) as Foreclosed from iwmp_m_phy_activity ab join iwmp_project_physical_asset pa on ab.activity_code = pa.phy_activity_code join iwmp_project_asset_status s on pa.assetid = s.assetid join convergence_work_detail cd on pa.assetid = cd.assetid join iwmp_m_project p on p.proj_id = pa.proj_id join iwmp_district d on d.dcode = p.dcode where p.proj_id=case when 0=:projid then p.proj_id else :projid end and d.dcode=(case when 0=:dcode then d.dcode else :dcode end) and st_code=(case when 0=:stcd then st_code else :stcd end) and pa.fin_yr_cd =(case when 0=:finyr then pa.fin_yr_cd else :finyr end) and scheme_id=(case when 0=:sid then scheme_id else :sid end) and UPPER(pa.status) = 'C' and UPPER(cd.status) = 'C' group by ab.activity_code) e ON c.activity_code = e.activity_code LEFT JOIN (select act.activity_code, sum(cd.expndtr_wdc2) as expndtr_wdc2, sum(cd.expndtr_cnvrgd_scheme) as expndtr_cnvrgd_scheme from iwmp_project_physical_asset pa join convergence_work_detail cd on pa.assetid = cd.assetid join iwmp_m_phy_activity act on act.activity_code = pa.phy_activity_code join iwmp_m_project p on p.proj_id = pa.proj_id join iwmp_district d on d.dcode = p.dcode where p.proj_id=case when 0=:projid then p.proj_id else :projid end and d.dcode=(case when 0=:dcode then d.dcode else :dcode end) and st_code=(case when 0=:stcd then st_code else :stcd end) and pa.fin_yr_cd =(case when 0=:finyr then pa.fin_yr_cd else :finyr end) and scheme_id=(case when 0=:sid then scheme_id else :sid end) and UPPER(cd.status) = 'C' group by act.activity_code) f ON c.activity_code = f.activity_code GROUP BY c.head_code, c.head_desc, c.hseq_no, c.activity_code, c.activity_desc, c.aseq_no, d.achievement, c.unitname, e.convergedWorks, e.Ongoing, e.Completed, e.Foreclosed, f.expndtr_wdc2, f.expndtr_cnvrgd_scheme ORDER BY c.hseq_no, c.aseq_no
getConvergedStateExpndtr=WITH works AS (SELECT st_code, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' THEN s.assetid END) AS convergedWorks, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'O' THEN s.assetid END) AS Ongoing, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'C' THEN s.assetid END) AS Completed, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' AND s.status = 'F' THEN s.assetid END) AS Foreclosed from iwmp_project_asset_status s join iwmp_m_project p on p.proj_id = s.projid join iwmp_district d on d.dcode = p.dcode group by st_code), expndtr AS (SELECT st_code, m.scheme_id, scheme_name, COUNT(DISTINCT CASE WHEN s.convergence = 'Y' THEN cd.assetid END) AS sconvergedWorks, sum(cd.expndtr_wdc2) as expndtr_wdc2, sum(cd.expndtr_cnvrgd_scheme) as expndtr_cnvrgd_scheme from iwmp_project_asset_status s	join convergence_work_detail cd on s.assetid = cd.assetid join iwmp_m_convergence_scheme m on cd.scheme_id=m.scheme_id join iwmp_m_project p on p.proj_id = s.projid join iwmp_district d on d.dcode = p.dcode where cd.status='C' group by st_code, m.scheme_id) SELECT s.st_code, st_name, cast(COALESCE(w.convergedWorks, 0) as integer) AS convergedworks, cast(COALESCE(w.Ongoing, 0) as integer) AS ongoing, cast(COALESCE(w.Completed, 0) AS integer) AS completed, cast(COALESCE(w.Foreclosed, 0) as integer) AS foreclosed, e.scheme_id, scheme_name as schemename, cast(COALESCE(e.sconvergedWorks, 0) as integer) AS schmconvergedworks, COALESCE(e.expndtr_wdc2, 0) as expndtr_wdc2, COALESCE(e.expndtr_cnvrgd_scheme, 0) AS expndtr_cnvrgd_scheme FROM iwmp_state s JOIN works w ON s.st_code=w.st_code JOIN expndtr e ON s.st_code=e.st_code WHERE wdcpmksy=1 ORDER BY st_name, scheme_name

getOOMFAchv=select st_name, cast((select count(dcode) from iwmp_district d where s.st_code=d.st_code and dist_proj is true) as Integer) as totaldist, cast((select count(proj_id) from iwmp_m_project p, iwmp_district d where s.st_code=d.st_code and p.dcode=d.dcode) as Integer) as totalproject, cast((select count(distinct t.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and achiev_type='Year-Wise') as Integer) as yearwisefill, cast((select count(distinct t.proj_id) from iwmp_district d, iwmp_m_project p, wdcpmksy_additional_brought_farmer_crop t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and t.fin_yr_cd=(case when 0=:finyr then t.fin_yr_cd else :finyr end) and achiev_type='Month-Wise') as Integer) as halfyearfill from iwmp_state s where wdcpmksy=1 order by st_name
getEnteredConWorks=WITH District AS (select d.st_code, COUNT(*) AS dist from iwmp_district d where d.dist_proj = true group by d.st_code), Project AS (select d.st_code, COUNT(DISTINCT p.proj_id) AS proj from iwmp_m_project p join iwmp_district d ON p.dcode = d.dcode group by d.st_code), TotalWorks AS (select d.st_code, COUNT(DISTINCT pa.assetid) AS totwrks from iwmp_district d join iwmp_m_project p ON d.dcode = p.dcode join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id group by d.st_code), ConvergedWorks AS (select d.st_code, COUNT(DISTINCT pa.assetid) AS conwrks from iwmp_district d join iwmp_m_project p ON d.dcode = p.dcode join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id join iwmp_project_asset_status sa ON pa.assetid = sa.assetid where sa.convergence = 'Y' group by d.st_code), Entered AS (select d.st_code, COUNT(DISTINCT cw.assetid) AS conv from iwmp_district d join iwmp_m_project p ON d.dcode = p.dcode join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id join iwmp_project_asset_status sa ON pa.assetid = sa.assetid join convergence_work_detail cw ON cw.assetid = sa.assetid where sa.convergence = 'Y' AND cw.status = 'C' group by d.st_code) SELECT s.st_name, cast(COALESCE(td.dist ,0) as Integer) as totaldist, cast(COALESCE(tp.proj ,0) as Integer) as totalproject, cast(COALESCE(t.totwrks ,0) as Integer) as totalworks, cast(COALESCE(c.conwrks ,0) as Integer) as convergedworks, cast(COALESCE(e.conv ,0) as Integer) as enteredcon FROM iwmp_state s LEFT JOIN District td ON td.st_code = s.st_code LEFT JOIN Project tp ON tp.st_code = s.st_code LEFT JOIN TotalWorks t ON t.st_code = s.st_code LEFT JOIN ConvergedWorks c ON c.st_code = s.st_code LEFT JOIN Entered e ON e.st_code = s.st_code WHERE s.wdcpmksy = 1 ORDER BY st_name;
getStatusConWorks=WITH Project AS (select dcode, COUNT(DISTINCT proj_id) AS proj from iwmp_m_project group by dcode), TotalWorks AS (select p.dcode, COUNT(DISTINCT pa.assetid) AS totwrks from iwmp_m_project p join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id group by p.dcode), ConvergedWorks AS (select p.dcode, COUNT(DISTINCT pa.assetid) AS conwrks from iwmp_m_project p join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id join iwmp_project_asset_status sa ON pa.assetid = sa.assetid where sa.convergence = 'Y' group by p.dcode), Entered AS (select p.dcode, COUNT(DISTINCT cw.assetid) AS conv from iwmp_m_project p join iwmp_project_physical_asset pa ON p.proj_id = pa.proj_id join iwmp_project_asset_status sa ON pa.assetid = sa.assetid join convergence_work_detail cw ON cw.assetid = sa.assetid where sa.convergence = 'Y' AND cw.status = 'C' group by p.dcode) SELECT dist_name, d.dcode, cast(COALESCE(tp.proj ,0) as Integer) as totalproject, cast(COALESCE(t.totwrks ,0) as Integer) as totalworks, cast(COALESCE(c.conwrks ,0) as Integer) as convergedworks, cast(COALESCE(e.conv ,0) as Integer) as enteredcon, cast(COALESCE(c.conwrks,0)-COALESCE(e.conv ,0) as Integer) as remaining FROM iwmp_district d LEFT JOIN Project tp ON tp.dcode = d.dcode LEFT JOIN TotalWorks t ON t.dcode = d.dcode LEFT JOIN ConvergedWorks c ON c.dcode = d.dcode LEFT JOIN Entered e ON e.dcode = d.dcode WHERE dist_proj = 'true' and st_code = :stcd ORDER BY dist_name;
getRemainingConWorks=select cast(pa.assetid as BIGINT) as workcode, proj_name, h.head_desc as headname, act.activity_desc as actname from iwmp_project_physical_asset pa join iwmp_project_asset_status sa ON pa.assetid = sa.assetid join iwmp_m_phy_activity act on act.activity_code = pa.phy_activity_code join iwmp_m_phy_heads h on h.head_code = act.head_code join iwmp_m_project p on p.proj_id = pa.proj_id where pa.assetid not in (select assetid from convergence_work_detail where UPPER(status) = 'C') and convergence='Y' and dcode = :dcode order by proj_name, headname, actname

#getNRSCGeotagging=SELECT st_name, a.st_code, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED, sum(a.n_CREATED + a.e_CREATED + a.l_CREATED + a.p_CREATED) - SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as ActiveWorks, totgeorefwrkcd, (sum(a.n_CREATED + a.e_CREATED + a.l_CREATED + a.p_CREATED) - SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED))- totgeorefwrkcd as Remaining FROM (With PROJECTS as(select d.st_code, count(proj_id) as PROJECTS from iwmp_m_project p inner join iwmp_district d on p.dcode = d.dcode group by d.st_code), totgeorefwrkcd as(select state_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY state_code), NRMCREATED as(select d.st_code, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode group by d.st_code), NRMUNSTARTED as(select d.st_code, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.assetid IS NULL group by d.st_code), NRMONGOING as(select d.st_code, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='O' group by d.st_code), NRMCOMPLETED as(select d.st_code, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='C' group by d.st_code), NRMFORCLOSED as(select d.st_code, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='F' group by d.st_code), EPACREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where e.status='C' group by d.st_code), EPAUNSTARTED as(select d.st_code, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by d.st_code), EPAONGOING as(select d.st_code, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by d.st_code), EPACOMPLETED as(select d.st_code, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by d.st_code), EPAFORCLOSED as(select d.st_code, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by d.st_code), LIVELIHOODCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where l.status='C' group by d.st_code), LIVELIHOODUNSTARTED as(select d.st_code, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by d.st_code), LIVELIHOODONGOING as(select d.st_code, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by d.st_code), LIVELIHOODCOMPLETED as(select d.st_code, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by d.st_code), LIVELIHOODFORCLOSED as(select d.st_code, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by d.st_code), PRODUCTIONCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where pd.status='C' group by d.st_code), PRODUCTIONUNSTARTED as(select d.st_code, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by d.st_code), PRODUCTIONONGOING as(select d.st_code, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by d.st_code), PRODUCTIONCOMPLETED as(select d.st_code, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by d.st_code), PRODUCTIONFORCLOSED as(select d.st_code, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by d.st_code) Select s.st_name, s.st_code, cast(COALESCE(p.PROJECTS,0) as Integer) as PROJECTS, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd FROM PROJECTS p RIGHT join iwmp_state s on p.st_code = s.st_code LEFT join totgeorefwrkcd tg on tg.state_code = s.st_code LEFT join NRMCREATED ncr on ncr.st_code = s.st_code LEFT join NRMUNSTARTED nus on nus.st_code = s.st_code LEFT join NRMONGOING no on no.st_code = s.st_code LEFT join NRMCOMPLETED nc on nc.st_code = s.st_code LEFT join NRMFORCLOSED nf on nf.st_code = s.st_code LEFT join EPACREATED ecr on ecr.st_code = s.st_code LEFT join EPAUNSTARTED eus on eus.st_code = s.st_code LEFT join EPAONGOING eo on eo.st_code = s.st_code LEFT join EPACOMPLETED ec on ec.st_code = s.st_code LEFT join EPAFORCLOSED ef on ef.st_code = s.st_code LEFT join LIVELIHOODCREATED lcr on lcr.st_code = s.st_code LEFT join LIVELIHOODUNSTARTED lus on lus.st_code = s.st_code LEFT join LIVELIHOODONGOING lo on lo.st_code = s.st_code LEFT join LIVELIHOODCOMPLETED lc on lc.st_code = s.st_code LEFT join LIVELIHOODFORCLOSED lf on lf.st_code = s.st_code LEFT join PRODUCTIONCREATED pcr on pcr.st_code = s.st_code LEFT join PRODUCTIONUNSTARTED pus on pus.st_code = s.st_code LEFT join PRODUCTIONONGOING po on po.st_code = s.st_code LEFT join PRODUCTIONCOMPLETED pc on pc.st_code = s.st_code LEFT join PRODUCTIONFORCLOSED pf on pf.st_code = s.st_code WHERE wdcpmksy=1 GROUP BY st_name, s.st_code, p.PROJECTS, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd ORDER BY st_name) as a GROUP BY a.st_name, a.st_code, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd ORDER BY st_name
#getNRSCGeotaggingDist=SELECT dist_name, a.dcode, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED, sum(a.n_CREATED + a.e_CREATED + a.l_CREATED + a.p_CREATED) - SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as ActiveWorks, totgeorefwrkcd, (sum(a.n_CREATED + a.e_CREATED + a.l_CREATED + a.p_CREATED) - SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED))- totgeorefwrkcd as Remaining FROM (With PROJECTS as(select dcode, count(proj_id) as PROJECTS from iwmp_m_project p group by dcode), totgeorefwrkcd as(select district_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY district_code), NRMCREATED as(select p.dcode, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id group by p.dcode), NRMUNSTARTED as(select p.dcode, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.dcode), NRMONGOING as(select p.dcode, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.dcode), NRMCOMPLETED as(select p.dcode, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' group by p.dcode), NRMFORCLOSED as(select p.dcode, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.dcode), EPACREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.dcode), EPAUNSTARTED as(select p.dcode, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.dcode), EPAONGOING as(select p.dcode, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.dcode), EPACOMPLETED as(select p.dcode, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.dcode), EPAFORCLOSED as(select p.dcode, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.dcode), LIVELIHOODCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.dcode), LIVELIHOODUNSTARTED as(select p.dcode, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.dcode), LIVELIHOODONGOING as(select p.dcode, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.dcode), LIVELIHOODCOMPLETED as(select p.dcode, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.dcode), LIVELIHOODFORCLOSED as(select p.dcode, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.dcode), PRODUCTIONCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.dcode), PRODUCTIONUNSTARTED as(select p.dcode, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.dcode), PRODUCTIONONGOING as(select p.dcode, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.dcode), PRODUCTIONCOMPLETED as(select p.dcode, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.dcode), PRODUCTIONFORCLOSED as(select p.dcode, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.dcode) SELECT dist_name, d.dcode, cast(COALESCE(p.PROJECTS,0) as Integer) as PROJECTS, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd FROM iwmp_district d join PROJECTS p on p.dcode = d.dcode LEFT join totgeorefwrkcd tg on tg.district_code = d.dcode LEFT join NRMCREATED ncr on ncr.dcode = d.dcode LEFT join NRMUNSTARTED nus on nus.dcode = d.dcode LEFT join NRMONGOING no on no.dcode = d.dcode LEFT join NRMCOMPLETED nc on nc.dcode = d.dcode LEFT join NRMFORCLOSED nf on nf.dcode = d.dcode LEFT join EPACREATED ecr on ecr.dcode = d.dcode LEFT join EPAUNSTARTED eus on eus.dcode = d.dcode LEFT join EPAONGOING eo on eo.dcode = d.dcode LEFT join EPACOMPLETED ec on ec.dcode = d.dcode LEFT join EPAFORCLOSED ef on ef.dcode = d.dcode LEFT join LIVELIHOODCREATED lcr on lcr.dcode = d.dcode LEFT join LIVELIHOODUNSTARTED lus on lus.dcode = d.dcode LEFT join LIVELIHOODONGOING lo on lo.dcode = d.dcode LEFT join LIVELIHOODCOMPLETED lc on lc.dcode = d.dcode LEFT join LIVELIHOODFORCLOSED lf on lf.dcode = d.dcode LEFT join PRODUCTIONCREATED pcr on pcr.dcode = d.dcode LEFT join PRODUCTIONUNSTARTED pus on pus.dcode = d.dcode LEFT join PRODUCTIONONGOING po on po.dcode = d.dcode LEFT join PRODUCTIONCOMPLETED pc on pc.dcode = d.dcode LEFT join PRODUCTIONFORCLOSED pf on pf.dcode = d.dcode WHERE st_code = :stcd GROUP BY d.dcode, dist_name, p.PROJECTS, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd ORDER BY dist_name) as a GROUP BY dist_name, a.dcode, a.PROJECTS, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd ORDER BY dist_name
#getNRSCGeotaggingProj=SELECT proj_name, a.proj_id, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, cast(SUM(a.n_CREATED+a.e_CREATED+a.l_CREATED+a.p_CREATED) as Integer) as t_CREATED, cast(SUM(a.n_UNSTARTED+a.e_UNSTARTED+a.l_UNSTARTED+a.p_UNSTARTED) as Integer) as t_UNSTARTED, cast(SUM(a.n_ONGOING+a.e_ONGOING+a.l_ONGOING+a.p_ONGOING) as Integer) as t_ONGOING, cast(SUM(a.n_COMPLETED+a.e_COMPLETED+a.l_COMPLETED+a.p_COMPLETED) as Integer) as t_COMPLETED, cast(SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as Integer) as t_FORCLOSED, sum(a.n_CREATED + a.e_CREATED + a.l_CREATED + a.p_CREATED) - SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED) as ActiveWorks, totgeorefwrkcd, (sum(a.n_CREATED + a.e_CREATED + a.l_CREATED + a.p_CREATED) - SUM(a.n_FORCLOSED+a.e_FORCLOSED+a.l_FORCLOSED+a.p_FORCLOSED))- totgeorefwrkcd as Remaining FROM (With NRMCREATED as(select p.proj_id, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id group by p.proj_id), NRMUNSTARTED as(select p.proj_id, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.proj_id), NRMONGOING as(select p.proj_id, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.proj_id), NRMCOMPLETED as(select p.proj_id, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' group by p.proj_id), NRMFORCLOSED as(select p.proj_id, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.proj_id), EPACREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.proj_id), EPAUNSTARTED as(select p.proj_id, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.proj_id), EPAONGOING as(select p.proj_id, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.proj_id), EPACOMPLETED as(select p.proj_id, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.proj_id), EPAFORCLOSED as(select p.proj_id, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.proj_id), LIVELIHOODCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.proj_id), LIVELIHOODUNSTARTED as(select p.proj_id, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.proj_id), LIVELIHOODONGOING as(select p.proj_id, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.proj_id), LIVELIHOODCOMPLETED as(select p.proj_id, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.proj_id), LIVELIHOODFORCLOSED as(select p.proj_id, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.proj_id), PRODUCTIONCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.proj_id), PRODUCTIONUNSTARTED as(select p.proj_id, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.proj_id), PRODUCTIONONGOING as(select p.proj_id, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.proj_id), PRODUCTIONCOMPLETED as(select p.proj_id, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.proj_id), PRODUCTIONFORCLOSED as(select p.proj_id, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.proj_id), totgeorefwrkcd as(select project_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY project_code) SELECT proj_name, p.proj_id, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd FROM iwmp_m_project p LEFT join NRMCREATED ncr on ncr.proj_id = p.proj_id LEFT join NRMUNSTARTED nus on nus.proj_id = p.proj_id LEFT join NRMONGOING no on no.proj_id = p.proj_id LEFT join NRMCOMPLETED nc on nc.proj_id = p.proj_id LEFT join NRMFORCLOSED nf on nf.proj_id = p.proj_id LEFT join EPACREATED ecr on ecr.proj_id = p.proj_id LEFT join EPAUNSTARTED eus on eus.proj_id = p.proj_id LEFT join EPAONGOING eo on eo.proj_id = p.proj_id LEFT join EPACOMPLETED ec on ec.proj_id = p.proj_id LEFT join EPAFORCLOSED ef on ef.proj_id = p.proj_id LEFT join LIVELIHOODCREATED lcr on lcr.proj_id = p.proj_id LEFT join LIVELIHOODUNSTARTED lus on lus.proj_id = p.proj_id LEFT join LIVELIHOODONGOING lo on lo.proj_id = p.proj_id LEFT join LIVELIHOODCOMPLETED lc on lc.proj_id = p.proj_id LEFT join LIVELIHOODFORCLOSED lf on lf.proj_id = p.proj_id LEFT join PRODUCTIONCREATED pcr on pcr.proj_id = p.proj_id LEFT join PRODUCTIONUNSTARTED pus on pus.proj_id = p.proj_id LEFT join PRODUCTIONONGOING po on po.proj_id = p.proj_id LEFT join PRODUCTIONCOMPLETED pc on pc.proj_id = p.proj_id LEFT join PRODUCTIONFORCLOSED pf on pf.proj_id = p.proj_id LEFT join totgeorefwrkcd tg on tg.project_code = p.project_cd WHERE dcode = :dcode GROUP BY p.proj_id, proj_name, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd ORDER BY proj_name) as a GROUP BY proj_name, a.proj_id, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd ORDER BY proj_name

#Target Achievment Dashboard query start
gettarachievementdata=select plan.headcode, plan.headname,achievement,target from (select h.head_code as headcode, head_desc as headname,coalesce(sum(achievement),0.00) as achievement from iwmp_m_phy_activity act, iwmp_m_phy_heads h, wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach, IWMP_M_FIN_YEAR fa, iwmp_m_project p, iwmp_district d, iwmp_state s where h.head_code=act.head_code and h.head_code <8 and act.activity_code = det.activity_code and det.achievement_id=ach.achievement_id and ach.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and s.st_code =case when 0 = 0 then s.st_code else 0 end and wdcpmksy =1 and ach.fin_yr_cd=fa.fin_yr_cd and ach.fin_yr_cd = case when 0=0 then fa.fin_yr_cd else 0 end and upper(ach.status) ='C' group by h.head_code  order by h.head_code) as f join (select h.head_code as headcode, head_desc as headname, coalesce(sum(qty_planned),0.00) as target from iwmp_project_physical_aap dD,iwmp_project_physical_plan t,IWMP_M_FIN_YEAR FA,iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_project p, iwmp_district d,iwmp_state s where upper(t.status) ='C' and t.planid = dD.planid and act.head_code = h.head_code and dD.phy_activity_code=act.activity_code and t.fin_yr_cd=fa.fin_yr_cd and t.fin_yr_cd = case  when 0 =0 then fa.fin_yr_cd else 0 end and h.head_code=act.head_code and t.proj_id=p.proj_id  and p.dcode=d.dcode and d.st_code=s.st_code and s.st_code =case when 0 = 0 then s.st_code else 0 end  and h.head_code <8 group by h.head_code order by  h.head_code) as plan on  f.headcode = plan.headcode
stateFinYearHeadDesc=select h.head_code as headcode, h.head_desc as headname, (select coalesce(sum(achievement),0.00) from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and upper(ac.status)='C' and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 ) as achievement, (select coalesce(sum(qty_planned),0.00) from iwmp_project_physical_plan pl, iwmp_project_physical_aap pa, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code=pa.phy_activity_code and pl.planid=pa.planid and pl.proj_id=p.proj_id and p.dcode=d.dcode and d.st_code=s.st_code and pl.fin_yr_cd=f.fin_yr_cd and upper(pl.status)='C' and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 ) as target from iwmp_m_phy_heads h where h.head_code<8 order by h.head_code
stateFinYearAllHeadDesc=select plan.headcode, plan.headname,achievement,target from (select h.head_code as headcode, head_desc as headname,coalesce(sum(achievement),0.00) as achievement from iwmp_m_phy_activity act, iwmp_m_phy_heads h, wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach, IWMP_M_FIN_YEAR fa, iwmp_m_project p, iwmp_district d, iwmp_state s where h.head_code=act.head_code and h.head_code <8 and act.activity_code = det.activity_code and det.achievement_id=ach.achievement_id and ach.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and s.st_code =case when :state = 0 then s.st_code else :state end and wdcpmksy =1 and ach.fin_yr_cd=fa.fin_yr_cd and ach.fin_yr_cd = case when :finyear=0 then fa.fin_yr_cd else :finyear end and upper(ach.status) ='C' group by h.head_code  order by h.head_code) as f join (select h.head_code as headcode, head_desc as headname, coalesce(sum(qty_planned),0.00) as target from iwmp_project_physical_aap dD,iwmp_project_physical_plan t,IWMP_M_FIN_YEAR FA,iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_project p, iwmp_district d,iwmp_state s where upper(t.status) ='C' and t.planid = dD.planid and act.head_code = h.head_code and dD.phy_activity_code=act.activity_code and t.fin_yr_cd=fa.fin_yr_cd and t.fin_yr_cd = case  when :finyear =0 then fa.fin_yr_cd else :finyear end and h.head_code=act.head_code and t.proj_id=p.proj_id  and p.dcode=d.dcode and d.st_code=s.st_code and s.st_code =case when :state = 0 then s.st_code else :state end  and h.head_code <8 group by h.head_code order by  h.head_code) as plan on  f.headcode = plan.headcode
getmonthwiseAchdata=select h.head_code as headcode, h.head_desc as headname, month_id, month_name, (select coalesce(sum(achievement),0.00) from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and upper(ac.status)='C' and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 and m.month_id=ac.month_id) as achievement from iwmp_m_phy_heads h, iwmp_m_month m where h.head_code=1 order by h.head_code, achiev_month 
getmonthwiseAchHordata=select h.head_code as headcode, h.head_desc as headname, month_id, month_name, (select coalesce(sum(achievement),0.00) from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and upper(ac.status)='C' and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 and m.month_id=ac.month_id) as achievement from iwmp_m_phy_heads h, iwmp_m_month m where h.head_code=2 order by h.head_code, achiev_month
getmonthwiseAchSAMdata=select h.head_code as headcode, h.head_desc as headname, month_id, month_name, (select coalesce(sum(achievement),0.00) from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and upper(ac.status)='C' and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 and m.month_id=ac.month_id) as achievement from iwmp_m_phy_heads h, iwmp_m_month m where h.head_code=3 order by h.head_code, achiev_month
getmonthwiseAchWHSNdata=select h.head_code as headcode, h.head_desc as headname, month_id, month_name, (select coalesce(sum(achievement),0.00) from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and upper(ac.status)='C' and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 and m.month_id=ac.month_id) as achievement from iwmp_m_phy_heads h, iwmp_m_month m where h.head_code=4 order by h.head_code, achiev_month
getmonthwiseAchRENOdata=select h.head_code as headcode, h.head_desc as headname, month_id, month_name, (select coalesce(sum(achievement),0.00) from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and upper(ac.status)='C' and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 and m.month_id=ac.month_id) as achievement from iwmp_m_phy_heads h, iwmp_m_month m where h.head_code=5 order by h.head_code, achiev_month
getmonthwiseAchPINdata=select h.head_code as headcode, h.head_desc as headname, month_id, month_name, (select coalesce(sum(achievement),0.00) from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and upper(ac.status)='C' and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 and m.month_id=ac.month_id) as achievement from iwmp_m_phy_heads h, iwmp_m_month m where h.head_code=6 order by h.head_code, achiev_month
getmonthwiseAchPIRdata=select h.head_code as headcode, h.head_desc as headname, month_id, month_name, (select coalesce(sum(achievement),0.00) from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p, iwmp_district d, iwmp_state s, iwmp_m_fin_year f where h.head_code=a.head_code and a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and f.fin_yr_cd=(case when :finyear=0 then f.fin_yr_cd else :finyear end) and upper(ac.status)='C' and s.st_code=(case when :state=0 then s.st_code else :state end) and wdcpmksy =1 and m.month_id=ac.month_id) as achievement from iwmp_m_phy_heads h, iwmp_m_month m where h.head_code=7 order by h.head_code, achiev_month
getTarAndAchievdata=select plan.headcode, plan.headname,achievement,target from (select h.head_code as headcode, head_desc as headname,coalesce(sum(achievement),0.00) as achievement from iwmp_m_phy_activity act, iwmp_m_phy_heads h, wdcpmksy_project_phy_ach_details det,wdcpmksy_project_phy_achievement ach, IWMP_M_FIN_YEAR fa, iwmp_m_project p, iwmp_district d, iwmp_state s where h.head_code=act.head_code and h.head_code <8 and act.activity_code = det.activity_code and det.achievement_id=ach.achievement_id and ach.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and s.st_code =case when :state = 0 then s.st_code else :state end and wdcpmksy =1 and ach.fin_yr_cd=fa.fin_yr_cd and ach.fin_yr_cd = :finYear and upper(ach.status) ='C' group by h.head_code  order by h.head_code) as f join (select h.head_code as headcode, head_desc as headname, coalesce(sum(qty_planned),0.00) as target from iwmp_project_physical_aap dD,iwmp_project_physical_plan t,IWMP_M_FIN_YEAR FA,iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_project p, iwmp_district d,iwmp_state s where upper(t.status) ='C' and t.planid = dD.planid and act.head_code = h.head_code and dD.phy_activity_code=act.activity_code and t.fin_yr_cd=fa.fin_yr_cd and t.fin_yr_cd = :finYear and h.head_code=act.head_code and t.proj_id=p.proj_id  and p.dcode=d.dcode and d.st_code=s.st_code and s.st_code =case when :state = 0 then s.st_code else :state end  and h.head_code <8 group by h.head_code order by  h.head_code) as plan on  f.headcode = plan.headcode
getTopStatesdata=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=1 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=1 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=1 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc limit 10
getTopStatesdata2=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=2 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=2 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=2 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc limit 10
getTopStatesdata3=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=3 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=3 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=3 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc limit 10
getTopStatesdata4=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=4 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=4 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=4 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc limit 10
getTopStatesdata5=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=5 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=5 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=5 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc limit 10
getTopStatesdata6=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=6 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=6 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=6 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc limit 10
getTopStatesdata7=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=7 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=7 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=7 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc limit 10
getBelowStatesdata1=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=1 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=1 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=1 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc offset 20 rows fetch next 10 rows only
getBelowStatesdata2=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=2 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=2 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=2 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc offset 20 rows fetch next 10 rows only
getBelowStatesdata3=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=3 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=3 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=3 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc offset 20 rows fetch next 10 rows only
getBelowStatesdata4=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=4 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=4 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=4 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc offset 20 rows fetch next 10 rows only
getBelowStatesdata5=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=5 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=5 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=5 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc offset 20 rows fetch next 10 rows only
getBelowStatesdata6=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=6 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=6 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=6 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc offset 20 rows fetch next 10 rows only
getBelowStatesdata7=select distinct st_code as stcode, st_name as stname, COALESCE((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=7 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as uptoachieve, cast(COALESCE(((select sum(achievement) from wdcpmksy_project_phy_ach_details d, wdcpmksy_project_phy_achievement p, iwmp_m_phy_activity a,  iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.achievement_id=d.achievement_id and d.activity_code=a.activity_code and h.head_code=a.head_code and h.head_code=7 and p.status='C' and  p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end)))*100)/ (select sum(qty_planned) from iwmp_project_physical_aap d, iwmp_project_physical_plan p, iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_m_project m, iwmp_district t where p.planid = d.planid and d.phy_activity_code = a.activity_code and h.head_code=a.head_code and h.head_code=7 and p.status='C' and p.proj_id=m.proj_id and m.dcode=t.dcode and s.st_code=t.st_code and p.fin_yr_cd in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=(case when :finYear=0 then fin_yr_cd else :finYear end))), 0.00) as numeric(10,2)) as achievpercent from iwmp_state s where wdcpmksy=1  group by st_code, st_name order by achievpercent desc offset 20 rows fetch next 10 rows only
getprogressivedata=select *,sum(achiev) over(ORDER BY fin_yr_desc,achiev_month) progAchieve from (select fin_yr_desc,achiev_month,ac.month_id,month_name||'-('||f.fin_yr_desc||')' descr ,coalesce(sum(achievement),0.00) achiev from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p,iwmp_m_month m ,iwmp_district d, iwmp_state s, iwmp_m_fin_year f where a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and upper(ac.status)='C' and s.st_code=(case when :stCode=0 then s.st_code else :stCode end) and wdcpmksy =1 and m.month_id=ac.month_id and head_code=:headCode group by f.fin_yr_desc ,achiev_month,ac.month_id,month_name order by f.fin_yr_desc,achiev_month) as final order by fin_yr_desc,achiev_month
getstateprogressivedata=select s.st_code as stcode, s.st_name as stname,  sum(achievement) as achievement from wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_district d, iwmp_state s, iwmp_m_project p, iwmp_m_phy_activity_dashboard h where ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and d.st_code=s.st_code and p.dcode = d.dcode and h.activity_code = ad.activity_code and h.head_code = :headCode and ac.status='C' group by s.st_name,  s.st_code order by s.st_name

getstateprogressivedbdata=select s.st_code as stcode, s.st_name as stname, h.head_desc as headname, sum(achievement) as achievement from wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_district d, iwmp_state s, iwmp_m_project p, iwmp_m_phy_activity_dashboard h where ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and d.st_code=s.st_code and p.dcode = d.dcode and h.activity_code = ad.activity_code and h.head_code in (:headCode, :headCode1) and ac.status='C' group by s.st_code, s.st_name, h.head_desc order by s.st_name
getdistrictprogressivedata=select d.dcode,d.dist_name as distname, sum(achievement) as achievement from wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_district d, iwmp_state s, iwmp_m_project p, iwmp_m_phy_activity_dashboard h where ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and d.st_code=s.st_code and p.dcode = d.dcode and h.activity_code = ad.activity_code and h.head_code = :headCode and s.st_code = :stCode and ac.status='C'  group by d.dist_name, d.dcode order by d.dist_name
getdistrictprogressivedbdata=select d.dcode,d.dist_name as distname,  sum(achievement) as achievement from wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_district d, iwmp_state s, iwmp_m_project p, iwmp_m_phy_activity_dashboard h where ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and d.st_code=s.st_code and p.dcode = d.dcode and h.activity_code = ad.activity_code and h.head_code in (:headCode, :headCode1) and s.st_code = :stCode and ac.status='C'  group by d.dist_name, d.dcode order by d.dist_name
getdistprogressivedata=select *,sum(achiev) over(ORDER BY fin_yr_desc,achiev_month) progAchieve from (select fin_yr_desc,achiev_month,ac.month_id,month_name||'-('||f.fin_yr_desc||')' descr ,coalesce(sum(achievement),0.00) achiev from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity_dashboard a, iwmp_m_project p,iwmp_m_month m ,iwmp_district d, iwmp_state s, iwmp_m_fin_year f where a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and upper(ac.status)='C' and wdcpmksy =1 and d.dcode = :dCode and m.month_id=ac.month_id and head_code=:headCode group by f.fin_yr_desc ,achiev_month,ac.month_id,month_name order by f.fin_yr_desc,achiev_month) as final order by fin_yr_desc,achiev_month
getdistprogressivedbdata=select *,sum(achiev) over(ORDER BY fin_yr_desc,achiev_month) progAchieve from (select fin_yr_desc,achiev_month,ac.month_id,month_name||'-('||f.fin_yr_desc||')' descr ,coalesce(sum(achievement),0.00) achiev from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity_dashboard a, iwmp_m_project p,iwmp_m_month m ,iwmp_district d, iwmp_state s, iwmp_m_fin_year f where a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and upper(ac.status)='C' and wdcpmksy =1 and d.dcode = :dCode and m.month_id=ac.month_id and head_code in (:headCode, :headCode1) group by f.fin_yr_desc ,achiev_month,ac.month_id,month_name order by f.fin_yr_desc,achiev_month) as final order by fin_yr_desc,achiev_month
getstatewiseprogressivedata=select *,sum(achiev) over(ORDER BY fin_yr_desc,achiev_month) progAchieve from (select fin_yr_desc,achiev_month,ac.month_id,month_name||'-('||f.fin_yr_desc||')' descr ,coalesce(sum(achievement),0.00) achiev from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p,iwmp_m_month m ,iwmp_district d, iwmp_state s, iwmp_m_fin_year f where a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and upper(ac.status)='C' and s.st_code=:scode and wdcpmksy =1 and m.month_id=ac.month_id and head_code=:headCode group by f.fin_yr_desc ,achiev_month,ac.month_id,month_name order by f.fin_yr_desc,achiev_month) as final order by fin_yr_desc,achiev_month
getstatewiseprogressivedbdata=select *,sum(achiev) over(ORDER BY fin_yr_desc,achiev_month) progAchieve from (select fin_yr_desc,achiev_month,ac.month_id,month_name||'-('||f.fin_yr_desc||')' descr ,coalesce(sum(achievement),0.00) achiev from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity a, iwmp_m_project p,iwmp_m_month m ,iwmp_district d, iwmp_state s, iwmp_m_fin_year f where a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and upper(ac.status)='C' and s.st_code=:scode and wdcpmksy =1 and m.month_id=ac.month_id and head_code in (:headCode, :headCode1) group by f.fin_yr_desc ,achiev_month,ac.month_id,month_name order by f.fin_yr_desc,achiev_month) as final order by fin_yr_desc,achiev_month

getprogressivenewrenodata=select *,sum(achiev) over(ORDER BY fin_yr_desc,achiev_month) progAchieve from (select fin_yr_desc,achiev_month,ac.month_id,month_name||'-('||f.fin_yr_desc||')' descr ,coalesce(sum(achievement),0.00) achiev from  wdcpmksy_project_phy_ach_details ad, wdcpmksy_project_phy_achievement ac, iwmp_m_phy_activity_dashboard a, iwmp_m_project p,iwmp_m_month m ,iwmp_district d, iwmp_state s, iwmp_m_fin_year f where a.activity_code = ad.activity_code and ad.achievement_id=ac.achievement_id and ac.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code=s.st_code and ac.fin_yr_cd=f.fin_yr_cd and upper(ac.status)='C' and s.st_code=(case when :stCode=0 then s.st_code else :stCode end) and wdcpmksy =1 and m.month_id=ac.month_id and head_code in (:headCode1, :headCode) group by f.fin_yr_desc ,achiev_month,ac.month_id,month_name order by f.fin_yr_desc,achiev_month) as final order by fin_yr_desc,achiev_month
getheadName=select head_desc as headname, unit from iwmp_m_phy_activity_dashboard where head_code = :headCode limit 1
getdCode=select d.dcode from iwmp_district d, iwmp_state s where s.st_code = d.st_code and s.st_code = :stCode order by dist_name limit 1 
getdName=select dist_name as distname from iwmp_district where dcode = :dcode
getSName=select st_name as stname from iwmp_state where st_code = :scode

#Baseline Dashboard query start
getClassBaseline=select  COALESCE(SUM(CASE WHEN d.classification_land_id = 5 THEN area ELSE 0 END), 0.0000) AS cultivable_wasteland, COALESCE(SUM(CASE WHEN d.classification_land_id = 6 THEN area ELSE 0 END), 0.0000) AS degraded_land, COALESCE(SUM(CASE WHEN d.classification_land_id = 7 THEN area ELSE 0 END), 0.0000) AS rainfed, COALESCE(SUM(CASE WHEN d.classification_land_id = 8 THEN area ELSE 0 END), 0.0000) AS forest_land, COALESCE(SUM(CASE WHEN d.classification_land_id = 9 THEN area ELSE 0 END), 0.0000) AS others from bls_out_main m  join bls_out_detail d on m.bls_out_main_id_pk = d.bls_out_main_id where m.status = 'C' 
getClassOnDate=select COALESCE(SUM(CASE WHEN d.classification_land_id = 5 THEN area ELSE 0 END), 0.0000) AS cultivable_wasteland_achv, COALESCE(SUM(CASE WHEN d.classification_land_id = 6 THEN area ELSE 0 END), 0.0000) AS degraded_land_achv, COALESCE(SUM(CASE WHEN d.classification_land_id = 7 THEN area ELSE 0 END), 0.0000) AS rainfed_achv, COALESCE(SUM(CASE WHEN d.classification_land_id = 8 THEN area ELSE 0 END), 0.0000) AS forest_land_achv, COALESCE(SUM(CASE WHEN d.classification_land_id = 9 THEN area ELSE 0 END), 0.0000) AS others_achv from bls_out_main_achiev m  join bls_out_detail_achiev d ON m.bls_out_main_id_pk = d.bls_out_main_id  where m.status = 'C'
getIrriBaseline=select sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation,    sum(case ownership_id when 4 then area else 0 end ) others_owned from bls_out_main bm,bls_out_detail boutdet where bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'
getIrrionDate=select sum(case irrigation_status_id when 22 then area else 0 end ) protective_irrigation_achv, sum(case irrigation_status_id when 23 then area else 0 end ) assured_irrigation_achv, sum(case irrigation_status_id when 24 then area else 0 end ) no_irrigation_achv,    sum(case ownership_id when 4 then area else 0 end ) others_owned_achv from bls_out_main_achiev bm,bls_out_detail_achiev boutdet where bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' 
getOwnerBase=select  sum(case ownership_id when 1 then area else 0 end ) private_owner, sum(case ownership_id when 2 then area else 0 end ) govt_owned, sum(case ownership_id when 3 then area else 0 end ) community_owned, sum(case ownership_id when 4 then area else 0 end ) others_owned from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'
getOwnerDate=select  sum(case ownership_id when 1 then area else 0 end ) private_owner_ach, sum(case ownership_id when 2 then area else 0 end ) govt_owned_ach, sum(case ownership_id when 3 then area else 0 end ) community_owned_ach, sum(case ownership_id when 4 then area else 0 end ) others_owned_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C' 
getNoofCropBaseData=select sum(case no_of_crop_id when 10 then area else 0 end ) no_crop,sum(case no_of_crop_id when 11 then area else 0 end ) single_crop, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop from iwmp_district d,iwmp_m_project p,bls_out_main bm,bls_out_detail boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'
getNoofCropDateData=select sum(case no_of_crop_id when 10 then area else 0 end ) no_crop_ach,sum(case no_of_crop_id when 11 then area else 0 end ) single_crop_ach, sum(case no_of_crop_id when 12 then area else 0 end ) double_crop_ach, sum(case no_of_crop_id when 13 then area else 0 end ) multiple_crop_ach from iwmp_district d,iwmp_m_project p,bls_out_main_achiev bm,bls_out_detail_achiev boutdet where d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.bls_out_main_id_pk=boutdet.bls_out_main_id and bm.status='C'

getBenifitedFarmersNo = select st_name as stname, st_code as stcode, fin_yr_desc as yrdesc,sum(sc+st+other) as bnftdfrmrs from(select s.st_name, s.st_code, f.fin_yr_desc, cast(COALESCE(sum(farmer_sc), 0) as Integer) as sc, cast( COALESCE(sum(farmer_st), 0) as Integer) as st, cast( COALESCE(sum(others), 0) as Integer) as other, cast( COALESCE(sum(farmer_female), 0) as Integer) as female, cast( COALESCE(sum(farmer_small), 0) as Integer) as small, cast( COALESCE(sum(farmer_mirginal), 0) as Integer) as mirginal, cast( COALESCE(sum(farmer_landless), 0) as Integer) as landless, cast( COALESCE(sum(farmer_bpl), 0) as Integer) as bpl from iwmp_state s, iwmp_district d, iwmp_m_project p, outcome_2_data bm, iwmp_m_fin_year f where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd = f.fin_yr_cd and wdcpmksy=1 group by s.st_name, s.st_code, f.fin_yr_desc order by s.st_name, f.fin_yr_desc) as foo group by foo.st_name, foo.st_code, foo.fin_yr_desc
getWtrHrvstngStrctrNo = select distinct head_code as headcode, head_desc as headname, COALESCE(sum(d.achievement),0.00) as plan, fin_yr_desc as yrdesc from (select h.head_code, h.head_desc, act.activity_code from iwmp_m_phy_activity act, iwmp_m_phy_heads h where h.head_code=act.head_code and h.head_code in(4,5,6,7) group by h.head_code, h.head_desc, act.activity_code) c left join (select det.activity_code, coalesce(sum(achievement),0.00) as achievement, fin_yr_desc from wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach, IWMP_M_FIN_YEAR FA where det.achievement_id=ach.achievement_id and ach.fin_yr_cd =fa.fin_yr_cd and upper(status) ='C' group by activity_code, fin_yr_desc) d on c.activity_code= d.activity_code group by c.head_code,c.head_desc, fin_yr_desc order by head_code, fin_yr_desc
getDistWiseBenifitedFarmersNo = select dist_name as distname, dcode, fin_yr_desc as yrdesc,sum(sc+st+other) as bnftdfrmrs from(select d.dist_name, d.dcode, f.fin_yr_desc, cast(COALESCE(sum(farmer_sc), 0) as Integer) as sc, cast( COALESCE(sum(farmer_st), 0) as Integer) as st, cast( COALESCE(sum(others), 0) as Integer) as other, cast( COALESCE(sum(farmer_female), 0) as Integer) as female, cast( COALESCE(sum(farmer_small), 0) as Integer) as small, cast( COALESCE(sum(farmer_mirginal), 0) as Integer) as mirginal, cast( COALESCE(sum(farmer_landless), 0) as Integer) as landless, cast( COALESCE(sum(farmer_bpl), 0) as Integer) as bpl from iwmp_district d, iwmp_m_project p, outcome_2_data bm, iwmp_m_fin_year f where d.st_code=:stcode and d.dcode=p.dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd = f.fin_yr_cd group by d.dist_name, d.dcode, f.fin_yr_desc order by d.dist_name) as foo group by foo.dist_name, foo.dcode, foo.fin_yr_desc order by foo.dist_name, foo.fin_yr_desc
getProjWiseBenifitedFarmersNo = select proj_name as projname, proj_id as projid, fin_yr_desc as yrdesc,sum(sc+st+other) as bnftdfrmrs from(select p.proj_name, p.proj_id, f.fin_yr_desc, cast(COALESCE(sum(farmer_sc), 0) as Integer) as sc, cast( COALESCE(sum(farmer_st), 0) as Integer) as st, cast( COALESCE(sum(others), 0) as Integer) as other, cast( COALESCE(sum(farmer_female), 0) as Integer) as female, cast( COALESCE(sum(farmer_small), 0) as Integer) as small, cast( COALESCE(sum(farmer_mirginal), 0) as Integer) as mirginal, cast( COALESCE(sum(farmer_landless), 0) as Integer) as landless, cast( COALESCE(sum(farmer_bpl), 0) as Integer) as bpl from iwmp_m_project p, outcome_2_data bm, iwmp_m_fin_year f where p.dcode=:dcode and p.proj_id=bm.proj_id and bm.status='C' and bm.fin_yr_cd = f.fin_yr_cd group by p.proj_name, p.proj_id, f.fin_yr_desc order by p.proj_name) as foo group by foo.proj_name, foo.proj_id, foo.fin_yr_desc order by foo.proj_name, foo.fin_yr_desc
getStWiseWtrHrvstngIrriDetail = select s.st_code as stcode, st_name as stname, h.head_code as headcode, head_desc as headname, coalesce(sum(achievement),0.00) as plan, fin_yr_desc as yrdesc from iwmp_m_phy_activity act, iwmp_m_phy_heads h, wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach, IWMP_M_FIN_YEAR FA, iwmp_m_project p, iwmp_district d, iwmp_state s where h.head_code=act.head_code and h.head_code in(4,5,6,7) and act.activity_code = det.activity_code and det.achievement_id=ach.achievement_id and ach.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code = s.st_code and wdcpmksy =1 and ach.fin_yr_cd =fa.fin_yr_cd and upper(ach.status) ='C' group by s.st_code,h.head_code, fin_yr_desc order by s.st_name, h.head_code, fin_yr_desc
getDistWiseWtrIrriDetails = select d.dcode , dist_name as distname, h.head_code as headcode, head_desc as headname, coalesce(sum(achievement),0.00) as plan, fin_yr_desc as yrdesc from iwmp_m_phy_activity act, iwmp_m_phy_heads h, wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach, IWMP_M_FIN_YEAR FA, iwmp_m_project p, iwmp_district d where h.head_code=act.head_code and h.head_code in(4,5,6,7) and act.activity_code = det.activity_code and det.achievement_id=ach.achievement_id and ach.proj_id = p.proj_id and p.dcode = d.dcode and d.st_code =:stcode and ach.fin_yr_cd =fa.fin_yr_cd and upper(ach.status) ='C' group by d.dcode,h.head_code, fin_yr_desc order by d.dist_name, h.head_code, fin_yr_desc
getProjWiseWtrIrriDetails = select p.proj_id as projid , proj_name as projname, h.head_code as headcode, head_desc as headname, coalesce(sum(achievement),0.00) as plan, fin_yr_desc as yrdesc from iwmp_m_phy_activity act, iwmp_m_phy_heads h, wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach, IWMP_M_FIN_YEAR FA, iwmp_m_project p where h.head_code=act.head_code and h.head_code in(4,5,6,7) and act.activity_code = det.activity_code and det.achievement_id=ach.achievement_id and ach.proj_id = p.proj_id and p.dcode =:dcode and ach.fin_yr_cd =fa.fin_yr_cd and upper(ach.status) ='C' group by p.proj_id,h.head_code, fin_yr_desc order by p.proj_name, h.head_code, fin_yr_desc

getPfmsComponentReport=select st_code, (select st_name from iwmp_state where st_code=e.st_code ) as stname, component_code, component_name, financial_year, sum(total_amount) as expenditure from pfms_eatmisdata_detail e where st_code=(case when :stcode=0 then st_code else :stcode end) and financial_year= (case when :fromYear=0 then financial_year else :fromYear end) and component_code in(:cmpcode) group by st_code,component_code, component_name,financial_year order by stname,component_code, component_name,financial_year
getDistrictPfmsComponentReport=select e.dcode,  d.dist_name as distname , component_code, component_name, financial_year,sum(total_amount) as expenditure from pfms_eatmisdata_detail e, iwmp_district d where d.st_code=(case when :stcode=0 then d.st_code else :stcode end) and e.dcode=d.dcode and financial_year= (case when :fromYear=0 then financial_year else :fromYear end) and component_code in(:cmpcode) group by e.dcode, distname,component_code, component_name,financial_year order by d.dist_name,component_code, component_name,financial_year 
#getDistrictPfmsComponentReport=select e.dcode,  d.dist_name , component_code, component_name, financial_year,sum(total_amount) as expenditure from pfms_eatmisdata_detail e, iwmp_district d where d.st_code=(case when 20=0 then d.st_code else 20 end) and e.dcode=d.dcode and financial_year= (case when 2023=0 then financial_year else 2023 end) and component_code in('Q.1.1','A.1.1','A.1.3','','')  group by e.dcode , d.dist_name,component_code, component_name,financial_year order by component_code, component_name,financial_year



#getAllGeoRefData = select a.stcode, stname, totproj,a.forclsd, ongoing, cmpltd, DPR as totdpr, sum(EPA + LIV + PROD) as totworkcode, totgeorefwrkcd, (sum(EPA + LIV + PROD + DPR)- totgeorefwrkcd) as totnongeorefwrkcd from(WITH totproj as(select d.st_code, count(project_cd) as totproj from iwmp_m_project p inner join iwmp_district d on p.dcode = d.dcode and p.status = 'C' GROUP BY d.st_code),DPRStatus as(select d.st_code, count(case when ast.status = 'F' then ast.status end) as forclsd,count(case when ast.status = 'O' then ast.status end) as ongoing, count(case when ast.status = 'C' then ast.status end) as cmpltd from iwmp_project_asset_status ast inner join iwmp_m_project p on ast.projid = p.proj_id inner join iwmp_district d on p.dcode = d.dcode GROUP BY d.st_code),DPR as(select d.st_code, count(assetid) as DPR from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode and a.status = 'C' GROUP BY d.st_code), EPA as(select d.st_code, count(assetid) as EPA from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode and e.status = 'C' GROUP BY d.st_code), LIV as(select d.st_code, count(assetid) as LIV from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode and l.status = 'C' GROUP BY d.st_code), PROD as(select d.st_code, count(assetid) as PROD from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode and pd.status = 'C' GROUP BY d.st_code),totgeorefwrkcd as(select state_code, count(asset_geo_reference_id) as totgeorefwrkcd from asset_geo_reference where asset_geo_reference_id  in(select asset_geo_reference_id from asset_geo_reference) GROUP BY state_code) Select s.st_name as stname, s.st_code as stcode, cast(COALESCE(p.totproj,0) as Integer) as totproj, cast(COALESCE(ast.forclsd,0)as Integer)as forclsd, cast(COALESCE(ast.ongoing,0)as Integer)as ongoing, cast(COALESCE(ast.cmpltd,0)as Integer)as cmpltd, cast(COALESCE(d.DPR,0) as Integer) as DPR, cast(COALESCE(e.EPA,0) as Integer) as EPA, cast(COALESCE(l.LIV,0) as Integer) as LIV, cast(COALESCE(pd.PROD,0) as Integer) as PROD, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd from totproj p RIGHT join iwmp_state s on p.st_code = s.st_code LEFT join DPRStatus ast on ast.st_code = s.st_code LEFT join DPR d on d.st_code = s.st_code LEFT join EPA e on e.st_code = s.st_code LEFT join LIV l on l.st_code = s.st_code LEFT join PROD pd on pd.st_code = s.st_code LEFT join totgeorefwrkcd tg on tg.state_code = s.st_code WHERE wdcpmksy=1 group by s.st_name, s.st_code, totproj,ast.forclsd,ast.ongoing,ast.cmpltd, d.DPR, e.EPA, l.LIV, pd.PROD, tg.totgeorefwrkcd order by st_name)as a group by a.stcode, a.stname, a.totproj,a.forclsd, a.ongoing, a.cmpltd,a.DPR, a.totgeorefwrkcd order by stname
#getDistWiseGeoRefData = select a.dcode, distname, totproj,forclsd, ongoing, cmpltd, DPR as totdpr, sum(EPA + LIV + PROD) as totworkcode, totgeorefwrkcd,(sum(EPA + LIV + PROD + DPR)- totgeorefwrkcd) as totnongeorefwrkcd from(WITH totproj as(select p.dcode, count(project_cd) as totproj from iwmp_m_project p where p.status = 'C' GROUP BY p.dcode),DPRStatus as(select p.dcode, count(case when ast.status = 'F' then ast.status end) as forclsd,count(case when ast.status = 'O' then ast.status end) as ongoing, count(case when ast.status = 'C' then ast.status end) as cmpltd from iwmp_project_asset_status ast inner join iwmp_m_project p on ast.projid = p.proj_id GROUP BY p.dcode), DPR as(select p.dcode, count(assetid) as DPR from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id and a.status = 'C' GROUP BY p.dcode), EPA as(select p.dcode, count(assetid) as EPA from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id and e.status = 'C' GROUP BY p.dcode), LIV as(select p.dcode, count(assetid) as LIV from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id and l.status ='C' GROUP BY p.dcode), PROD as(select p.dcode, count(assetid) as PROD from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id and pd.status ='C' GROUP BY p.dcode), totgeorefwrkcd as(select district_code, count(asset_geo_reference_id) as totgeorefwrkcd from asset_geo_reference where asset_geo_reference_id  in(select asset_geo_reference_id from asset_geo_reference) GROUP BY district_code) Select d.dist_name as distname, d.dcode as dcode, cast(COALESCE(p.totproj,0) as Integer) as totproj, cast(COALESCE(ast.forclsd,0)as Integer)as forclsd, cast(COALESCE(ast.ongoing,0)as Integer)as ongoing, cast(COALESCE(ast.cmpltd,0)as Integer)as cmpltd, cast(COALESCE(dp.DPR,0) as Integer) as DPR, cast(COALESCE(e.EPA,0) as Integer) as EPA, cast(COALESCE(l.LIV,0) as Integer) as LIV, cast(COALESCE(pd.PROD,0) as Integer) as PROD, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd from totproj p RIGHT join iwmp_district d on p.dcode = d.dcode LEFT join DPRStatus ast on ast.dcode = d.dcode LEFT join DPR dp on dp.dcode = d.dcode LEFT join EPA e on e.dcode = d.dcode LEFT join LIV l on l.dcode = d.dcode LEFT join PROD pd on pd.dcode = d.dcode LEFT join totgeorefwrkcd tg on tg.district_code = d.dcode where d.st_code = :stcode group by d.dist_name, d.dcode, totproj, ast.forclsd,ast.ongoing,ast.cmpltd, dp.DPR, e.EPA, l.LIV, pd.PROD, tg.totgeorefwrkcd order by dist_name)as a group by a.dcode, a.distname, a.totproj, a.forclsd, a.ongoing, a.cmpltd,a.DPR, a.totgeorefwrkcd order by distname
#getProjWiseGeoRefData = select a.projid, projname, forclsd, ongoing, cmpltd, DPR as totdpr, sum(EPA + LIV + PROD) as totworkcode, totgeorefwrkcd,(sum(EPA + LIV + PROD + DPR)- totgeorefwrkcd) as totnongeorefwrkcd from(WITH DPRStatus as(select ast.projid, count(case when ast.status = 'F' then ast.status end) as forclsd,count(case when ast.status = 'O' then ast.status end) as ongoing, count(case when ast.status = 'C' then ast.status end) as cmpltd from iwmp_project_asset_status ast GROUP BY ast.projid), DPR as(select a.proj_id, count(assetid) as DPR from iwmp_project_physical_asset a where a.status = 'C' GROUP BY a.proj_id), EPA as(select e.proj_id, count(assetid) as EPA from wdcpmksy_epa_workid e where e.status = 'C' GROUP BY e.proj_id), LIV as(select l.proj_id, count(assetid) as LIV from wdcpmksy_livelihood_workid l where l.status ='C' GROUP BY l.proj_id), PROD as(select pd.proj_id, count(assetid) as PROD from wdcpmksy_prdouction_workid pd where pd.status ='C' GROUP BY pd.proj_id), totgeorefwrkcd as(select project_code, count(asset_geo_reference_id) as totgeorefwrkcd from asset_geo_reference where asset_geo_reference_id  in(select asset_geo_reference_id from asset_geo_reference) GROUP BY project_code) Select p.proj_name as projname, p.proj_id as projid, cast(COALESCE(ast.forclsd,0)as Integer)as forclsd, cast(COALESCE(ast.ongoing,0)as Integer)as ongoing, cast(COALESCE(ast.cmpltd,0)as Integer)as cmpltd, cast(COALESCE(dp.DPR,0) as Integer) as DPR, cast(COALESCE(e.EPA,0) as Integer) as EPA, cast(COALESCE(l.LIV,0) as Integer) as LIV, cast(COALESCE(pd.PROD,0) as Integer) as PROD, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd from DPRStatus ast RIGHT join iwmp_m_project p on ast.projid = p.proj_id LEFT join dpr dp on dp.proj_id = p.proj_id LEFT join EPA e on e.proj_id = p.proj_id LEFT join LIV l on l.proj_id = p.proj_id LEFT join PROD pd on pd.proj_id = p.proj_id LEFT join totgeorefwrkcd tg on tg.project_code = p.project_cd where p.dcode = :dcode group by p.proj_name, p.proj_id, ast.forclsd,ast.ongoing,ast.cmpltd, dp.DPR, e.EPA, l.LIV, pd.PROD, tg.totgeorefwrkcd order by proj_name)as a group by a.projid, a.projname, a.forclsd, a.ongoing, a.cmpltd,a.DPR, a.totgeorefwrkcd order by projname
#getProjWiseGeoRefDetails = select asset_geo_reference_id as assetgeoref, work_serial_code as workcode, head_code as headcode, head_description as headdes, activity_code as actcode, activity_description as actdes, stage, project_code as projcode from asset_geo_reference where project_code in(select project_cd from iwmp_m_project where proj_id = :projid) order by workcode, stage


#getAllGeoRefData=select stname, a.stcode, a.totproj, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, sum((a.n_CREATED - a.n_FORCLOSED) + (a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED)) as totworkcode, totgeorefwrkcd, (sum((a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED) + (a.n_CREATED - a.n_FORCLOSED))- totgeorefwrkcd) as totnongeorefwrkcd from(WITH totproj as(select d.st_code, count(project_cd) as totproj from iwmp_m_project p inner join iwmp_district d on p.dcode = d.dcode and p.status = 'C' GROUP BY d.st_code), NRMCREATED as(select d.st_code, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode group by d.st_code), NRMUNSTARTED as(select d.st_code, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.assetid IS NULL group by d.st_code), NRMONGOING as(select d.st_code, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='O' group by d.st_code), NRMCOMPLETED as(select d.st_code, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='C' group by d.st_code), NRMFORCLOSED as(select d.st_code, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='F' group by d.st_code), EPACREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where e.status='C' group by d.st_code), EPAUNSTARTED as(select d.st_code, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by d.st_code), EPAONGOING as(select d.st_code, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by d.st_code), EPACOMPLETED as(select d.st_code, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by d.st_code), EPAFORCLOSED as(select d.st_code, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by d.st_code), LIVELIHOODCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where l.status='C' group by d.st_code), LIVELIHOODUNSTARTED as(select d.st_code, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by d.st_code), LIVELIHOODONGOING as(select d.st_code, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by d.st_code), LIVELIHOODCOMPLETED as(select d.st_code, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by d.st_code), LIVELIHOODFORCLOSED as(select d.st_code, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by d.st_code), PRODUCTIONCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where pd.status='C' group by d.st_code), PRODUCTIONUNSTARTED as(select d.st_code, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by d.st_code), PRODUCTIONONGOING as(select d.st_code, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by d.st_code), PRODUCTIONCOMPLETED as(select d.st_code, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by d.st_code), PRODUCTIONFORCLOSED as(select d.st_code, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by d.st_code), totgeorefwrkcd as(select state_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY state_code) Select s.st_name as stname, s.st_code as stcode, cast(COALESCE(p.totproj,0) as Integer) as totproj, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd from totproj p RIGHT join iwmp_state s on p.st_code = s.st_code LEFT join totgeorefwrkcd tg on tg.state_code = s.st_code LEFT join NRMCREATED ncr on ncr.st_code = s.st_code LEFT join NRMUNSTARTED nus on nus.st_code = s.st_code LEFT join NRMONGOING no on no.st_code = s.st_code LEFT join NRMCOMPLETED nc on nc.st_code = s.st_code LEFT join NRMFORCLOSED nf on nf.st_code = s.st_code LEFT join EPACREATED ecr on ecr.st_code = s.st_code LEFT join EPAUNSTARTED eus on eus.st_code = s.st_code LEFT join EPAONGOING eo on eo.st_code = s.st_code LEFT join EPACOMPLETED ec on ec.st_code = s.st_code LEFT join EPAFORCLOSED ef on ef.st_code = s.st_code LEFT join LIVELIHOODCREATED lcr on lcr.st_code = s.st_code LEFT join LIVELIHOODUNSTARTED lus on lus.st_code = s.st_code LEFT join LIVELIHOODONGOING lo on lo.st_code = s.st_code LEFT join LIVELIHOODCOMPLETED lc on lc.st_code = s.st_code LEFT join LIVELIHOODFORCLOSED lf on lf.st_code = s.st_code LEFT join PRODUCTIONCREATED pcr on pcr.st_code = s.st_code LEFT join PRODUCTIONUNSTARTED pus on pus.st_code = s.st_code LEFT join PRODUCTIONONGOING po on po.st_code = s.st_code LEFT join PRODUCTIONCOMPLETED pc on pc.st_code = s.st_code LEFT join PRODUCTIONFORCLOSED pf on pf.st_code = s.st_code WHERE wdcpmksy=1 group by s.st_name, s.st_code, p.totproj, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd order by st_name)as a group by a.stcode, a.stname, a.totproj, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd order by stname
getAllGeoRefData=select stname, a.stcode, a.totproj, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, sum((a.n_CREATED - a.n_FORCLOSED) + (a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED)) as totworkcode, totgeorefwrkcd, (sum((a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED) + (a.n_CREATED - a.n_FORCLOSED))- totgeorefwrkcd) as totnongeorefwrkcd from (WITH totproj as(select d.st_code, count(project_cd) as totproj from iwmp_m_project p inner join iwmp_district d on p.dcode = d.dcode and p.status = 'C' GROUP BY d.st_code), NRMCREATED as(select d.st_code, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by d.st_code), NRMUNSTARTED as(select d.st_code, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.assetid IS NULL group by d.st_code), NRMONGOING as(select d.st_code, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='O' group by d.st_code), NRMCOMPLETED as(select d.st_code, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='C' and a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by d.st_code), NRMFORCLOSED as(select d.st_code, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where s.status='F' group by d.st_code), EPACREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where e.status='C' group by d.st_code), EPAUNSTARTED as(select d.st_code, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by d.st_code), EPAONGOING as(select d.st_code, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by d.st_code), EPACOMPLETED as(select d.st_code, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by d.st_code), EPAFORCLOSED as(select d.st_code, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by d.st_code), LIVELIHOODCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where l.status='C' group by d.st_code), LIVELIHOODUNSTARTED as(select d.st_code, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by d.st_code), LIVELIHOODONGOING as(select d.st_code, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by d.st_code), LIVELIHOODCOMPLETED as(select d.st_code, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by d.st_code), LIVELIHOODFORCLOSED as(select d.st_code, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by d.st_code), PRODUCTIONCREATED as(select d.st_code, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode where pd.status='C' group by d.st_code), PRODUCTIONUNSTARTED as(select d.st_code, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by d.st_code), PRODUCTIONONGOING as(select d.st_code, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by d.st_code), PRODUCTIONCOMPLETED as(select d.st_code, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by d.st_code), PRODUCTIONFORCLOSED as(select d.st_code, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join iwmp_district d on p.dcode = d.dcode inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by d.st_code), totgeorefwrkcd as(select state_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY state_code) Select s.st_name as stname, s.st_code as stcode, cast(COALESCE(p.totproj,0) as Integer) as totproj, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd from totproj p RIGHT join iwmp_state s on p.st_code = s.st_code LEFT join totgeorefwrkcd tg on tg.state_code = s.st_code LEFT join NRMCREATED ncr on ncr.st_code = s.st_code LEFT join NRMUNSTARTED nus on nus.st_code = s.st_code LEFT join NRMONGOING no on no.st_code = s.st_code LEFT join NRMCOMPLETED nc on nc.st_code = s.st_code LEFT join NRMFORCLOSED nf on nf.st_code = s.st_code LEFT join EPACREATED ecr on ecr.st_code = s.st_code LEFT join EPAUNSTARTED eus on eus.st_code = s.st_code LEFT join EPAONGOING eo on eo.st_code = s.st_code LEFT join EPACOMPLETED ec on ec.st_code = s.st_code LEFT join EPAFORCLOSED ef on ef.st_code = s.st_code LEFT join LIVELIHOODCREATED lcr on lcr.st_code = s.st_code LEFT join LIVELIHOODUNSTARTED lus on lus.st_code = s.st_code LEFT join LIVELIHOODONGOING lo on lo.st_code = s.st_code LEFT join LIVELIHOODCOMPLETED lc on lc.st_code = s.st_code LEFT join LIVELIHOODFORCLOSED lf on lf.st_code = s.st_code LEFT join PRODUCTIONCREATED pcr on pcr.st_code = s.st_code LEFT join PRODUCTIONUNSTARTED pus on pus.st_code = s.st_code LEFT join PRODUCTIONONGOING po on po.st_code = s.st_code LEFT join PRODUCTIONCOMPLETED pc on pc.st_code = s.st_code LEFT join PRODUCTIONFORCLOSED pf on pf.st_code = s.st_code WHERE wdcpmksy=1 group by s.st_name, s.st_code, p.totproj, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd order by st_name)as a group by a.stcode, a.stname, a.totproj, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd order by stname
#getDistWiseGeoRefData=select distname, a.dcode, totproj, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, sum((a.n_CREATED - a.n_FORCLOSED) + (a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED)) as totworkcode, totgeorefwrkcd, (sum((a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED) + (a.n_CREATED - a.n_FORCLOSED))- totgeorefwrkcd) as totnongeorefwrkcd from(WITH totproj as(select p.dcode, count(project_cd) as totproj from iwmp_m_project p where p.status = 'C' GROUP BY p.dcode), NRMCREATED as(select p.dcode, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id group by p.dcode), NRMUNSTARTED as(select p.dcode, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.dcode), NRMONGOING as(select p.dcode, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.dcode), NRMCOMPLETED as(select p.dcode, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' group by p.dcode), NRMFORCLOSED as(select p.dcode, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.dcode), EPACREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.dcode), EPAUNSTARTED as(select p.dcode, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.dcode), EPAONGOING as(select p.dcode, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.dcode), EPACOMPLETED as(select p.dcode, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.dcode), EPAFORCLOSED as(select p.dcode, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.dcode), LIVELIHOODCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.dcode), LIVELIHOODUNSTARTED as(select p.dcode, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.dcode), LIVELIHOODONGOING as(select p.dcode, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.dcode), LIVELIHOODCOMPLETED as(select p.dcode, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.dcode), LIVELIHOODFORCLOSED as(select p.dcode, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.dcode), PRODUCTIONCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.dcode), PRODUCTIONUNSTARTED as(select p.dcode, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.dcode), PRODUCTIONONGOING as(select p.dcode, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.dcode), PRODUCTIONCOMPLETED as(select p.dcode, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.dcode), PRODUCTIONFORCLOSED as(select p.dcode, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.dcode), totgeorefwrkcd as(select district_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY district_code) Select d.dist_name as distname, d.dcode as dcode, cast(COALESCE(p.totproj,0) as Integer) as totproj, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd from totproj p join iwmp_district d on p.dcode = d.dcode LEFT join NRMCREATED ncr on ncr.dcode = d.dcode LEFT join NRMUNSTARTED nus on nus.dcode = d.dcode LEFT join NRMONGOING no on no.dcode = d.dcode LEFT join NRMCOMPLETED nc on nc.dcode = d.dcode LEFT join NRMFORCLOSED nf on nf.dcode = d.dcode LEFT join EPACREATED ecr on ecr.dcode = d.dcode LEFT join EPAUNSTARTED eus on eus.dcode = d.dcode LEFT join EPAONGOING eo on eo.dcode = d.dcode LEFT join EPACOMPLETED ec on ec.dcode = d.dcode LEFT join EPAFORCLOSED ef on ef.dcode = d.dcode LEFT join LIVELIHOODCREATED lcr on lcr.dcode = d.dcode LEFT join LIVELIHOODUNSTARTED lus on lus.dcode = d.dcode LEFT join LIVELIHOODONGOING lo on lo.dcode = d.dcode LEFT join LIVELIHOODCOMPLETED lc on lc.dcode = d.dcode LEFT join LIVELIHOODFORCLOSED lf on lf.dcode = d.dcode LEFT join PRODUCTIONCREATED pcr on pcr.dcode = d.dcode LEFT join PRODUCTIONUNSTARTED pus on pus.dcode = d.dcode LEFT join PRODUCTIONONGOING po on po.dcode = d.dcode LEFT join PRODUCTIONCOMPLETED pc on pc.dcode = d.dcode LEFT join PRODUCTIONFORCLOSED pf on pf.dcode = d.dcode LEFT join totgeorefwrkcd tg on tg.district_code = d.dcode where d.st_code = :stcode group by d.dist_name, d.dcode, totproj, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd order by dist_name)as a group by a.dcode, a.distname, a.totproj,  a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd order by distname
getDistWiseGeoRefData=select distname, a.dcode, totproj, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, sum((a.n_CREATED - a.n_FORCLOSED) + (a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED)) as totworkcode, totgeorefwrkcd, (sum((a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) +(a.p_CREATED - a.p_FORCLOSED) + (a.n_CREATED - a.n_FORCLOSED))- totgeorefwrkcd) as totnongeorefwrkcd from (WITH totproj as(select p.dcode, count(project_cd) as totproj from iwmp_m_project p where p.status = 'C' GROUP BY p.dcode), NRMCREATED as(select p.dcode, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id where a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by p.dcode), NRMUNSTARTED as(select p.dcode, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.dcode), NRMONGOING as(select p.dcode, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.dcode), NRMCOMPLETED as(select p.dcode, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' and a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by p.dcode), NRMFORCLOSED as(select p.dcode, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.dcode), EPACREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.dcode), EPAUNSTARTED as(select p.dcode, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.dcode), EPAONGOING as(select p.dcode, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.dcode), EPACOMPLETED as(select p.dcode, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.dcode), EPAFORCLOSED as(select p.dcode, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.dcode), LIVELIHOODCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.dcode), LIVELIHOODUNSTARTED as(select p.dcode, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.dcode), LIVELIHOODONGOING as(select p.dcode, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.dcode), LIVELIHOODCOMPLETED as(select p.dcode, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.dcode), LIVELIHOODFORCLOSED as(select p.dcode, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.dcode), PRODUCTIONCREATED as(select p.dcode, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.dcode), PRODUCTIONUNSTARTED as(select p.dcode, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.dcode), PRODUCTIONONGOING as(select p.dcode, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.dcode), PRODUCTIONCOMPLETED as(select p.dcode, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.dcode), PRODUCTIONFORCLOSED as(select p.dcode, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.dcode), totgeorefwrkcd as(select district_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY district_code) Select d.dist_name as distname, d.dcode as dcode, cast(COALESCE(p.totproj,0) as Integer) as totproj, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd from totproj p join iwmp_district d on p.dcode = d.dcode LEFT join NRMCREATED ncr on ncr.dcode = d.dcode LEFT join NRMUNSTARTED nus on nus.dcode = d.dcode LEFT join NRMONGOING no on no.dcode = d.dcode LEFT join NRMCOMPLETED nc on nc.dcode = d.dcode LEFT join NRMFORCLOSED nf on nf.dcode = d.dcode LEFT join EPACREATED ecr on ecr.dcode = d.dcode LEFT join EPAUNSTARTED eus on eus.dcode = d.dcode LEFT join EPAONGOING eo on eo.dcode = d.dcode LEFT join EPACOMPLETED ec on ec.dcode = d.dcode LEFT join EPAFORCLOSED ef on ef.dcode = d.dcode LEFT join LIVELIHOODCREATED lcr on lcr.dcode = d.dcode LEFT join LIVELIHOODUNSTARTED lus on lus.dcode = d.dcode LEFT join LIVELIHOODONGOING lo on lo.dcode = d.dcode LEFT join LIVELIHOODCOMPLETED lc on lc.dcode = d.dcode LEFT join LIVELIHOODFORCLOSED lf on lf.dcode = d.dcode LEFT join PRODUCTIONCREATED pcr on pcr.dcode = d.dcode LEFT join PRODUCTIONUNSTARTED pus on pus.dcode = d.dcode LEFT join PRODUCTIONONGOING po on po.dcode = d.dcode LEFT join PRODUCTIONCOMPLETED pc on pc.dcode = d.dcode LEFT join PRODUCTIONFORCLOSED pf on pf.dcode = d.dcode LEFT join totgeorefwrkcd tg on tg.district_code = d.dcode where d.st_code = :stcode group by d.dist_name, d.dcode, totproj, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd order by dist_name)as a group by a.dcode, a.distname, a.totproj,  a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd order by distname
#getProjWiseGeoRefData=select projname, a.projid, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, sum((a.n_CREATED - a.n_FORCLOSED) + (a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED)) as totworkcode, totgeorefwrkcd, (sum((a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED) + (a.n_CREATED - a.n_FORCLOSED))- totgeorefwrkcd) as totnongeorefwrkcd from(WITH NRMCREATED as(select p.proj_id, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id group by p.proj_id), NRMUNSTARTED as(select p.proj_id, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.proj_id), NRMONGOING as(select p.proj_id, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.proj_id), NRMCOMPLETED as(select p.proj_id, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' group by p.proj_id), NRMFORCLOSED as(select p.proj_id, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.proj_id), EPACREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.proj_id), EPAUNSTARTED as(select p.proj_id, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.proj_id), EPAONGOING as(select p.proj_id, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.proj_id), EPACOMPLETED as(select p.proj_id, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.proj_id), EPAFORCLOSED as(select p.proj_id, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.proj_id), LIVELIHOODCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.proj_id), LIVELIHOODUNSTARTED as(select p.proj_id, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.proj_id), LIVELIHOODONGOING as(select p.proj_id, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.proj_id), LIVELIHOODCOMPLETED as(select p.proj_id, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.proj_id), LIVELIHOODFORCLOSED as(select p.proj_id, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.proj_id), PRODUCTIONCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.proj_id), PRODUCTIONUNSTARTED as(select p.proj_id, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.proj_id), PRODUCTIONONGOING as(select p.proj_id, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.proj_id), PRODUCTIONCOMPLETED as(select p.proj_id, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.proj_id), PRODUCTIONFORCLOSED as(select p.proj_id, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.proj_id), totgeorefwrkcd as(select project_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY project_code) Select p.proj_name as projname, p.proj_id as projid, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd FROM iwmp_m_project p LEFT join NRMCREATED ncr on ncr.proj_id = p.proj_id LEFT join NRMUNSTARTED nus on nus.proj_id = p.proj_id LEFT join NRMONGOING no on no.proj_id = p.proj_id LEFT join NRMCOMPLETED nc on nc.proj_id = p.proj_id LEFT join NRMFORCLOSED nf on nf.proj_id = p.proj_id LEFT join EPACREATED ecr on ecr.proj_id = p.proj_id LEFT join EPAUNSTARTED eus on eus.proj_id = p.proj_id LEFT join EPAONGOING eo on eo.proj_id = p.proj_id LEFT join EPACOMPLETED ec on ec.proj_id = p.proj_id LEFT join EPAFORCLOSED ef on ef.proj_id = p.proj_id LEFT join LIVELIHOODCREATED lcr on lcr.proj_id = p.proj_id LEFT join LIVELIHOODUNSTARTED lus on lus.proj_id = p.proj_id LEFT join LIVELIHOODONGOING lo on lo.proj_id = p.proj_id LEFT join LIVELIHOODCOMPLETED lc on lc.proj_id = p.proj_id LEFT join LIVELIHOODFORCLOSED lf on lf.proj_id = p.proj_id LEFT join PRODUCTIONCREATED pcr on pcr.proj_id = p.proj_id LEFT join PRODUCTIONUNSTARTED pus on pus.proj_id = p.proj_id LEFT join PRODUCTIONONGOING po on po.proj_id = p.proj_id LEFT join PRODUCTIONCOMPLETED pc on pc.proj_id = p.proj_id LEFT join PRODUCTIONFORCLOSED pf on pf.proj_id = p.proj_id LEFT join totgeorefwrkcd tg on tg.project_code = p.project_cd where p.dcode = :dcode group by p.proj_name, p.proj_id, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd order by proj_name)as a group by a.projid, a.projname, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd order by projname
getProjWiseGeoRefData=select projname, a.projid, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, sum((a.n_CREATED - a.n_FORCLOSED) + (a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED)) as totworkcode, totgeorefwrkcd, (sum((a.e_CREATED - a.e_FORCLOSED) + (a.l_CREATED - a.l_FORCLOSED) + (a.p_CREATED - a.p_FORCLOSED) + (a.n_CREATED - a.n_FORCLOSED))- totgeorefwrkcd) as totnongeorefwrkcd from (WITH NRMCREATED as(select p.proj_id, count(assetid) as CREATED from iwmp_project_physical_asset a inner join iwmp_m_project p on a.proj_id = p.proj_id and a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by p.proj_id), NRMUNSTARTED as(select p.proj_id, count(distinct a.assetid) as UNSTARTED from iwmp_project_physical_asset a left join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.assetid IS NULL group by p.proj_id), NRMONGOING as(select p.proj_id, count(distinct a.assetid) as ONGOING from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='O' group by p.proj_id), NRMCOMPLETED as(select p.proj_id, count(distinct a.assetid) as COMPLETED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='C' and a.assetid not in(select nrmwork_id from wdcpmksy_mapping_nrmwork_otherwork) group by p.proj_id), NRMFORCLOSED as(select p.proj_id, count(distinct a.assetid) as FORCLOSED from iwmp_project_physical_asset a inner join iwmp_project_asset_status s on a.assetid=s.assetid inner join iwmp_m_project p on a.proj_id = p.proj_id where s.status='F' group by p.proj_id), EPACREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id where e.status='C' group by p.proj_id), EPAUNSTARTED as(select p.proj_id, count(distinct e.assetid) as UNSTARTED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id left join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where s.assetid IS NULL and e.status='C' group by p.proj_id), EPAONGOING as(select p.proj_id, count(distinct e.assetid) as ONGOING from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='O' group by p.proj_id), EPACOMPLETED as(select p.proj_id, count(distinct e.assetid) as COMPLETED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='C' group by p.proj_id), EPAFORCLOSED as(select p.proj_id, count(distinct e.assetid) as FORCLOSED from wdcpmksy_epa_workid e inner join iwmp_m_project p on e.proj_id = p.proj_id inner join wdcpmksy_project_asset_epa_status s on e.assetid=s.assetid where e.status='C' and s.status='F' group by p.proj_id), LIVELIHOODCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id where l.status='C' group by p.proj_id), LIVELIHOODUNSTARTED as(select p.proj_id, count(distinct l.assetid) as UNSTARTED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id left join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where s.assetid IS NULL and l.status='C' group by p.proj_id), LIVELIHOODONGOING as(select p.proj_id, count(distinct l.assetid) as ONGOING from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='O' group by p.proj_id), LIVELIHOODCOMPLETED as(select p.proj_id, count(distinct l.assetid) as COMPLETED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='C' group by p.proj_id), LIVELIHOODFORCLOSED as(select p.proj_id, count(distinct l.assetid) as FORCLOSED from wdcpmksy_livelihood_workid l inner join iwmp_m_project p on l.proj_id = p.proj_id inner join wdcpmksy_project_asset_livelihood_status s on l.assetid=s.assetid where l.status='C' and s.status='F' group by p.proj_id), PRODUCTIONCREATED as(select p.proj_id, count(assetid) as CREATED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id where pd.status='C' group by p.proj_id), PRODUCTIONUNSTARTED as(select p.proj_id, count(distinct pd.assetid) as UNSTARTED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id left join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where s.assetid IS NULL and pd.status='C' group by p.proj_id), PRODUCTIONONGOING as(select p.proj_id, count(distinct pd.assetid) as ONGOING from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='O' group by p.proj_id), PRODUCTIONCOMPLETED as(select p.proj_id, count(distinct pd.assetid) as COMPLETED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='C' group by p.proj_id), PRODUCTIONFORCLOSED as(select p.proj_id, count(distinct pd.assetid) as FORCLOSED from wdcpmksy_prdouction_workid pd inner join iwmp_m_project p on pd.proj_id = p.proj_id inner join wdcpmksy_project_asset_prod_status s on pd.assetid=s.assetid where pd.status='C' and s.status='F' group by p.proj_id), totgeorefwrkcd as(select project_code, count(distinct work_serial_code) as totgeorefwrkcd from asset_geo_reference GROUP BY project_code) Select p.proj_name as projname, p.proj_id as projid, cast(COALESCE(ncr.CREATED,0) as Integer) as n_CREATED, cast(COALESCE(nus.UNSTARTED ,0) as Integer) as n_UNSTARTED, cast(COALESCE(no.ONGOING,0) as Integer) as n_ONGOING, cast(COALESCE(nc.COMPLETED,0) as Integer) as n_COMPLETED, cast(COALESCE(nf.FORCLOSED,0) as Integer) as n_FORCLOSED, cast(COALESCE(ecr.CREATED,0) as Integer) as e_CREATED, cast(COALESCE(eus.UNSTARTED ,0) as Integer) as e_UNSTARTED, cast(COALESCE(eo.ONGOING,0) as Integer) as e_ONGOING, cast(COALESCE(ec.COMPLETED,0) as Integer) as e_COMPLETED, cast(COALESCE(ef.FORCLOSED,0) as Integer) as e_FORCLOSED, cast(COALESCE(lcr.CREATED,0) as Integer) as l_CREATED, cast(COALESCE(lus.UNSTARTED ,0) as Integer) as l_UNSTARTED, cast(COALESCE(lo.ONGOING,0) as Integer) as l_ONGOING, cast(COALESCE(lc.COMPLETED,0) as Integer) as l_COMPLETED, cast(COALESCE(lf.FORCLOSED,0) as Integer) as l_FORCLOSED, cast(COALESCE(pcr.CREATED,0) as Integer) as p_CREATED, cast(COALESCE(pus.UNSTARTED ,0) as Integer) as p_UNSTARTED, cast(COALESCE(po.ONGOING,0) as Integer) as p_ONGOING, cast(COALESCE(pc.COMPLETED,0) as Integer) as p_COMPLETED, cast(COALESCE(pf.FORCLOSED,0) as Integer) as p_FORCLOSED, cast(COALESCE(tg.totgeorefwrkcd,0) as Integer) as totgeorefwrkcd FROM iwmp_m_project p LEFT join NRMCREATED ncr on ncr.proj_id = p.proj_id LEFT join NRMUNSTARTED nus on nus.proj_id = p.proj_id LEFT join NRMONGOING no on no.proj_id = p.proj_id LEFT join NRMCOMPLETED nc on nc.proj_id = p.proj_id LEFT join NRMFORCLOSED nf on nf.proj_id = p.proj_id LEFT join EPACREATED ecr on ecr.proj_id = p.proj_id LEFT join EPAUNSTARTED eus on eus.proj_id = p.proj_id LEFT join EPAONGOING eo on eo.proj_id = p.proj_id LEFT join EPACOMPLETED ec on ec.proj_id = p.proj_id LEFT join EPAFORCLOSED ef on ef.proj_id = p.proj_id LEFT join LIVELIHOODCREATED lcr on lcr.proj_id = p.proj_id LEFT join LIVELIHOODUNSTARTED lus on lus.proj_id = p.proj_id LEFT join LIVELIHOODONGOING lo on lo.proj_id = p.proj_id LEFT join LIVELIHOODCOMPLETED lc on lc.proj_id = p.proj_id LEFT join LIVELIHOODFORCLOSED lf on lf.proj_id = p.proj_id LEFT join PRODUCTIONCREATED pcr on pcr.proj_id = p.proj_id LEFT join PRODUCTIONUNSTARTED pus on pus.proj_id = p.proj_id LEFT join PRODUCTIONONGOING po on po.proj_id = p.proj_id LEFT join PRODUCTIONCOMPLETED pc on pc.proj_id = p.proj_id LEFT join PRODUCTIONFORCLOSED pf on pf.proj_id = p.proj_id LEFT join totgeorefwrkcd tg on tg.project_code = p.project_cd where p.dcode = :dcode group by p.proj_name, p.proj_id, ncr.CREATED, nus.UNSTARTED, no.ONGOING, nc.COMPLETED, nf.FORCLOSED, ecr.CREATED, eus.UNSTARTED, eo.ONGOING, ec.COMPLETED, ef.FORCLOSED, lcr.CREATED, lus.UNSTARTED, lo.ONGOING, lc.COMPLETED, lf.FORCLOSED, pcr.CREATED, pus.UNSTARTED, po.ONGOING, pc.COMPLETED, pf.FORCLOSED, tg.totgeorefwrkcd order by proj_name)as a group by a.projid, a.projname, a.n_CREATED, a.n_UNSTARTED, a.n_ONGOING, a.n_COMPLETED, a.n_FORCLOSED, a.e_CREATED, a.e_UNSTARTED, a.e_ONGOING, a.e_COMPLETED, a.e_FORCLOSED, a.l_CREATED, a.l_UNSTARTED, a.l_ONGOING, a.l_COMPLETED, a.l_FORCLOSED, a.p_CREATED, a.p_UNSTARTED, a.p_ONGOING, a.p_COMPLETED, a.p_FORCLOSED, a.totgeorefwrkcd order by projname

getProjWiseGeoRefDetails = select asset_geo_reference_id as assetgeoref, work_serial_code as workcode, head_code as headcode, head_description as headdes, activity_code as actcode, activity_description as actdes, stage, project_code as projcode, collection_sno as colno, status from asset_geo_reference where project_code in(select project_cd from iwmp_m_project where proj_id = :projid) order by workcode, stage
getGeoImages = select r.asset_geo_reference_id as assetgeoref, asset_geo_images_id as imgid, state_name as stname, district_name as distname, project_name as projname,  work_serial_code as workcode, head_code as headcode, head_description as headdes, activity_code as actcode, activity_description as actdes, observername, collection_sno as colno,  stage, project_code as projcode, images from asset_geo_reference r, asset_geo_images i where r.asset_geo_reference_id= i.asset_geo_reference_id and  r.work_serial_code = :wrkid and stage = :stage

getProjectByUserAndBaseline=select iwmpMProject.projectId, iwmpMProject.projName from IwmpUserProjectMap where userReg.regId=:regId and iwmpMProject.projectId in (select iwmpMProject.projectId from BlsOutMain where status='C')   order by iwmpMProject.projName ASC
#getBaselineUpadateAchievement=select p.proj_name as projname, p.proj_id as projid, coalesce((select sum(area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=5 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as cultivable_wasteland, coalesce((select sum(area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=5 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as cultivable_wasteland_achv, coalesce((select sum(area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=6 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as degraded_land, coalesce((select sum(area) from bls_out_main_achiev m,bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=6 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as degraded_land_achv, coalesce((select sum(area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=7 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as rainfed, coalesce((select sum(area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=7 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as rainfed_achv, coalesce((select sum(area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=9 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as others, coalesce((select sum(area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=9 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as others_achv, cast((select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main m, bls_out_detail d, bls_out_detail_crop c where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C') as numeric(20,5)) as total_income, cast((select sum(crop_production*avg_income*crop_area) as total_income from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C') as numeric(20,5)) as total_income_achv, coalesce((select sum(area) area from (select sum(crop_area) as area, m.plot_no, season_id from bls_out_main m, bls_out_detail d, bls_out_detail_crop c where p.proj_id=m.proj_id and m.bls_out_main_id_pk=d.bls_out_main_id and d.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and d.bls_out_detail_id_pk=c.bls_out_detail_id and m.status='C' group by m.plot_no, season_id order by m.plot_no) a), 0.0000) as gross_cropped_area, coalesce((select sum(area) area from (select sum(crop_area) as area, m.plot_no, season_id from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c where p.proj_id=m.proj_id and m.bls_out_main_id_pk=d.bls_out_main_id and d.no_of_crop_id in (select m_bls_out_id_pk from m_bls_outcome where type_id=3 ) and d.bls_out_detail_id_pk=c.bls_out_detail_id and m.status='C'  group by m.plot_no, season_id order by m.plot_no) a), 0.0000) as gross_cropped_area_achv, coalesce((select sum(area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=22 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as protective_irrigation, coalesce((select sum(area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=22 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as protective_irrigation_achv, coalesce((select sum(area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=23 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as assured_irrigation, coalesce((select sum(area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=23 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as assured_irrigation_achv, coalesce((select sum(area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=24 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as no_irrigation, coalesce((select sum(area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=24 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as no_irrigation_achv, coalesce((select sum(area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=10 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as no_crop, coalesce((select sum(area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=10 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as no_crop_achv, coalesce((select sum(crop_area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=11 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as single_crop, coalesce((select sum(crop_area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=11 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as single_crop_achv, coalesce((select sum(crop_area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=12 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as double_crop, coalesce((select sum(crop_area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=12 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'),0.0000) as double_crop_achv, coalesce((select sum(crop_area) from bls_out_main m, bls_out_detail d, bls_out_detail_crop c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=13 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as multiple_crop, coalesce((select sum(crop_area) from bls_out_main_achiev m, bls_out_detail_achiev d, bls_out_detail_crop_achiev c, m_bls_outcome mo where p.proj_id=m.proj_id and c.bls_out_detail_id=d.bls_out_detail_id_pk and  mo.m_bls_out_id_pk=d.classification_land_id and mo.m_bls_out_id_pk=13 and m.bls_out_main_id_pk=d.bls_out_main_id and m.status='C'), 0.0000) as multiple_crop_achv from iwmp_m_project p where p.proj_id=:projid group by p.proj_name,p.proj_id order by p.proj_name
#getBaselineUpadateAchievement=With LandData AS (select m.proj_id, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 5 THEN area ELSE 0.0000 END), 0.0000) AS cultivable_wasteland, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 6 THEN area ELSE 0.0000 END), 0.0000) AS degraded_land, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 7 THEN area ELSE 0.0000 END), 0.0000) AS rainfed, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 9 THEN area ELSE 0.0000 END), 0.0000) AS others, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 22 THEN area ELSE 0.0000 END), 0.0000) AS protective_irrigation, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 23 THEN area ELSE 0.0000 END), 0.0000) AS assured_irrigation, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 24 THEN area ELSE 0.0000 END), 0.0000) AS no_irrigation, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 10 THEN area ELSE 0.0000 END), 0.0000) AS no_crop, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 11 THEN crop_area ELSE 0.0000 END), 0.0000) AS single_crop, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 12 THEN crop_area ELSE 0.0000 END), 0.0000) AS double_crop, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 13 THEN crop_area ELSE 0.0000 END), 0.0000) AS multiple_crop, COALESCE(SUM(crop_production * avg_income * crop_area), 0.0000) AS total_income, COALESCE(SUM(crop_area), 0.0000) AS gross_cropped_area from bls_out_main m join bls_out_detail d on m.bls_out_main_id_pk = d.bls_out_main_id join m_bls_outcome o on o.m_bls_out_id_pk=d.classification_land_id left join bls_out_detail_crop c on d.bls_out_detail_id_pk = c.bls_out_detail_id where m.status = 'C' group by m.proj_id), AchievementData AS (select m.proj_id, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 5 THEN area ELSE 0.0000 END), 0.0000) AS cultivable_wasteland_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 6 THEN area ELSE 0.0000 END), 0.0000) AS degraded_land_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 7 THEN area ELSE 0.0000 END), 0.0000) AS rainfed_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 9 THEN area ELSE 0.0000 END), 0.0000) AS others_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 22 THEN area ELSE 0.0000 END), 0.0000) AS protective_irrigation_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 23 THEN area ELSE 0.0000 END), 0.0000) AS assured_irrigation_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 24 THEN area ELSE 0.0000 END), 0.0000) AS no_irrigation_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 10 THEN area ELSE 0.0000 END), 0.0000) AS no_crop_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 11 THEN crop_area ELSE 0.0000 END), 0.0000) AS single_crop_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 12 THEN crop_area ELSE 0.0000 END), 0.0000) AS double_crop_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 13 THEN crop_area ELSE 0.0000 END), 0.0000) AS multiple_crop_achv, COALESCE(SUM(crop_production * avg_income * crop_area), 0.0000) AS total_income_achv, COALESCE(SUM(crop_area), 0.0000) AS gross_cropped_area_achv from bls_out_main_achiev m join bls_out_detail_achiev d ON m.bls_out_main_id_pk = d.bls_out_main_id join m_bls_outcome o on o.m_bls_out_id_pk=d.classification_land_id left join bls_out_detail_crop_achiev c ON d.bls_out_detail_id_pk = c.bls_out_detail_id where m.status = 'C' group by m.proj_id) Select p.proj_name as projname, p.proj_id as projid, COALESCE(l.cultivable_wasteland, 0.0000) AS cultivable_wasteland, COALESCE(a.cultivable_wasteland_achv, 0.0000) AS cultivable_wasteland_achv, COALESCE(l.degraded_land, 0.0000) AS degraded_land, COALESCE(a.degraded_land_achv, 0.0000) AS degraded_land_achv, COALESCE(l.rainfed, 0.0000) AS rainfed, COALESCE(a.rainfed_achv, 0.0000) AS rainfed_achv, COALESCE(l.others, 0.0000) AS others, COALESCE(a.others_achv, 0.0000) AS others_achv, COALESCE(cast(l.total_income as numeric(20,2)), 0.0000) AS total_income, COALESCE(cast(a.total_income_achv as numeric(20,2)), 0.0000) AS total_income_achv, COALESCE(l.gross_cropped_area, 0.0000) AS gross_cropped_area, COALESCE(a.gross_cropped_area_achv, 0.0000) AS gross_cropped_area_achv, COALESCE(l.protective_irrigation, 0.0000) AS protective_irrigation, COALESCE(a.protective_irrigation_achv, 0.0000) AS protective_irrigation_achv, COALESCE(l.assured_irrigation, 0.0000) AS assured_irrigation, COALESCE(a.assured_irrigation_achv, 0.0000) AS assured_irrigation_achv, COALESCE(l.no_irrigation, 0.0000) AS no_irrigation, COALESCE(a.no_irrigation_achv, 0.0000) AS no_irrigation_achv, COALESCE(l.no_crop, 0.0000) AS no_crop, COALESCE(a.no_crop_achv, 0.0000) AS no_crop_achv, COALESCE(l.single_crop, 0.0000) AS single_crop, COALESCE(a.single_crop_achv, 0.0000) AS single_crop_achv, COALESCE(l.double_crop, 0.0000) AS double_crop, COALESCE(a.double_crop_achv, 0.0000) AS double_crop_achv, COALESCE(l.multiple_crop, 0.0000) AS multiple_crop, COALESCE(a.multiple_crop_achv, 0.0000) AS multiple_crop_achv FROM iwmp_m_project p JOIN LandData l on p.proj_id = l.proj_id JOIN AchievementData a on p.proj_id = a.proj_id WHERE p.proj_id=:pCode GROUP BY p.proj_name,p.proj_id, l.cultivable_wasteland, l.degraded_land, l.rainfed, l.others, l.protective_irrigation, l.assured_irrigation, l.no_irrigation, l.no_crop, l.single_crop, l.double_crop, l.multiple_crop, l.total_income, l.gross_cropped_area, a.cultivable_wasteland_achv, a.degraded_land_achv, a.rainfed_achv, a.others_achv, a.protective_irrigation_achv, a.assured_irrigation_achv, a.no_irrigation_achv, a.no_crop_achv, a.single_crop_achv, a.double_crop_achv, a.multiple_crop_achv, a.total_income_achv, a.gross_cropped_area_achv ORDER BY p.proj_name
getBaselineUpadateAchievement=With LandData AS (select m.proj_id, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 5 THEN crop_area ELSE 0.0000 END), 0.0000) AS cultivable_wasteland, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 6 THEN crop_area ELSE 0.0000 END), 0.0000) AS degraded_land, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 7 THEN crop_area ELSE 0.0000 END), 0.0000) AS rainfed, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 9 THEN crop_area ELSE 0.0000 END), 0.0000) AS others, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 22 THEN crop_area ELSE 0.0000 END), 0.0000) AS protective_irrigation, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 23 THEN crop_area ELSE 0.0000 END), 0.0000) AS assured_irrigation, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 24 THEN crop_area ELSE 0.0000 END), 0.0000) AS no_irrigation, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 10 THEN area ELSE 0.0000 END), 0.0000) AS no_crop, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 11 THEN crop_area ELSE 0.0000 END), 0.0000) AS single_crop, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 12 THEN crop_area ELSE 0.0000 END), 0.0000) AS double_crop, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 13 THEN crop_area ELSE 0.0000 END), 0.0000) AS multiple_crop, COALESCE(SUM(crop_production * avg_income * crop_area), 0.0000) AS total_income, COALESCE(SUM(crop_area), 0.0000) AS gross_cropped_area from bls_out_main m join bls_out_detail d on m.bls_out_main_id_pk = d.bls_out_main_id join m_bls_outcome o on o.m_bls_out_id_pk=d.classification_land_id left join bls_out_detail_crop c on d.bls_out_detail_id_pk = c.bls_out_detail_id where m.status = 'C' group by m.proj_id), AchievementData AS (select m.proj_id, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 5 THEN crop_area ELSE 0.0000 END), 0.0000) AS cultivable_wasteland_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 6 THEN crop_area ELSE 0.0000 END), 0.0000) AS degraded_land_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 7 THEN crop_area ELSE 0.0000 END), 0.0000) AS rainfed_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 9 THEN crop_area ELSE 0.0000 END), 0.0000) AS others_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 22 THEN crop_area ELSE 0.0000 END), 0.0000) AS protective_irrigation_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 23 THEN crop_area ELSE 0.0000 END), 0.0000) AS assured_irrigation_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 24 THEN crop_area ELSE 0.0000 END), 0.0000) AS no_irrigation_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 10 THEN crop_area ELSE 0.0000 END), 0.0000) AS no_crop_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 11 THEN crop_area ELSE 0.0000 END), 0.0000) AS single_crop_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 12 THEN crop_area ELSE 0.0000 END), 0.0000) AS double_crop_achv, COALESCE(SUM(CASE WHEN o.m_bls_out_id_pk = 13 THEN crop_area ELSE 0.0000 END), 0.0000) AS multiple_crop_achv, COALESCE(SUM(crop_production * avg_income * crop_area), 0.0000) AS total_income_achv, COALESCE(SUM(crop_area), 0.0000) AS gross_cropped_area_achv from bls_out_main_achiev m join bls_out_detail_achiev d ON m.bls_out_main_id_pk = d.bls_out_main_id join m_bls_outcome o on o.m_bls_out_id_pk=d.classification_land_id left join bls_out_detail_crop_achiev c ON d.bls_out_detail_id_pk = c.bls_out_detail_id where m.status = 'C' group by m.proj_id) Select p.proj_name as projname, p.proj_id as projid, COALESCE(l.cultivable_wasteland, 0.0000) AS cultivable_wasteland, COALESCE(a.cultivable_wasteland_achv, 0.0000) AS cultivable_wasteland_achv, COALESCE(l.degraded_land, 0.0000) AS degraded_land, COALESCE(a.degraded_land_achv, 0.0000) AS degraded_land_achv, COALESCE(l.rainfed, 0.0000) AS rainfed, COALESCE(a.rainfed_achv, 0.0000) AS rainfed_achv, COALESCE(l.others, 0.0000) AS others, COALESCE(a.others_achv, 0.0000) AS others_achv, COALESCE(cast(l.total_income as numeric(20,2)), 0.0000) AS total_income, COALESCE(cast(a.total_income_achv as numeric(20,2)), 0.0000) AS total_income_achv, COALESCE(l.gross_cropped_area, 0.0000) AS gross_cropped_area, COALESCE(a.gross_cropped_area_achv, 0.0000) AS gross_cropped_area_achv, COALESCE(l.protective_irrigation, 0.0000) AS protective_irrigation, COALESCE(a.protective_irrigation_achv, 0.0000) AS protective_irrigation_achv, COALESCE(l.assured_irrigation, 0.0000) AS assured_irrigation, COALESCE(a.assured_irrigation_achv, 0.0000) AS assured_irrigation_achv, COALESCE(l.no_irrigation, 0.0000) AS no_irrigation, COALESCE(a.no_irrigation_achv, 0.0000) AS no_irrigation_achv, COALESCE(l.no_crop, 0.0000) AS no_crop, COALESCE(a.no_crop_achv, 0.0000) AS no_crop_achv, COALESCE(l.single_crop, 0.0000) AS single_crop, COALESCE(a.single_crop_achv, 0.0000) AS single_crop_achv, COALESCE(l.double_crop, 0.0000) AS double_crop, COALESCE(a.double_crop_achv, 0.0000) AS double_crop_achv, COALESCE(l.multiple_crop, 0.0000) AS multiple_crop, COALESCE(a.multiple_crop_achv, 0.0000) AS multiple_crop_achv FROM iwmp_m_project p JOIN LandData l on p.proj_id = l.proj_id JOIN AchievementData a on p.proj_id = a.proj_id WHERE p.proj_id=:pCode GROUP BY p.proj_name,p.proj_id, l.cultivable_wasteland, l.degraded_land, l.rainfed, l.others, l.protective_irrigation, l.assured_irrigation, l.no_irrigation, l.no_crop, l.single_crop, l.double_crop, l.multiple_crop, l.total_income, l.gross_cropped_area, a.cultivable_wasteland_achv, a.degraded_land_achv, a.rainfed_achv, a.others_achv, a.protective_irrigation_achv, a.assured_irrigation_achv, a.no_irrigation_achv, a.no_crop_achv, a.single_crop_achv, a.double_crop_achv, a.multiple_crop_achv, a.total_income_achv, a.gross_cropped_area_achv ORDER BY p.proj_name
saveBaselineAchievementAsDraft=select save_baseline_update_achievement_as_draft(:pCode,:finYr,:month,:sentFrom,:sentTo,:createdBy,:requestIp,:bls,:gross,:grossachiv,:total,:totalachiv,:cultivable,:cultivableachiv,:degraded,:degradedachiv,:rainfedc,:rainfedachiv,:otherc,:othersachiv,:protective,:protectiveachiv,:assured,:assuredachiv,:noirri,:noirriachiv,:single,:singleachiv,:doublec,:doubleachiv,:multiple,:multipleachiv,:nocrop,:nocropachiv) 
viewBaselinAchievementNewMovement=select achievement_id as achievementid, projectdesc, (case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end) as status, (case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end) as currentlyat, remarks, finyrdesc, usertype, monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id, proj.proj_name as projectdesc, LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus, LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid, LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyrdesc, (select case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end from iwmp_user_reg where reg_id=:regId) as userType, mon.month_name as monthdesc, ach.status as achstatus from wdcpmksy_baselineupdate_achievement_tranx tranx, wdcpmksy_baselineupdate_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and ach.status !='C'  and tranx.achievement_id in (select distinct tt.achievement_id from wdcpmksy_baselineupdate_achievement_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id,tranx.sent_on desc) a, iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc,finyrdesc
checkAlreadyForwardedBaselineAchievement = from WdcpmksyBaselineupdateAchievementTranx where (iwmpUserRegBySentfrom.regId=:regId or iwmpUserRegBySentTo.regId=:regId ) and wdcpmksyBaselineupdateAchievement.achievementId=:achId order by senton desc
getUserToRejectBaselineupdateAchievement = select reg_id from iwmp_user_reg where reg_id in (select sent_from from wdcpmksy_baselineupdate_achievement_tranx where achievement_id=:achId ) and user_type='PI'
viewBaselineAchievementMovement=select achievement_id as achievementid, projectdesc, (case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end) as status, (case when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end) as currentlyat, remarks, finyrdesc, usertype, monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id,proj.proj_name as projectdesc, LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus, LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  regid , LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id,tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )  remarks,yr.fin_yr_desc as finyrdesc, (select (case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end) from iwmp_user_reg where reg_id=:regId) as userType, mon.month_name as monthdesc, ach.status as achstatus from wdcpmksy_baselineupdate_achievement_tranx tranx, wdcpmksy_baselineupdate_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and tranx.achievement_id in (select distinct tt.achievement_id from wdcpmksy_baselineupdate_achievement_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id,tranx.sent_on desc) a,iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc, finyrdesc
viewCompletedBaselineAchievement=select achievement_id as achievementid, projectdesc, (case when a.tranxstatus='R' and a.achstatus='D' then 'Rejected' when a.tranxstatus='F' and a.achstatus='D' then 'Pending' else 'Completed' end) as status, (case  when reg.user_type='PI' then 'PIA' when reg.user_type='DI' then 'District' else 'SLNA' end) as currentlyat, remarks, finyrdesc, usertype, monthdesc from (select DISTINCT ON (tranx.achievement_id) tranx.achievement_id, proj.proj_name as projectdesc, LAST_VALUE(action) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) tranxstatus,LAST_VALUE(sent_to) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) regid, LAST_VALUE(tranx.remarks) OVER(PARTITION BY tranx.achievement_id ORDER BY tranx.achievement_id, tranx.sent_on RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) remarks, yr.fin_yr_desc as finyrdesc, (select (case when user_type='PI' then 'PIA' when user_type='DI' then 'District' else 'SLNA' end) from iwmp_user_reg where reg_id=:regId) as userType, mon.month_name as monthdesc, ach.status as achstatus from wdcpmksy_baselineupdate_achievement_tranx tranx, wdcpmksy_baselineupdate_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd and ach.status = 'C' and tranx.achievement_id in(select distinct tt.achievement_id from wdcpmksy_baselineupdate_achievement_tranx tt where sent_from=:regId or sent_to=:regId) and mon.month_id=ach.month_id order by tranx.achievement_id, tranx.sent_on desc) a, iwmp_user_reg reg where regid=reg.reg_id order by achievement_id, projectdesc, finyrdesc
getBaselineUpdateAchievementDetails = from WdcpmksyBaselineupdateAchievementDetail ach where ach.wdcpmksyBaselineupdateAchievement.achievementId=:achievementid
getBaselineupdateAchievementMovementDetails=select  cast(ach.achievement_id as Integer) as achievementid, proj.proj_name as projectdesc, (case when ach.status='D' and tranx.action='R' then 'Rejected' when ach.status='D' then 'Pending' else 'Completed' end) as status, (select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI' then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end) ||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st,iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_from)as sentfrom, ( select distinct (case when user_type='DI' then 'WCDC '||dist.dist_name when user_type='PI' then ('PIA '||dist.dist_name) else 'SLNA '||st.st_name end)||'('||user_id||')' from iwmp_user_reg reg, iwmp_user_map map,iwmp_state st,iwmp_district dist where ((map.dcode is not null and dist.dcode=map.dcode) or (map.dcode is null and st.st_code=map.st_code)) and reg.reg_id=map.reg_id and dist.st_code=st.st_code and reg.reg_id=tranx.sent_to) as sentto, case when tranx.remarks is null then 'Forwarded to '||case when reg.user_type='DI' then 'District' else 'SLNA' end ||' for Approval' else tranx.remarks end as remarks,tranx.sent_on as senton,yr.fin_yr_desc as finyrdesc,tranx.action,mon.month_name as monthdesc from wdcpmksy_baselineupdate_achievement_tranx tranx, iwmp_user_reg reg, wdcpmksy_baselineupdate_achievement ach, iwmp_m_project proj, iwmp_m_fin_year yr, iwmp_m_month mon where ach.month_id=mon.month_id and tranx.sent_to=reg.reg_id and tranx.achievement_id=:achievementid and tranx.achievement_id=ach.achievement_id and ach.proj_id = proj.proj_id and ach.fin_yr_cd=yr.fin_yr_cd order by ach.achievement_id, proj.proj_name,yr.fin_yr_desc, tranx.sent_on desc


#getAdditionalfineyearmont23=select fin_yr_cd, fin_yr_desc as finyear from iwmp_m_fin_year where fin_yr_cd=23
getAdditionalfineyearmont23=select fin_yr_cd, fin_yr_desc as finyear from wdcpmksy_additional_m_fin_year where fin_yr_cd not in(select fin_yr_cd from wdcpmksy_additional_brought_farmer_crop where proj_id=:projid and achiev_type='Month-Wise' and status ='C'  and month_id=3 ) and fin_yr_cd in(22,23) and achiev_status is null
#getAdditionalfineyearmontgt23=select fin_yr_cd, fin_yr_desc as finyear from iwmp_m_fin_year where fin_yr_cd not in(select fin_yr_cd from wdcpmksy_additional_brought_farmer_crop where proj_id=:projid and achiev_type='Month-Wise' and month_id=3 and  month_id=9 and status ='C') and fin_yr_cd>23 order by fin_yr_cd limit 1
getAdditionalfineyearmontgt23=select fin_yr_cd, fin_yr_desc as finyear from wdcpmksy_additional_m_fin_year where fin_yr_cd not in(select fin_yr_cd from wdcpmksy_additional_brought_farmer_crop where proj_id=:projid and achiev_type='Month-Wise' and month_id=3 and  month_id=9 and status ='C') and fin_yr_cd>23 and achiev_status is null order by fin_yr_cd 
getFinYearonward22=select year from IwmpMFinYear year where achievStatus is null order by finYrCd

#getAdditionalfineyear=select fin_yr_cd, fin_yr_desc as finyear from iwmp_m_fin_year where fin_yr_cd not in(select fin_yr_cd from wdcpmksy_additional_brought_farmer_crop where proj_id=:projid and achiev_type='Year-Wise' and status ='C' and fin_yr_cd not in (select max(fin_yr_cd) from iwmp_m_fin_year )) and fin_yr_cd>22 
getAdditionalfineyear=select fin_yr_cd, fin_yr_desc as finyear from wdcpmksy_additional_m_fin_year where fin_yr_cd not in(select fin_yr_cd from wdcpmksy_additional_brought_farmer_crop where proj_id=:projid and achiev_type='Year-Wise' and status ='C' and fin_yr_cd not in (select max(fin_yr_cd) from wdcpmksy_additional_m_fin_year )) and fin_yr_cd not in (select fin_yr_cd from wdcpmksy_additional_m_fin_year where achiev_status='C') order by fin_yr_cd desc
#getFinYearonward22=select year from IwmpMFinYear year where finYrCd>22 order by finYrCd

getAdditionalBroughtFarmerCropDraft=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select m.month_name from iwmp_m_month m where month_id = d.month_id) as month, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.diversified, d.chnagesingle, d.farmer_income, d.change_corp, d.status, d.pulses, d.oilseeds from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.month_id=:month and d.status = 'D'
#getAdditionalBroughtFarmerCropComplete=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select m.month_name from iwmp_m_month m where month_id = d.month_id) as month, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.diversified, d.chnagesingle, d.farmer_income, d.change_corp, d.status, achiev_type from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.status = 'C' order by project, finyear, achiev_type
getAdditionalBroughtFarmerCropComplete=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select m.month_name from iwmp_m_month m where month_id = d.month_id) as month, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.diversified, d.chnagesingle, d.farmer_income, d.change_corp, d.status, achiev_type, d.pulses, d.oilseeds from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.status = 'C' order by project, finyear, achiev_type
getAdditionalBroughtfyDraft=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.farmer_income, d.change_corp, d.status from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.status='D' and achiev_type='Year-Wise'
#getAdditionalBroughtMonyDraft=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.diversified, d.chnagesingle, d.status from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.month_id=:month and d.status='D' and achiev_type='Month-Wise'
getAdditionalBroughtMonyDraft=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.diversified, d.chnagesingle, d.status, d.pulses, d.oilseeds from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.month_id=:month and d.status='D' and achiev_type='Month-Wise'
#getAdditionalBroughtMonthComplt=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select m.month_name from iwmp_m_month m where month_id = d.month_id) as month, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.diversified, d.chnagesingle, d.status from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.month_id=:month and d.status = 'C'
getAdditionalBroughtMonthComplt=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select m.month_name from iwmp_m_month m where month_id = d.month_id) as month, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.diversified, d.chnagesingle, d.status, d.pulses, d.oilseeds from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.month_id=:month and d.status = 'C'
getAdditionalBroughtYearComplt=select d.additional_brought_id, proj_id, (select p.proj_name from iwmp_m_project p where proj_id = d.proj_id) as project, (select f.fin_yr_desc from iwmp_m_fin_year f where fin_yr_cd = d.fin_yr_cd) as finyear, d.farmer_income, d.change_corp, d.status from wdcpmksy_additional_brought_farmer_crop d where d.proj_id=:projectId and d.fin_yr_cd=:year and d.status = 'C' and achiev_type='Year-Wise'

stateWiseAdditionalAchParameter=select d.dcode, d.dist_name, (select count(p.proj_id) from iwmp_m_project p where d.dcode = p.dcode )as total_proj, (select count(distinct c.proj_id) from wdcpmksy_additional_brought_farmer_crop c, iwmp_m_project pl  where c.achiev_type = 'Year-Wise' and c.proj_id = pl.proj_id and pl.dcode=d.dcode and c.status='C' and c.fin_yr_cd = :finyr) as yearly, (select count(distinct c.proj_id) from wdcpmksy_additional_brought_farmer_crop c, iwmp_m_project pl where c.achiev_type = 'Month-Wise' and c.proj_id = pl.proj_id and pl.dcode=d.dcode and c.status='C' and c.fin_yr_cd = :finyr) as half_yearly, (select count(p.proj_id) from iwmp_m_project p where d.dcode = p.dcode) - (select count(distinct c.proj_id) from wdcpmksy_additional_brought_farmer_crop c, iwmp_m_project pl  where c.achiev_type = 'Year-Wise' and c.proj_id = pl.proj_id and pl.dcode=d.dcode and c.status='C' and c.fin_yr_cd = :finyr) as not_yearly, (select count(p.proj_id) from iwmp_m_project p where d.dcode = p.dcode) - (select count(distinct c.proj_id) from wdcpmksy_additional_brought_farmer_crop c, iwmp_m_project pl  where c.achiev_type = 'Month-Wise' and c.proj_id = pl.proj_id and pl.dcode=d.dcode and c.status = 'C' and c.fin_yr_cd = :finyr) as not_half_yearly from iwmp_district d where d.st_code = :stateCode and dist_proj is true

getnotyearlyProj=select distinct proj_name as project from iwmp_m_project p where p.proj_id not in (select proj_id from wdcpmksy_additional_brought_farmer_crop where achiev_type = 'Year-Wise' and status = 'C' and fin_yr_cd = :finyr) and p.dcode =  :dcode order by proj_name
getnothalfyearlyProj=select distinct proj_name as project from iwmp_m_project p where p.proj_id not in (select proj_id from wdcpmksy_additional_brought_farmer_crop where achiev_type = 'Month-Wise' and status = 'C' and fin_yr_cd = :finyr) and p.dcode = :dcode order by proj_name
 
getAllStateTarAchReport=select distinct head_code, head_desc, hseq_no, c.activity_code, activity_desc, aseq_no,COALESCE(d.achievement,0.00) as achievement, unitname, COALESCE(e.target,0.00) as plan from (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc,  act.seq_no as aseq_no, unit_desc as unitname from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u where h.head_code=act.head_code and act.unit_code=u.unit_code) c  left join  (select det.activity_code, coalesce(sum(achievement),0.00) as achievement from wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach where det.achievement_id=ach.achievement_id and proj_id in (select proj_id from iwmp_m_project where dcode in (select dcode from iwmp_district where st_code in (select st_code from iwmp_state where wdcpmksy=1))) and fin_yr_cd =(case when :fromYear=0 then fin_yr_cd else :fromYear end) and upper(status) ='C' group by activity_code) d on c.activity_code= d.activity_code left join	(select sum( qty_planned) as target, phy_activity_code from  iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C'  and  p.planid = dD.planid and proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code in (select st_code from iwmp_state where wdcpmksy=1))) and p.fin_yr_cd =(case when :fromYear=0 then p.fin_yr_cd else :fromYear end) group by  phy_activity_code ) e on c.activity_code=e.phy_activity_code order by hseq_no, aseq_no
getAllDistrictTarAchReport=select distinct head_code, head_desc, hseq_no, c.activity_code, activity_desc, aseq_no,COALESCE(d.achievement,0.00) as achievement, unitname, COALESCE(e.target,0.00) as plan from (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc,  act.seq_no as aseq_no, unit_desc as unitname from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u where h.head_code=act.head_code and act.unit_code=u.unit_code) c  left join  (select det.activity_code, coalesce(sum(achievement),0.00) as achievement from wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach where det.achievement_id=ach.achievement_id and proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=(case when :stcode=0 then st_code else :stcode end))) and fin_yr_cd =(case when :fromYear=0 then fin_yr_cd else :fromYear end) and upper(status) ='C' group by activity_code) d on c.activity_code= d.activity_code  left join	(select sum( qty_planned) as target, phy_activity_code from  iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C' and  p.planid = dD.planid and proj_id in (select proj_id from iwmp_m_project where dcode in (select dcode from iwmp_district where st_code=(case when :stcode=0 then st_code else :stcode end))) and p.fin_yr_cd =(case when :fromYear=0 then p.fin_yr_cd else :fromYear end)  group by  phy_activity_code ) e on c.activity_code=e.phy_activity_code order by hseq_no, aseq_no
getAllProjectTarAchReport=select distinct head_code, head_desc, hseq_no, c.activity_code, activity_desc, aseq_no,COALESCE(d.achievement,0.00) as achievement, unitname, COALESCE(e.target,0.00) as plan from (select h.head_code, h.head_desc, h.seq_no as hseq_no, act.activity_code, act.activity_desc,  act.seq_no as aseq_no, unit_desc as unitname from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u where h.head_code=act.head_code and act.unit_code=u.unit_code) c  left join  (select det.activity_code, coalesce(sum(achievement),0.00) as achievement from wdcpmksy_project_phy_ach_details det, wdcpmksy_project_phy_achievement ach where det.achievement_id=ach.achievement_id and proj_id in (select proj_id from iwmp_m_project where dcode=(case when :dcode=0 then dcode else :dcode end)) and fin_yr_cd =(case when :fromYear=0 then fin_yr_cd else :fromYear end) and upper(status) ='C' group by activity_code) d  on c.activity_code= d.activity_code  left join (select sum( qty_planned) as target, phy_activity_code from iwmp_project_physical_aap dD, iwmp_project_physical_plan p where upper(p.status) ='C'  and  p.planid = dD.planid and proj_id in (select proj_id from iwmp_m_project where dcode=(case when :dcode=0 then dcode else :dcode end)) and p.fin_yr_cd =(case when :fromYear=0 then p.fin_yr_cd else :fromYear end)  group by  phy_activity_code ) e on c.activity_code=e.phy_activity_code order by hseq_no, aseq_no
getProjectTarAchReport=SELECT DISTINCT head_code,head_desc,hseq_no,c.activity_code,activity_desc,aseq_no,COALESCE(d.achievement, 0.00) AS achievement,unitname,COALESCE(e.target, 0.00) AS plan FROM(SELECT h.head_code,h.head_desc,h.seq_no AS hseq_no,act.activity_code,act.activity_desc,act.seq_no AS aseq_no,unit_desc AS unitname FROM iwmp_m_phy_activity act JOIN iwmp_m_phy_heads h ON h.head_code = act.head_code JOIN iwmp_m_unit u ON act.unit_code = u.unit_code) c LEFT JOIN (SELECT det.activity_code, sum(achievement) as achievement FROM wdcpmksy_project_phy_ach_details det JOIN wdcpmksy_project_phy_achievement ach ON det.achievement_id = ach.achievement_id WHERE proj_id = (case when :projId=0 then proj_id else :projId end) AND fin_yr_cd = (case when :fromYear=0 then fin_yr_cd else :fromYear end) AND UPPER(status) = 'C' group by det.activity_code) d ON c.activity_code = d.activity_code LEFT JOIN (SELECT SUM(DISTINCT qty_planned) AS target, phy_activity_code FROM iwmp_project_physical_aap dD JOIN iwmp_project_physical_plan p ON p.planid = dD.planid WHERE UPPER(p.status) = 'C' AND proj_id = (case when :projId=0 then proj_id else :projId end) AND fin_yr_cd = (case when :fromYear=0 then fin_yr_cd else :fromYear end) GROUP BY phy_activity_code) e ON c.activity_code = e.phy_activity_code ORDER BY hseq_no, aseq_no;

getListofPhysicalActionAchiev=select iwmpMPhyActivity.activityCode as activitycode, iwmpMPhyActivity.activityDesc as activityname, iwmpMPhyActivity.iwmpMPhyHeads.headCode as headcode, iwmpMPhyActivity.iwmpMPhyHeads.headDesc as headname, iwmpMPhyActivity.iwmpMUnit.unitCode as unitcode, iwmpMPhyActivity.iwmpMUnit.unitDesc as unitname, achievement as plan from WdcpmksyProjectPhysicalAchievementDetails where  wdcpmksyProjectPhysicalAchievement.iwmpMProject.projectId=:projectcd and wdcpmksyProjectPhysicalAchievement.iwmpMFinYear.finYrCd=:yearcd order by iwmpMPhyActivity.activityCode, iwmpMPhyActivity.iwmpMPhyHeads.headCode

getMonthWiseDetailData = from IwmpMMonth

getStWiseFrmrIncme = select s.st_code as stcode, st_name as stname, cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) as finyrcd, sum(progcroparea) as progcroparea, cast(sum(perfrmrincm)/count(perfrmrincm) as numeric(10,2)) as progfrmrincome from incrmnt_infrmrincme_crparea inc, iwmp_district d, iwmp_state s where inc.dcode = d.dcode and d.st_code = s.st_code and cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) = case when 0 = :finyrcd then cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) else :finyrcd end and s.st_code = case when 0= :stcode then s.st_code else :stcode end group by s.st_code, finyrcd  order by st_name, finyrcd
getStAreaPercentgage = select s.st_code as stcode, st_name as stname, coalesce(cast(area/propsd_area*100 as numeric(10,2)),0) as prcntgarea from (select d.st_code, sum(area) as area from iwmp_district d, iwmp_m_project p,bls_out_main bm where p.dcode=d.dcode and p.proj_id=bm.proj_id and bm.status='C' group by d.st_code) as a join (select d.st_code, sum(area_proposed)  as propsd_area from iwmp_district d, iwmp_m_project p where status='C' and d.dcode=p.dcode group by d.st_code) as tar on a.st_code = tar.st_code right join iwmp_state s on tar.st_code = s.st_code where wdcpmksy =1 order by st_name
getTarIncmArea = select st_name as stname, a.* from (select d.st_code as stcode, wt.fin_yr_cd as finyrcd, sum(case when indicator_id = 24 then first_quad+second_quad+third_quad+fourth_quad end) as tarcropedArea, sum(case when indicator_id = 25 then first_quad+second_quad+third_quad+fourth_quad end) as tarfrmrincme from Wdcpmksy_Quad_Target wt, iwmp_m_project p, iwmp_district d where upper(wt.status) ='S'  and  wt.proj_id = p.proj_id and p.dcode=d.dcode and wt.fin_yr_cd = (case when :finyrcd = 0 then wt.fin_yr_cd else :finyrcd end) group by d.st_code, wt.fin_yr_cd) as a right join iwmp_state s on a.stcode=s.st_code order by st_name
getDistWiseFrmrIncme = select d.dcode , dist_name as distname, cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) as finyrcd, sum(progcroparea) as progcroparea, cast(sum(perfrmrincm)/count(perfrmrincm) as numeric(10,2)) as progfrmrincome from incrmnt_infrmrincme_crparea inc, iwmp_district d where inc.dcode = d.dcode and cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) = case when :finyrcd = 0 then cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) else :finyrcd end and d.st_code = :stcode group by d.dcode, finyrcd  order by dist_name, finyrcd
getProjWiseFrmrIncme =select dcode, projid, projname, progcroparea, perfrmrincm as progfrmrincome, cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) as finyrcd from incrmnt_infrmrincme_crparea where cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) = case when :finyrcd = 0 then cast(SUBSTRING(cast(date(createdon) as character varying),2,3) as integer) else :finyrcd end and dcode = :dcode order by projname, finyrcd

getHeadActivityDesc = select h.head_code as headcode, head_desc as headname,h.seq_no as headsequence, act.activity_code as activitycode, activity_desc as activityname, act.seq_no as activitysequence, unit_desc as unitname from iwmp_m_phy_activity act, iwmp_m_phy_heads h, iwmp_m_unit u where h.head_code=act.head_code and act.unit_code=u.unit_code order by headsequence, activitysequence

#getMappingNRMWorkwithOtherwor=from IwmpProjectAssetStatus pa where pa.iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end ) and pa.iwmpProjectPhysicalAsset.iwmpMFinYear.finYrCd = :fYear and pa.iwmpProjectPhysicalAsset.iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when :head = 0 then pa.iwmpProjectPhysicalAsset.iwmpMPhyActivity.iwmpMPhyHeads.headCode else :head end) and pa.iwmpProjectPhysicalAsset.iwmpMPhyActivity.activityCode=(case when :activity = 0 then pa.iwmpProjectPhysicalAsset.iwmpMPhyActivity.activityCode else :activity end) and pa.iwmpProjectPhysicalAsset.assetid not in(select iwmpProjectPhysicalAsset.assetid from WdcpmksyMappingNRMWorkOtherWork where iwmpMProject.projectId=:pCode) order by iwmpProjectPhysicalAsset.iwmpMPhyActivity.iwmpMPhyHeads.headDesc, iwmpProjectPhysicalAsset.iwmpMPhyActivity.activityDesc
getMappingNRMWorkwithOtherwor=from IwmpProjectPhysicalAsset pa where pa.iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end ) and pa.iwmpMFinYear.finYrCd = :fYear and pa.iwmpMPhyActivity.iwmpMPhyHeads.headCode=(case when :head = 0 then pa.iwmpMPhyActivity.iwmpMPhyHeads.headCode else :head end) and pa.iwmpMPhyActivity.activityCode=(case when :activity = 0 then pa.iwmpMPhyActivity.activityCode else :activity end) and pa.assetid not in(select iwmpProjectPhysicalAsset.assetid from WdcpmksyMappingNRMWorkOtherWork where iwmpMProject.projectId=:pCode) order by iwmpMPhyActivity.iwmpMPhyHeads.headDesc, iwmpMPhyActivity.activityDesc
getMappingNRMWorkwithOtherworid=from IwmpProjectPhysicalAsset pa where pa.assetid=:nrmwork and pa.assetid not in(select iwmpProjectPhysicalAsset.assetid from WdcpmksyMappingNRMWorkOtherWork where iwmpProjectPhysicalAsset.assetid=:nrmwork)

getepanrmstatusmapp=from WdcpmksyEpaWorkid pa where pa.status='C' and pa.iwmpMProject.projectId=(case :pCode when 0 then pa.iwmpMProject.projectId else :pCode end ) and pa.MEpaCoreactivity.epaActivityId=:activity  and pa.iwmpVillage.vcode=:villag and pa.assetid not in(select otherworkId from WdcpmksyMappingNRMWorkOtherWork where iwmpMProject.projectId=:pCode and otherHead='e')
getlivelihnrmstatusmapp=from WdcpmksyLivelihoodWorkid where status='C' and iwmpMProject.projectId=(case :pCode when 0 then iwmpMProject.projectId else :pCode end ) and MLivelihoodCoreactivity.livelihoodCoreactivityId=:activity  and iwmpVillage.vcode=:villag and assetid not in(select otherworkId from WdcpmksyMappingNRMWorkOtherWork where iwmpMProject.projectId=:pCode and otherHead='l')
getprodnrmstatusmapp=from WdcpmksyPrdouctionWorkid where status='C' and iwmpMProject.projectId=(case :pCode when 0 then iwmpMProject.projectId else :pCode end ) and MProductivityCoreactivity.productivityCoreactivityId=:activity  and iwmpVillage.vcode=:villag and assetid not in(select otherworkId from WdcpmksyMappingNRMWorkOtherWork where iwmpMProject.projectId=:pCode and otherHead='p')
insertnrmworkotherwork=INSERT INTO public.wdcpmksy_mapping_nrmwork_otherwork(proj_id, nrmwork_id, otherwork_id, other_head, status, created_by, created_dt, request_ip) VALUES (:pcode, :nrm, :other, :head, :status, :createdby, :createddt, :requestid) 
getCompletedNRMRelatedOtherWorkEPA=select nrmwork_id, (select head_desc from iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_project_physical_asset l where a.head_code=h.head_code and a.activity_code=l.phy_activity_code and l.assetid=w.nrmwork_id) as headname, (select activity_desc from iwmp_m_phy_activity a, iwmp_project_physical_asset l where a.activity_code=l.phy_activity_code and l.assetid=w.nrmwork_id) as activityname, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v, iwmp_project_physical_asset l where b.bcode=g.bcode and g.gcode=v.gcode and v.vcode=l.vcode and l.assetid=w.nrmwork_id) as blockname, (select gram_panchayat_name from iwmp_gram_panchayat g, iwmp_village v, iwmp_project_physical_asset l where g.gcode=v.gcode and v.vcode=l.vcode and l.assetid=w.nrmwork_id) as grampanchayatname, (select village_name from iwmp_village v, iwmp_project_physical_asset l where v.vcode=l.vcode and l.assetid=w.nrmwork_id) as villagename, otherwork_id, (select epa_desc from m_epa_coreactivity m, wdcpmksy_epa_workid e where m.epa_activity_id=e.epa_activity_id and e.assetid=w.otherwork_id) as epaact from wdcpmksy_mapping_nrmwork_otherwork w where status=true and proj_id=:projid and other_head='e' order by headname, activityname, epaact
getCompletedNRMRelatedOtherWorkProduction=select nrmwork_id, (select head_desc from iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_project_physical_asset l where a.head_code=h.head_code and a.activity_code=l.phy_activity_code and l.assetid=w.nrmwork_id) as headname, (select activity_desc from iwmp_m_phy_activity a, iwmp_project_physical_asset l where a.activity_code=l.phy_activity_code and l.assetid=w.nrmwork_id) as activityname, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v, iwmp_project_physical_asset l where b.bcode=g.bcode and g.gcode=v.gcode and v.vcode=l.vcode and l.assetid=w.nrmwork_id) as blockname, (select gram_panchayat_name from iwmp_gram_panchayat g, iwmp_village v, iwmp_project_physical_asset l where g.gcode=v.gcode and v.vcode=l.vcode and l.assetid=w.nrmwork_id) as grampanchayatname, (select village_name from iwmp_village v, iwmp_project_physical_asset l where v.vcode=l.vcode and l.assetid=w.nrmwork_id) as villagename, otherwork_id, (select productivity_coreactivity_desc from m_productivity_coreactivity m, wdcpmksy_prdouction_workid e where m.productivity_coreactivity_id=e.productivity_coreactivity_id and e.assetid=w.otherwork_id) as epaact from wdcpmksy_mapping_nrmwork_otherwork w where status=true and proj_id=:projid and other_head='p' order by headname, activityname, epaact
getCompletedNRMRelatedOtherWorkLivelihood=select nrmwork_id, (select head_desc from iwmp_m_phy_activity a, iwmp_m_phy_heads h, iwmp_project_physical_asset l where a.head_code=h.head_code and a.activity_code=l.phy_activity_code and l.assetid=w.nrmwork_id) as headname, (select activity_desc from iwmp_m_phy_activity a, iwmp_project_physical_asset l where a.activity_code=l.phy_activity_code and l.assetid=w.nrmwork_id) as activityname, (select block_name from iwmp_block b, iwmp_gram_panchayat g, iwmp_village v, iwmp_project_physical_asset l where b.bcode=g.bcode and g.gcode=v.gcode and v.vcode=l.vcode and l.assetid=w.nrmwork_id) as blockname, (select gram_panchayat_name from iwmp_gram_panchayat g, iwmp_village v, iwmp_project_physical_asset l where g.gcode=v.gcode and v.vcode=l.vcode and l.assetid=w.nrmwork_id) as grampanchayatname, (select village_name from iwmp_village v, iwmp_project_physical_asset l where v.vcode=l.vcode and l.assetid=w.nrmwork_id) as villagename, otherwork_id, (select livelihood_coreactivity_desc from m_livelihood_coreactivity m, wdcpmksy_livelihood_workid e where m.livelihood_coreactivity_id=e.livelihood_coreactivity_id and e.assetid=w.otherwork_id) as epaact from wdcpmksy_mapping_nrmwork_otherwork w where status=true and proj_id=:projid and other_head='l' order by headname, activityname, epaact

getShgDetails=select m.shg_id, d.name,ds.scheme_description, to_char(d.reg_date, 'DD/MM/YYYY') as reg_date,coalesce(d.status,'A') as status,d.account_detail,d.ifsc_code,  d.shg_detail_id from shg_detail d, shg_main m, m_department_scheme ds where m.shg_id = d.shg_id and ds.department_scheme_id_pk=d.department_scheme_id and m.group_type=:grp and m.proj_id=:projId and m.status='C' order by d.name

getShgAccountReport=select st_code, st_name, (select count(proj_id) from iwmp_m_project p, iwmp_district d where s.st_code=d.st_code and p.dcode=d.dcode) as totalproject, COALESCE((select sum(totalno) from  iwmp_district d, iwmp_m_project p, shg_main t where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and group_type in('oldSHG', 'newSHG') ),0) as no_of_shg,COALESCE((select count(account_detail) from  iwmp_district d, iwmp_m_project p, shg_main t, shg_detail sd where s.st_code=d.st_code and d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and group_type in('oldSHG', 'newSHG') and t.shg_id=sd.shg_id and sd.status='C' ),0) as no_of_shg_entered from iwmp_state s where wdcpmksy=1 order by st_name, st_code
getDistShgAccountReport=select  d.dcode, d.dist_name,(select count(proj_id) from iwmp_m_project p where p.dcode=d.dcode) as totalproject,coalesce((select sum(totalno) from iwmp_m_project p, shg_main t where d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and group_type in('oldSHG', 'newSHG')),0) as no_of_shg,COALESCE((select count(account_detail) from iwmp_m_project p, shg_main t, shg_detail sd where d.dcode=p.dcode and p.proj_id=t.proj_id and t.status='C' and group_type in('oldSHG', 'newSHG') and t.shg_id=sd.shg_id and sd.status='C' ),0) as no_of_shg_entered from iwmp_district d where d.st_code=:stcode and d.dist_proj=true order by d.dist_name, d.dcode
getProjShgAccountReport=select p.proj_name,coalesce((select sum(totalno) from shg_main t where p.proj_id=t.proj_id and t.status='C' and group_type in('oldSHG', 'newSHG')),0) as no_of_shg,COALESCE((select count(account_detail) from shg_main t, shg_detail sd where p.proj_id=t.proj_id and t.status='C' and group_type in('oldSHG', 'newSHG') and t.shg_id=sd.shg_id and sd.status='C' ),0) as no_of_shg_entered from iwmp_m_project p where p.dcode=:dcode order by p.proj_name

getStatusSHG=WITH Project AS (select dcode, COUNT(DISTINCT proj_id) AS proj from iwmp_m_project group by dcode), TotalSHG AS (select p.dcode, count(CASE WHEN group_type ='oldSHG' THEN sd.shg_id END) AS oldshg, count(CASE WHEN group_type ='newSHG' THEN sd.shg_id END) AS newshg from iwmp_m_project p join shg_main t ON p.proj_id=t.proj_id join shg_detail sd ON t.shg_id=sd.shg_id where t.status='C' group by p.dcode), EnteredSHG AS (select p.dcode, COUNT(CASE WHEN group_type ='oldSHG' THEN account_detail END) AS oldshg, COUNT(CASE WHEN group_type ='newSHG' THEN account_detail END) AS newshg from iwmp_m_project p join shg_main t ON p.proj_id=t.proj_id join shg_detail sd ON t.shg_id=sd.shg_id and t.status='C' and sd.status='C' group by p.dcode) SELECT dist_name, d.dcode, cast(COALESCE(tp.proj ,0) as Integer) as totproj, cast(COALESCE(ts.oldshg ,0) as Integer) as totalshg_old, cast(COALESCE(ts.newshg ,0) as Integer) as totalshg_new, cast(COALESCE(es.oldshg ,0) as Integer) as enteredshg_old, cast(COALESCE(es.newshg ,0) as Integer) as enteredshg_new, cast(COALESCE(ts.oldshg,0)-COALESCE(es.oldshg ,0) as Integer) as remaining_old, cast(COALESCE(ts.newshg,0)-COALESCE(es.newshg ,0) as Integer) as remaining_new FROM iwmp_district d LEFT JOIN Project tp ON tp.dcode = d.dcode LEFT JOIN TotalSHG ts ON ts.dcode = d.dcode LEFT JOIN EnteredSHG es ON es.dcode = d.dcode WHERE dist_proj = 'true' and st_code=:stcd ORDER BY dist_name
getRemainingSHG=select proj_name, d.name, ds.scheme_description, to_char(d.reg_date, 'DD/MM/YYYY') as reg_date from iwmp_m_project p join shg_main m ON p.proj_id=m.proj_id join shg_detail d ON m.shg_id=d.shg_id join m_department_scheme ds on ds.department_scheme_id_pk=d.department_scheme_id where m.group_type = :type and (d.status<>'C' or d.status is null) and m.status='C' and dcode = :dcode order by proj_name, d.name, ds.scheme_description

getListOfConvergenceWorks = select cast(a.assetid as BIGINT) as workcode,head_desc as headname, activity_desc as actname, status, achievement, unit_desc as unitname, cnvrgwrkid, cnvrgstatus, schemename, expndwdc, expndcnvrgsch,  coalesce(cvrgdcstatus,'A') as cvrgdcstatus from (select convergence_work_id as cnvrgwrkid, assetid,cnvrgnce_status as cnvrgstatus,scheme_name as schemename,expndtr_wdc2 as expndwdc, expndtr_cnvrgd_scheme as expndcnvrgsch, status as cvrgdcstatus from convergence_work_detail cwd, iwmp_m_convergence_scheme mcs where cwd.scheme_id = mcs.scheme_id and cwd.status != 'C') c right join (select distinct fa.assetid,phy_activity_code, act.activity_code, head_desc, activity_desc, unit_desc, (case when ach.status = 'C' then 'Completed' when ach.status = 'O' then 'Ongoing' else 'Foreclosed' end) status, (select coalesce(sum(achievement),0.00)  from wdcpmksy_project_phy_asset_achievement det where det.asset_id=fa.assetid) as achievement from iwmp_project_asset_status ach,iwmp_project_physical_asset fa, iwmp_m_phy_heads h, iwmp_m_phy_activity act, iwmp_m_unit u where fa.assetid=ach.assetid and fa.phy_activity_code = act.activity_code and h.head_code=act.head_code and act.unit_code=u.unit_code and proj_id =:projid and convergence='Y') a on a.assetid = c.assetid order by headname, actname
getMEpaCoreactivity=from MEpaCoreactivity e order by e.epaDesc
getMLiveCoreactivity=from MLivelihoodCoreactivity order by livelihoodCoreactivityDesc
getMProdCoreactivity=from MProductivityCoreactivity  order by productivityCoreactivityDesc
getConvergenceStatus = select statusid, cast(ppa.assetid as BigInt) as workcode, block_name as blockname, gram_panchayat_name as gpname, village_name as villagename, convergence as cnvrgncestatus from iwmp_project_asset_status pas, iwmp_project_physical_asset ppa, iwmp_village v, iwmp_gram_panchayat gp, iwmp_block b, iwmp_m_phy_activity p where pas.assetid not in(select assetid from convergence_work_detail) and pas.assetid = ppa.assetid and ppa.vcode = v.vcode and v.gcode = gp.gcode and gp.bcode = b.bcode and ppa.phy_activity_code = p.activity_code and pas.status = 'C' and pas.projid =:projId  and p.activity_code =(case when 0=:activity then p.activity_code else :activity end) and p.head_code =  (case when 0=:head then p.head_code else :head end) order by blockname, gpname, villagename, workcode

getMEpaCoreactivityByproject=select epa_activity_id, epa_desc from m_epa_coreactivity where epa_activity_id in (select epa_activity_id from epa_detail where status='C' and lep_id in(select lep_id from livelihood_epa_prod where head_type='epa' and proj_id=:projcd)) order by epa_desc
getMLiveCoreactivityByproject=select livelihood_coreactivity_id, livelihood_coreactivity_desc from m_livelihood_coreactivity where livelihood_coreactivity_id in (select livelihood_coreactivity_id from livelihood_detail where status='C' and lep_id in(select lep_id from livelihood_epa_prod where head_type='livelihood' and proj_id=:projcd)) order by livelihood_coreactivity_desc
getMProdCoreactivityByproject=select productivity_coreactivity_id, productivity_coreactivity_desc from m_productivity_coreactivity where productivity_coreactivity_id in (select livelihood_coreactivity_id from production_detail where status='C' and lep_id in(select lep_id from livelihood_epa_prod where head_type='production' and proj_id=:projcd)) order by productivity_coreactivity_desc

getPEData=select s.st_name, s.st_code, cast(count(distinct(d.dcode)) as int) as district, cast(count(p.proj_id) as int) as project, sum(area_proposed) as sanctioned_area, sum(project_cost) as sanctioned_cost, sum(central_share_amt) as central, sum(state_share_amt) as state, cast((select count(v.village_name) as villagename  from iwmp_village v, iwmp_project_location l, iwmp_m_project p, iwmp_project_wc wc, iwmp_m_wc w, iwmp_district d where v. vcode=l.vcode and l.proj_id=p.proj_id and l.proj_location_id=wc.proj_location_id  and w.wc_id=wc.wc_id and l.proj_id=w.proj_id and l.status='true' and wc.status='true'  and d.dcode=:dcode  and p.proj_id=:pcode)as integer) as no_vc,cast((select count(w.wcname)  from iwmp_m_project as p,iwmp_district d, iwmp_state s, iwmp_m_wc w where p.dcode = d.dcode and d.st_code = s.st_code and p.status='C' and d.dcode = :dcode and p.proj_id = :pcode  and p.proj_id = w.proj_id)as integer) as no_wc from iwmp_m_project as p,iwmp_district d, iwmp_state s where p.dcode = d.dcode and d.st_code = s.st_code and p.status='C'  and d.dcode = :dcode and p.proj_id = :pcode  GROUP BY s.st_name, s.st_code order by s.st_name
getmonthYear=select cast(date_part('month', CURRENT_DATE) as integer) as monthid, cast(to_char(CURRENT_DATE, 'Month') as character varying(10)) as monthname, (select max(fin_yr_cd) from iwmp_m_fin_year) as fin_cd, (select  max(fin_yr_desc) from iwmp_m_fin_year) as fin_yr
checkprojProfile=select evaluation_id from wdcpmksy_project_profile_evaluation where proj_id = :projid and status = 'D'
#fetchProjProfileData=select project_profile_id as pro_profileid, project_cost as sanctioned_cost, central_share as central, state_share as state, project_area as sanctioned_area, village_covered as no_vc, watershed_committee as no_wc, member_watershed_committee as member_wc , household from wdcpmksy_project_profile_evaluation where proj_id = :pcode and status = 'D'
fetchProjProfileData=select (select s.st_code from iwmp_state s, iwmp_district d, iwmp_m_project p where s.st_code  = d.st_code and d.dcode = p.dcode and p.proj_id = :pcode) as st_code, project_profile_id as pro_profileid, project_cost as sanctioned_cost, central_share as central, state_share as state, project_area as sanctioned_area, village_covered as no_vc, watershed_committee as no_wc, member_watershed_committee as member_wc , household from wdcpmksy_project_profile_evaluation where proj_id = :pcode and status = 'D'
getMandayDeatails=select culturable_wasteland, whs_constructed_rejuvenated, soil_moisture, protective_irrigation, degraded_rainfed, farmer_income, farmer_benefited, mandays_generated, dug_well, tube_well, control_culturable_wasteland, control_whs_constructed_rejuvenated, control_soil_moisture, control_protective_irrigation, control_degraded_rainfed, control_farmer_income, control_farmer_benefited, control_mandays_generated, control_dug_well, control_tube_well  from wdcpmksy_mandays_details where project_profile_id=:profileid
getIndicatorEvaluation=select admin_mechanism, admin_mechanism_remark, dpr_slna, dpr_slna_remark, all_manpower, all_manpower_remark, wcdc, wcdc_remark, pia, pia_remark, wc, wc_remark from wdcpmksy_indicator_evaluation where project_profile_id=:profileid
getProjectProfileId = from WdcpmksyProjectProfileEvaluation where iwmpMProject.projectId =:projId and iwmpMFinYear.finYrCd = :finYrCd and iwmpMMonth.finmonthId = :monthId
getExecutionPlanWork=select created_work, created_work_remark, completed_work, completed_work_remark, ongoing_work, ongoing_work_remark from wdcpmksy_execution_planned_work where project_profile_id=:profileid
getEcoPerspective=select natural_resource, natural_resource_remark,norms_relating, norms_relating_remark,antural_asset,antural_asset_remark,control_natural_resource,control_norms_relating,control_antural_asset from wdcpmksy_ecological_perspective where project_profile_id=:profileid

getcurrentFinYear=from IwmpMFinYear where finYrCd = (select max(finYrCd) from IwmpMFinYear)
getprojMonth=WITH current_financial_month AS (SELECT CASE WHEN EXTRACT(MONTH FROM CURRENT_DATE) >= 4 THEN EXTRACT(MONTH FROM CURRENT_DATE) - 3 ELSE EXTRACT(MONTH FROM CURRENT_DATE) + 9 END AS current_month)SELECT CAST(fin_month_id AS INTEGER) AS monthid, month_name AS monthname FROM iwmp_m_month WHERE fin_month_id > ( SELECT COALESCE(MAX(fin_month_id), 0) FROM wdcpmksy_project_profile_evaluation WHERE proj_id = :proj  AND status = 'C' and fin_yr_cd = (select max(fin_yr_cd) from iwmp_m_fin_year)) AND fin_month_id <= (SELECT current_month FROM current_financial_month) ORDER BY fin_month_id;
getprojstatus=select p.proj_name as projname, m.month_name as monthname, cast(count(*)  as integer) as projcount from iwmp_m_project p, wdcpmksy_project_profile_evaluation e, iwmp_m_month m where e.proj_id = :projid and e.fin_month_id != :month and e.status = 'D' and p.proj_id = e.proj_id and m.fin_month_id = e.fin_month_id group by p.proj_name, m.month_name
getQualityShapeFile=select shape_file_area, shape_file_area_remark, variation_area, variation_area_remark from wdcpmksy_quality_shape_files where project_profile_id=:profileid
getStatusGeotagWork=select geo_tagg_work, geo_tagg_work_remark from wdcpmksy_status_geotagg_work where project_profile_id=:profileid
getFundUtilization=select central_share_prestatus, central_share_midstatus, central_share_remark, state_share_prestatus, state_share_midstatus, state_share_remark, total_fund_prestatus, total_fund_midstatus, total_fund_remark, total_fund_planned_prestatus, total_fund_planned_midstatus, total_fund_planned_remark, total_expenditure_prestatus, total_expenditure_midstatus, total_expenditure_remark from wdcpmksy_fund_utilization where project_profile_id=:profileid
projByDCode=select p.projectId, p.projName from IwmpMProject p where p.iwmpDistrict.dcode = :dCode order by p.projName
getprojevorptDetails=from WdcpmksyProjectProfileEvaluation e where e.iwmpMProject.projectId = :pCode and e.status = 'C'



getLivelihoodData=select ld.livelihood_detail_id as elp_id, l.livelihood_coreactivity_desc as elp_desc, ld.no_activities, ld.sc, ld.st, ld.other, (ld.sc + ld.st + ld.other) as total, ld.women, ld.pre_avg_income, ld.post_avg_income from livelihood_epa_prod m, livelihood_detail ld, m_livelihood_coreactivity l where ld.lep_id=m.lep_id and ld.livelihood_coreactivity_id=l.livelihood_coreactivity_id and ld.livelihood_detail_id not in (select livelihood_coreactivity_id from wdcpmksy_livelihood_workid where proj_id=(case when 0=:pid then proj_id else :pid end)) and m.proj_id=(case when 0=:pid then proj_id else :pid end) and ld.status='C'
getProductionData=select pd.production_detail_id as elp_id, p.productivity_coreactivity_desc as elp_desc, c.crop_desc, pd.no_activities, pd.sc, pd.st, pd.other, (pd.sc + pd.st + pd.other) as total, pd.women, pd.pre_avg_income, pd.post_avg_income from livelihood_epa_prod m join production_detail pd on pd.lep_id=m.lep_id left join m_productivity_coreactivity p on pd.livelihood_coreactivity_id=p.productivity_coreactivity_id left join m_croptype c on pd.crop_id=c.crop_id where pd.production_detail_id not in (select productivity_coreactivity_id from wdcpmksy_prdouction_workid where proj_id=(case when 0=:pid then proj_id else :pid end)) and m.proj_id=(case when 0=:pid then proj_id else :pid end) and pd.status='C'
getEpaData=select ed.epa_detail_id as elp_id, e.epa_desc as elp_desc, ed.no_activities from livelihood_epa_prod m, epa_detail ed, m_epa_coreactivity e where ed.lep_id=m.lep_id and ed.epa_activity_id=e.epa_activity_id and ed.epa_detail_id not in (select epa_detail_id from wdcpmksy_epa_workid where proj_id=(case when 0=:pid then proj_id else :pid end)) and m.proj_id=(case when 0=:pid then proj_id else :pid end) and ed.status='C'

getLivelihoodWorkid=select ls.assetid as work_id, lc.livelihood_coreactivity_desc as elp_activity, v.village_name, g.gram_panchayat_name, b.block_name, ls.startdate, ls.completiondate, ls.status, lw.nearby as land_identification from wdcpmksy_project_asset_livelihood_status ls, wdcpmksy_livelihood_workid lw, m_livelihood_coreactivity lc, iwmp_village v, iwmp_gram_panchayat g, iwmp_block b where ls.assetid=lw.assetid and lw.livelihood_coreactivity_id=lc.livelihood_coreactivity_id and lw.vcode=v.vcode and v.gcode=g.gcode and g.bcode=b.bcode and ls.status in ('C','F') and ls.projid=(case when 0=:pid then proj_id else :pid end) and lc.livelihood_coreactivity_id=(case when 0=:aid then lc.livelihood_coreactivity_id else :aid end)
getProductionWorkid=select ps.assetid as work_id, pc.productivity_coreactivity_desc as elp_activity, v.village_name, g.gram_panchayat_name, b.block_name, ps.startdate, ps.completiondate, ps.status, pw.nearby as land_identification from wdcpmksy_project_asset_prod_status ps, wdcpmksy_prdouction_workid pw, m_productivity_coreactivity pc, iwmp_village v, iwmp_gram_panchayat g, iwmp_block b where ps.assetid=pw.assetid and pw.productivity_coreactivity_id=pc.productivity_coreactivity_id and pw.vcode=v.vcode and v.gcode=g.gcode and g.bcode=b.bcode and ps.status in ('C','F') and ps.projid=(case when 0=:pid then proj_id else :pid end) and pc.productivity_coreactivity_id=(case when 0=:aid then pc.productivity_coreactivity_id else :aid end)
getEpaWorkid=select es.assetid as work_id, ec.epa_desc as elp_activity, v.village_name, g.gram_panchayat_name, b.block_name, es.startdate, es.completiondate, es.status, ew.nearby as land_identification from wdcpmksy_project_asset_epa_status es, wdcpmksy_epa_workid ew, m_epa_coreactivity ec, iwmp_village v, iwmp_gram_panchayat g, iwmp_block b where es.assetid=ew.assetid and ew.epa_activity_id=ec.epa_activity_id and ew.vcode=v.vcode and v.gcode=g.gcode and g.bcode=b.bcode and es.status in ('C','F') and es.projid=(case when 0=:pid then proj_id else :pid end) and ec.epa_activity_id=(case when 0=:aid then ec.epa_activity_id else :aid end)

unfreezeShgDetails=select m.shg_id, d.name,ds.scheme_description, to_char(d.reg_date, 'DD/MM/YYYY') as reg_date,coalesce(d.status,'A') as status,d.account_detail,d.ifsc_code,  d.shg_detail_id from shg_detail d, shg_main m, m_department_scheme ds where m.shg_id = d.shg_id and ds.department_scheme_id_pk=d.department_scheme_id and m.group_type= :grp and m.proj_id=:project and m.status='C' order by d.name
unfreezeShgAccountDetails=select m.shg_id, d.name,ds.scheme_description, to_char(d.reg_date, 'DD/MM/YYYY') as reg_date,coalesce(d.status,'A') as status,d.account_detail,d.ifsc_code,  d.shg_detail_id from shg_detail d, shg_main m, m_department_scheme ds where m.shg_id = d.shg_id and ds.department_scheme_id_pk=d.department_scheme_id and m.group_type= :grp and m.proj_id=:project and d.status='C' order by d.name
getquarttargetdata=WITH IndicatorGroups AS (SELECT i.indicators_id, CASE WHEN i.indicators_id IN (20, 21) THEN 'Area of degraded land covered/Rainfed area developed (in ha.)' WHEN i.indicators_id IN (1, 2) THEN 'Area brought under plantation (Afforestation/Horticulture) (in ha.)' WHEN i.indicators_id IN (4, 5) THEN 'No. of water harvesting structure (created/renovated)' WHEN i.indicators_id IN (6, 7) THEN 'Area brought under protective irrigation (created/renovated) (in ha.)' WHEN i.indicators_id = 3 THEN 'Area covered with soil and moisture conservation activities (in ha.)' WHEN i.indicators_id = 26 THEN 'No. of farmers benefitted' WHEN i.indicators_id = 27 THEN 'No. of man-days generated'  WHEN i.indicators_id = 22 THEN 'Additional area brought under diversified crops/change in cropping system (in ha.)' WHEN i.indicators_id = 23 THEN 'Area brought from no crop/single crop to single/multiple crop (in ha.)' WHEN i.indicators_id = 24 THEN 'Increase in cropped area (in ha.)' ELSE i.indicators_desc  END AS indicators_group FROM wdcpmksy_m_quad_indicators i), IndicatorData AS ( SELECT  g.indicators_group, SUM(CASE WHEN t.q1status = 'C' THEN t.first_quad ELSE 0 END) AS quad1, SUM(CASE WHEN t.q2status = 'C' THEN t.second_quad ELSE 0 END) AS quad2, SUM(CASE WHEN t.q3status = 'C' THEN t.third_quad ELSE 0 END) AS quad3, SUM(CASE WHEN t.q4status = 'C' THEN t.fourth_quad ELSE 0 END) AS quad4,  SUM(CASE WHEN t.q1status = 'C' THEN t.first_quad ELSE 0 END) + SUM(CASE WHEN t.q2status = 'C' THEN t.second_quad ELSE 0 END) + SUM(CASE WHEN t.q3status = 'C' THEN t.third_quad ELSE 0 END) + SUM(CASE WHEN t.q4status = 'C' THEN t.fourth_quad ELSE 0 END) AS total_quad  FROM  wdcpmksy_quad_target t JOIN IndicatorGroups g ON t.indicator_id = g.indicators_id JOIN iwmp_m_fin_year f ON t.fin_yr_cd = f.fin_yr_cd JOIN iwmp_m_project pr ON pr.proj_id = t.proj_id JOIN iwmp_district d ON d.dcode = pr.dcode  JOIN iwmp_state s ON s.st_code = d.st_code WHERE f.fin_yr_cd = (CASE :finyear WHEN 0 THEN f.fin_yr_cd ELSE :finyear END)  AND t.stcode = (CASE :state WHEN 0 THEN t.stcode ELSE :state END) GROUP BY g.indicators_group) SELECT indicators_group, quad1, quad2, quad3, quad4, total_quad FROM IndicatorData ORDER BY CASE indicators_group WHEN 'Area of degraded land covered/Rainfed area developed (in ha.)' THEN 1 WHEN 'Area covered with soil and moisture conservation activities (in ha.)' THEN 2 WHEN 'Area brought under plantation (Afforestation/Horticulture) (in ha.)' THEN 3 WHEN 'No. of water harvesting structure (created/renovated)' THEN 4 WHEN 'No. of farmers benefitted' THEN 5 WHEN 'Area brought under protective irrigation (created/renovated) (in ha.)' THEN 6 WHEN 'No. of man-days generated' THEN 7 WHEN 'Additional area brought under diversified crops/change in cropping system (in ha.)' THEN 8 WHEN 'Area brought from no crop/single crop to single/multiple crop (in ha.)' THEN 9 WHEN 'Increase in cropped area (in ha.)' THEN 10 ELSE 11 END;
checkcompletedstatus = FROM WdcpmksyQuadTarget t WHERE t.iwmpMProject.projectId = :projId AND t.iwmpMFinYear.finYrCd = :finYrCd AND ((t.q1status = 'C' AND t.q2status = 'C' AND t.q3status = 'C' AND t.q4status = 'C') or (t.q1status = 'S' AND t.q2status = 'S' AND t.q3status = 'S' AND t.q4status = 'S'))

activtiyWiseYrlyEpaWork=select estatus.epa_activity_id as activity_code, epa_desc as activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.epa_activity_id, epa_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_epa_workid p, wdcpmksy_project_asset_epa_status s, m_epa_coreactivity a where p.assetid=s.assetid and p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code= case :stcd when 0 then st_code else :stcd end)) group by a.epa_activity_id order by a.epa_activity_id) as estatus join (select a.epa_activity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_epa_workid p, wdcpmksy_project_asset_epa_status s where p.assetid=s.assetid and p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_epa_workid p where p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as uptototwork from  m_epa_coreactivity a  group by a.epa_activity_id order by a.epa_activity_id) as efin on efin.epa_activity_id = estatus.epa_activity_id
distWiseYrlyEpaActWork=select estatus.epa_activity_id as activity_code, epa_desc as activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.epa_activity_id, epa_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_epa_workid p, wdcpmksy_project_asset_epa_status s, m_epa_coreactivity a where p.assetid=s.assetid and p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode =:distcd) group by a.epa_activity_id order by a.epa_activity_id) as estatus join (select a.epa_activity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_epa_workid p, wdcpmksy_project_asset_epa_status s where p.assetid=s.assetid and p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode=:distcd)), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_epa_workid p where p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode= :distcd)), 0) as integer) as uptototwork from  m_epa_coreactivity a  group by a.epa_activity_id order by a.epa_activity_id) as efin on efin.epa_activity_id = estatus.epa_activity_id
projWiseYrlyEpaActWork=select estatus.epa_activity_id as activity_code, epa_desc as activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.epa_activity_id, epa_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_epa_workid p, wdcpmksy_project_asset_epa_status s, m_epa_coreactivity a where p.assetid=s.assetid and p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id = :projid group by a.epa_activity_id order by a.epa_activity_id) as estatus join (select a.epa_activity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_epa_workid p, wdcpmksy_project_asset_epa_status s where p.assetid=s.assetid and p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id = :projid), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_epa_workid p where p.epa_activity_id=a.epa_activity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id = :projid), 0) as integer) as uptototwork from  m_epa_coreactivity a  group by a.epa_activity_id order by a.epa_activity_id) as efin on efin.epa_activity_id = estatus.epa_activity_id

activtiyWiseYrlyLivWork=select estatus.livelihood_coreactivity_id as activity_code, livelihood_coreactivity_desc activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.livelihood_coreactivity_id, livelihood_coreactivity_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_livelihood_workid p, wdcpmksy_project_asset_livelihood_status s, m_livelihood_coreactivity a where p.assetid=s.assetid and p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end)) group by a.livelihood_coreactivity_id order by a.livelihood_coreactivity_id) as estatus join (select a.livelihood_coreactivity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_livelihood_workid p, wdcpmksy_project_asset_livelihood_status s where p.assetid=s.assetid and p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_livelihood_workid p where p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as uptototwork from  m_livelihood_coreactivity a  group by a.livelihood_coreactivity_id order by a.livelihood_coreactivity_id) as efin on efin.livelihood_coreactivity_id = estatus.livelihood_coreactivity_id
distWiseYrlyLivActWork=select estatus.livelihood_coreactivity_id as activity_code, livelihood_coreactivity_desc activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.livelihood_coreactivity_id, livelihood_coreactivity_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_livelihood_workid p, wdcpmksy_project_asset_livelihood_status s, m_livelihood_coreactivity a where p.assetid=s.assetid and p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode =:distcd) group by a.livelihood_coreactivity_id order by a.livelihood_coreactivity_id) as estatus join (select a.livelihood_coreactivity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_livelihood_workid p, wdcpmksy_project_asset_livelihood_status s where p.assetid=s.assetid and p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode =:distcd)), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_livelihood_workid p where p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode =:distcd)), 0) as integer) as uptototwork from  m_livelihood_coreactivity a  group by a.livelihood_coreactivity_id order by a.livelihood_coreactivity_id) as efin on efin.livelihood_coreactivity_id = estatus.livelihood_coreactivity_id
projWiseYrlyLivActWork=select estatus.livelihood_coreactivity_id as activity_code, livelihood_coreactivity_desc activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.livelihood_coreactivity_id, livelihood_coreactivity_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_livelihood_workid p, wdcpmksy_project_asset_livelihood_status s, m_livelihood_coreactivity a where p.assetid=s.assetid and p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id =:projid group by a.livelihood_coreactivity_id order by a.livelihood_coreactivity_id) as estatus join (select a.livelihood_coreactivity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_livelihood_workid p, wdcpmksy_project_asset_livelihood_status s where p.assetid=s.assetid and p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id =:projid), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_livelihood_workid p where p.livelihood_coreactivity_id=a.livelihood_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id =:projid), 0) as integer) as uptototwork from  m_livelihood_coreactivity a  group by a.livelihood_coreactivity_id order by a.livelihood_coreactivity_id) as efin on efin.livelihood_coreactivity_id = estatus.livelihood_coreactivity_id

activityWiseYrlyProdWork=select estatus.productivity_coreactivity_id as activity_code, productivity_coreactivity_desc as activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.productivity_coreactivity_id, productivity_coreactivity_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_prdouction_workid p, wdcpmksy_project_asset_prod_status s, m_productivity_coreactivity a where p.assetid=s.assetid and p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end)) group by a.productivity_coreactivity_id order by a.productivity_coreactivity_id) as estatus join (select a.productivity_coreactivity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_prdouction_workid p, wdcpmksy_project_asset_prod_status s where p.assetid=s.assetid and p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_prdouction_workid p where p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode in(select dcode from iwmp_district where st_code=case :stcd when 0 then st_code else :stcd end))), 0) as integer) as uptototwork from  m_productivity_coreactivity a  group by a.productivity_coreactivity_id order by a.productivity_coreactivity_id) as efin on efin.productivity_coreactivity_id = estatus.productivity_coreactivity_id
distWiseYrlyProdActWork=select estatus.productivity_coreactivity_id as activity_code, productivity_coreactivity_desc as activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.productivity_coreactivity_id, productivity_coreactivity_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_prdouction_workid p, wdcpmksy_project_asset_prod_status s, m_productivity_coreactivity a where p.assetid=s.assetid and p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode =:distcd) group by a.productivity_coreactivity_id order by a.productivity_coreactivity_id) as estatus join (select a.productivity_coreactivity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_prdouction_workid p, wdcpmksy_project_asset_prod_status s where p.assetid=s.assetid and p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id in (select proj_id from iwmp_m_project where dcode =:distcd)), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_prdouction_workid p where p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id in (select proj_id from iwmp_m_project where dcode =:distcd)), 0) as integer) as uptototwork from  m_productivity_coreactivity a  group by a.productivity_coreactivity_id order by a.productivity_coreactivity_id) as efin on efin.productivity_coreactivity_id = estatus.productivity_coreactivity_id
projWiseYrlyProdActWork=select estatus.productivity_coreactivity_id as activity_code, productivity_coreactivity_desc as activity_desc, uptototwork, cast(uptoongoingwork as integer) as uptoongoingwork, cast(uptocompletework as integer) as uptocompletework, cast(uptoforclosework as integer) as uptoforclosework, yearcompletework from(select a.productivity_coreactivity_id, productivity_coreactivity_desc, count(case when s.status='O' then s.assetid end) as uptoongoingwork, count(case when s.status='C' then s.assetid end) as uptocompletework, count(case when s.status='F' then s.assetid end) as uptoforclosework from wdcpmksy_prdouction_workid p, wdcpmksy_project_asset_prod_status s, m_productivity_coreactivity a where p.assetid=s.assetid and p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id =:projid group by a.productivity_coreactivity_id order by a.productivity_coreactivity_id) as estatus join (select a.productivity_coreactivity_id, cast(COALESCE((select count(s.assetid) from wdcpmksy_prdouction_workid p, wdcpmksy_project_asset_prod_status s where p.assetid=s.assetid and p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in(select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd=:finyr) and s.status='C' and p.proj_id =:projid), 0) as integer) as yearcompletework, cast(COALESCE((select count(assetid) from wdcpmksy_prdouction_workid p where p.productivity_coreactivity_id=a.productivity_coreactivity_id and p.status='C' and case when cast(substring(cast(p.createdon as character varying) from 6 for 2) as integer)>3 then cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer) else cast(substring(cast(p.createdon as character varying) from 3 for 2) as integer)-1 end in (select fin_yr_cd from iwmp_m_fin_year where fin_yr_cd<=:finyr) and p.proj_id =:projid), 0) as integer) as uptototwork from  m_productivity_coreactivity a  group by a.productivity_coreactivity_id order by a.productivity_coreactivity_id) as efin on efin.productivity_coreactivity_id = estatus.productivity_coreactivity_id
unfreezeFpoDetails=select m.fpo_id, m.totalno, d.fpo_detail_id, d.fpo_name, md.scheme_description as dept_org, d.registration_no, d.registration_date, d.no_of_members, array_to_string(array_agg(mc.fpo_coreactivity_desc), ', ')as coreactivity, d.turnover, d.no_of_farmer_associated, m.status from fpo_main m,fpo_detail d, fpo_coreaactivity_detail cd,m_department_scheme md, m_fpo_coreactivity mc where m.fpo_type = :group and m.proj_id = :projectId  and m.fpo_id = d.fpo_id and md.department_scheme_id_pk = d.dept_org and d.fpo_detail_id=cd.fpo_detail_id and mc.fpo_coreactivity_id=cd.fpo_coreactivity_id and m.status = 'c' group by m.fpo_id, d.fpo_name,d.turnover, d.no_of_farmer_associated ,md.scheme_description, d.fpo_detail_id order by m.fpo_id, d.fpo_name,d.turnover, d.no_of_farmer_associated ,d.fpo_detail_id
districtListWatershedyatra=from IwmpDistrict where iwmpState.stCode=:stcode order by distName asc
blockListWatershedyatra=from IwmpBlock where iwmpDistrict.dcode=:distcode order by blockName
grampanListWatershedyatra=from IwmpGramPanchayat where iwmpBlock.bcode=:blkcode order by gramPanchayatName
villageListWatershedyatra=from IwmpVillage where iwmpGramPanchayat.gcode=:gpscode order by villageName
getDraftListofNodalOfficer=select nodal_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, cast(dcode as character varying(10)) as dcode, (select dist_name from iwmp_district where dcode=n.dcode) as district, cast(bcode as character varying(10)) as bcode, (select block_name from iwmp_block where bcode=n.bcode) as blockname, nodal_name, designation, mobile, email, level, status from nodal_officer n where st_code=:statecd and status='D' order by nodal_id, stname, district, blockname 
getRoutePlanVanTravel=select route_plan_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, cast(dcode as character varying(10)) as dcode, (select dist_name from iwmp_district where dcode=n.dcode) as district, cast(bcode as character varying(10)) as bcode, (select block_name from iwmp_block where bcode=n.bcode) as blockname, cast(gcode as character varying(10)) as gcode, (select gram_panchayat_name from iwmp_gram_panchayat where gcode=n.gcode) as gramname, cast(vcode as character varying(10)) as vcode, (select village_name from iwmp_village where vcode=n.vcode ) as villagename, location1, to_char(date1, 'DD/MM/YYYY HH24:MI:SS') as date1, location2, to_char(date2, 'DD/MM/YYYY HH24:MI:SS') as date2, status, flagwise from route_plan_van_travel n where st_code=:statecd  order by route_plan_id desc
getCompleteListofNodalOfficer=select nodal_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, cast(dcode as character varying(10)) as dcode, (select dist_name from iwmp_district where dcode=n.dcode) as district, cast(bcode as character varying(10)) as bcode, (select block_name from iwmp_block where bcode=n.bcode) as blockname, nodal_name, designation, mobile, email, level, status from nodal_officer n where st_code=:statecd and status='C' order by nodal_id, stname, district, blockname
cultListWatershedyatra=from MCulturalActivity where mCulturalActivity.culturalId=:cultActivityId order by culturalName
getnotcomMonth = from IwmpMMonth where achievStatus is null order by finmonthId
getphyAchRecords = from WdcpmksyProjectPhysicalAchievementDetails d join fetch d.wdcpmksyProjectPhysicalAchievement a join fetch d.iwmpMPhyActivity p join fetch p.iwmpMPhyHeads h where a.iwmpMProject.projectId = :project and a.iwmpMMonth.monthId= :month and a.iwmpMFinYear.finYrCd = :fyear and a.status = 'C' 

phyachquery1 = delete from wdcpmksy_project_phy_ach_tranx where achievement_id = :achievementid
phyachquery2 = delete from wdcpmksy_project_phy_ach_details where achievement_id = :achievementid
phyachquery3 = delete from public.wdcpmksy_project_phy_asset_achievement where asset_id in (select assetid from public.iwmp_project_asset_status where projid = :project) and month_id = :month and fin_yr_cd = :year
phyachquery4 = delete from wdcpmksy_project_phy_achievement where achievement_id = :achievementid
getWyatraDetails=select watershed_yatra_id, to_char(yatra_date1, 'DD/MM/YYYY HH24:MI:SS') as date, st_code, (select st_name from iwmp_state where st_code=wy.st_code) as stname, dcode as district,(select dist_name from iwmp_district where dcode=wy.dcode) as distname, bcode as block, (select block_name from iwmp_block where bcode=wy.bcode) as blockname,gcode as grampan,(select gram_panchayat_name from iwmp_gram_panchayat where gcode=wy.gcode) as gpname,vcode as village,(select village_name from iwmp_village where vcode=wy.vcode) as villagename,yatra_location as location, male_participants, female_participants, central_minister as central_ministers, state_minister as state_ministers, parliament_members as parliament, legislative_assembly_members as assembly_members, legislative_council_members as council_members, other_public_representatives as others, gov_officials,no_of_ar_experience_people,cast(bhumi_jal_sanrakshan as character varying(10)) as bhumi_jal_sanrakshan, cast(watershed_yatra_film as character varying(10)) as watershed_yatra_film, quiz_participants as quiz_participants, cultural_activity_id, (select cultural_name from m_cultural_activity where cultural_id=wy.cultural_activity_id) as cultural_name, bhoomi_poojan_no_of_works as no_works_bhoomipoojan, bhoomi_poojan_cost_of_works as tot_works_bhoomipoojan, lokarpan_no_of_works as no_works_lokarpan, lokarpan_cost_of_works as tot_works_lokarpan, shramdaan_no_of_location as no_location_shramdaan, shramdaan_no_of_participated_people as no_people_shramdaan, plantation_area as area_plantation,man_hr as manhour, no_of_agro_forsetry as no_plantation, award_distribution as no_awards, cast (SUM(CASE WHEN ar_experience_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN ar_experience_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhumi_jal_sanrakshan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhumi_jal_sanrakshan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN yatra_film_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN yatra_film_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN quiz_participants_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN quiz_participants_path2 IS NOT NULL THEN 1 ELSE 0 END +CASE WHEN cultural_activity_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN cultural_activity_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhoomi_poojan_path1 IS NOT NULL THEN 1 ELSE 0 END +CASE WHEN bhoomi_poojan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN lokarpan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN lokarpan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN shramdaan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN shramdaan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN plantation_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN plantation_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN award_distribution_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN award_distribution_path2 IS NOT NULL THEN 1 ELSE 0 END) as integer) AS image_count from watershed_yatra_village_level wy where st_code=:statecd group by wy.watershed_yatra_id order by date,stname, distname, blockname,gpname,villagename
getInaugurationDetails=select inauguaration_id, to_char(inauguaration_date, 'DD/MM/YYYY') as date, st_code, (select st_name from iwmp_state where st_code=i.st_code) as stname, dcode as district, (select dist_name from iwmp_district where dcode=i.dcode) as distname, bcode as block, (select block_name from iwmp_block where bcode=i.bcode) as blockname, inauguaration_location as location, male_participants, female_participants, central_minister as central_ministers, state_minister as state_ministers, parliament_members as parliament, legislative_assembly_members as assembly_members, legislative_council_members as council_members, other_public_representatives as others, gov_officials, cast(van_flag_off as character varying(10)) as flagoff, cast(theme_song as character varying(10)) as themesong, bhoomi_poojan_no_of_works as no_works_bhoomipoojan, bhoomi_poojan_cost_of_works as tot_works_bhoomipoojan, lokarpan_no_of_works as no_works_lokarpan, lokarpan_cost_of_works as tot_works_lokarpan, shramdaan_no_of_location as no_location_shramdaan, shramdaan_no_of_participated_people as no_people_shramdaan, man_hr as man, plantation_area as area_plantation, no_of_agro_forsetry as no_plantation, award_distribution as no_awards, cast(SUM(CASE WHEN van_flag_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN van_flag_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN theme_song_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN theme_song_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhoomi_poojan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhoomi_poojan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN lokarpan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN lokarpan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN shramdaan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN shramdaan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN plantation_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN plantation_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN award_distribution_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN award_distribution_path2 IS NOT NULL THEN 1 ELSE 0 END) as integer) AS image_count from watershed_yatra_inauguaration i where st_code=:statecd GROUP BY i.inauguaration_id order by date, stname, distname, blockname desc
getInaugurationData=select inauguaration_id, to_char(inauguaration_date, 'DD/MM/YYYY') as date, st_code, (select st_name from iwmp_state where st_code=i.st_code) as stname, dcode as district, (select dist_name from iwmp_district where dcode=i.dcode) as distname, bcode as block, (select block_name from iwmp_block where bcode=i.bcode) as blockname, inauguaration_location as location, male_participants, female_participants, central_minister as central_ministers, state_minister as state_ministers, parliament_members as parliament, legislative_assembly_members as assembly_members, legislative_council_members as council_members, other_public_representatives as others, gov_officials, cast(van_flag_off as character varying(10)) as flagoff, cast(theme_song as character varying(10)) as themesong, bhoomi_poojan_no_of_works as no_works_bhoomipoojan, bhoomi_poojan_cost_of_works as tot_works_bhoomipoojan, lokarpan_no_of_works as no_works_lokarpan, lokarpan_cost_of_works as tot_works_lokarpan, shramdaan_no_of_location as no_location_shramdaan, shramdaan_no_of_participated_people as no_people_shramdaan, man_hr as man, plantation_area as area_plantation, no_of_agro_forsetry as no_plantation, award_distribution as no_awards, cast(SUM(CASE WHEN van_flag_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN van_flag_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN theme_song_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN theme_song_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhoomi_poojan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhoomi_poojan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN lokarpan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN lokarpan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN shramdaan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN shramdaan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN plantation_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN plantation_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN award_distribution_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN award_distribution_path2 IS NOT NULL THEN 1 ELSE 0 END) as integer) AS image_count from watershed_yatra_inauguaration i where st_code=(case when :statecd=0 then st_code else :statecd end) and dcode=(case when :distcd=0 then dcode else :distcd end) and bcode=(case when :blkcd=0 then bcode else :blkcd end) group by inauguaration_id order by stname, distname, blockname
blocklistbydistcdwatershed=from IwmpBlock WHERE iwmpDistrict.dcode=:distcod order by blockName
gplistbyblkcdwatershed=from IwmpGramPanchayat where iwmpBlock.bcode=:blkcd order by gramPanchayatName
getRoutePlanVanTravelwatershed=select route_plan_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, cast(dcode as character varying(10)) as dcode, (select dist_name from iwmp_district where dcode=n.dcode) as district, cast(bcode as character varying(10)) as bcode, (select block_name from iwmp_block where bcode=n.bcode) as blockname, cast(gcode as character varying(10)) as gcode, (select gram_panchayat_name from iwmp_gram_panchayat where gcode=n.gcode) as gramname, cast(vcode as character varying(10)) as vcode, (select village_name from iwmp_village where vcode=n.vcode ) as villagename, location1, to_char(date1, 'DD/MM/YYYY HH24:MI:SS') as date1, location2, to_char(date2, 'DD/MM/YYYY HH24:MI:SS') as date2, status, flagwise from route_plan_van_travel n where status='C' and st_code=:statecd and dcode=(case when :distcd=0 then dcode else :distcd end) and bcode=(case when :blkcd=0 then bcode else :blkcd end) and gcode=(case when :gpkcd=0 then gcode else :gpkcd end) order by route_plan_id desc
getNodalOfficerwatershedAllLevel=select nodal_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, cast(dcode as character varying(10)) as dcode, (select dist_name from iwmp_district where dcode=n.dcode) as district, cast(bcode as character varying(10)) as bcode, (select block_name from iwmp_block where bcode=n.bcode) as blockname, nodal_name, designation, mobile, email, level, status from nodal_officer n where st_code=:statecd and status='C' order by level desc, stname, district, blockname
getNodalOfficerwatershedStateLevel=select nodal_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, nodal_name, designation, mobile, email, level, status from nodal_officer n where st_code=:statecd and status='C' and level='state' order by nodal_id
getNodalOfficerwatersheddistrictLevel=select nodal_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, cast(dcode as character varying(10)) as dcode, (select dist_name from iwmp_district where dcode=n.dcode) as district, nodal_name, designation, mobile, email, level, status from nodal_officer n where st_code=:statecd and status='C' and level='district' and dcode=(case when :distcd=0 then dcode else :distcd end) order by stname, district
getNodalOfficerwatershedblockLevel=select nodal_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, cast(dcode as character varying(10)) as dcode, (select dist_name from iwmp_district where dcode=n.dcode) as district, cast(bcode as character varying(10)) as bcode, (select block_name from iwmp_block where bcode=n.bcode) as blockname, nodal_name, designation, mobile, email, level, status from nodal_officer n where st_code=:statecd and status='C' and level='block' and dcode=(case when :distcd=0 then dcode else :distcd end) and bcode=(case when :blkcd=0 then bcode else :blkcd end) order by stname, district, blockname
getNodalOfficerwatershedvillLevel=select nodal_id, cast(st_code as character varying(10)) as st_code, (select st_name from iwmp_state where st_code=n.st_code) as stname, cast(dcode as character varying(10)) as dcode, (select dist_name from iwmp_district where dcode=n.dcode) as district, cast(bcode as character varying(10)) as bcode, (select block_name from iwmp_block where bcode=n.bcode) as blockname, nodal_name, designation, mobile, email, level, status from nodal_officer n where st_code=:statecd and status='C' and level='village' and dcode=(case when :distcd=0 then dcode else :distcd end) and bcode=(case when :blkcd=0 then bcode else :blkcd end) order by stname, district, blockname
getWatershedYatraReport=select watershed_yatra_id, to_char(yatra_date1, 'DD/MM/YYYY') as date, to_char(yatra_date1, 'HH24:MI:SS') as timed, st_code, (select st_name from iwmp_state where st_code=wy.st_code) as stname, dcode as district, (select dist_name from iwmp_district where dcode=wy.dcode) as distname, bcode as block, (select block_name from iwmp_block where bcode=wy.bcode) as blockname, gcode as grampan, (select gram_panchayat_name from iwmp_gram_panchayat where gcode=wy.gcode) as gpname, vcode as village,(select village_name from iwmp_village where vcode=wy.vcode) as villagename, yatra_location as location, male_participants, female_participants, central_minister as central_ministers, state_minister as state_ministers, parliament_members as parliament, legislative_assembly_members as assembly_members, legislative_council_members as council_members, other_public_representatives as others, gov_officials, no_of_ar_experience_people, cast(bhumi_jal_sanrakshan as character varying(10)) as bhumi_jal_sanrakshan, cast(watershed_yatra_film as character varying(10)) as watershed_yatra_film, quiz_participants as quiz_participants, cultural_activity_id, (select cultural_name from m_cultural_activity where cultural_id=wy.cultural_activity_id) as cultural_name, bhoomi_poojan_no_of_works as no_works_bhoomipoojan, bhoomi_poojan_cost_of_works as tot_works_bhoomipoojan, lokarpan_no_of_works as no_works_lokarpan, lokarpan_cost_of_works as tot_works_lokarpan, shramdaan_no_of_location as no_location_shramdaan, shramdaan_no_of_participated_people as no_people_shramdaan, plantation_area as area_plantation,man_hr as manhour, no_of_agro_forsetry as no_plantation, award_distribution as no_awards, cast(SUM(CASE WHEN ar_experience_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN ar_experience_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhumi_jal_sanrakshan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhumi_jal_sanrakshan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN yatra_film_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN yatra_film_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN quiz_participants_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN quiz_participants_path2 IS NOT NULL THEN 1 ELSE 0 END +CASE WHEN cultural_activity_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN cultural_activity_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN bhoomi_poojan_path1 IS NOT NULL THEN 1 ELSE 0 END +CASE WHEN bhoomi_poojan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN lokarpan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN lokarpan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN shramdaan_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN shramdaan_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN plantation_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN plantation_path2 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN award_distribution_path1 IS NOT NULL THEN 1 ELSE 0 END + CASE WHEN award_distribution_path2 IS NOT NULL THEN 1 ELSE 0 END) as integer) AS image_count from watershed_yatra_village_level wy where st_code=(case when :statecd=0 then st_code else :statecd end) and dcode=(case when :distcd=0 then dcode else :distcd end) and bcode=(case when :blkcd=0 then bcode else :blkcd end) and gcode=(case when :gpkcd=0 then gcode else :gpkcd end)  group by wy.watershed_yatra_id order by stname, distname, blockname, gpname, villagename



